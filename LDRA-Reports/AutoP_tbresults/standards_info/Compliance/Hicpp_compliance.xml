<?xml version='1.0'?>
<?mso-application progid='Excel.Sheet'?>
<Workbook xmlns='urn:schemas-microsoft-com:office:spreadsheet'
 xmlns:o='urn:schemas-microsoft-com:office:office'
 xmlns:x='urn:schemas-microsoft-com:office:excel'
 xmlns:ss='urn:schemas-microsoft-com:office:spreadsheet'
 xmlns:html='http://www.w3.org/TR/REC-html40'>
 <DocumentProperties xmlns='urn:schemas-microsoft-com:office:office'>
  <LastAuthor>LDRA Standards Wiki</LastAuthor>
  <Created>2014-04-25T08:31:23Z</Created>
  <LastSaved>2014-04-25T08:31:23Z</LastSaved>
  <Version>12.0</Version>
 </DocumentProperties>
 <Styles>
  <Style ss:ID='TableDefault'>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
    <Border ss:Position='Left' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
    <Border ss:Position='Right' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
    <Border ss:Position='Top' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
   </Borders>
  </Style>
  <Style ss:ID='Default' ss:Name='Normal'>
   <Alignment ss:Vertical='Top'/>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
   </Borders>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
   <Interior/>
   <NumberFormat/>
   <Protection/>
  </Style>
  <Style ss:ID='Title' ss:Name='Title' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='1'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='16' ss:Bold='1' ss:Color='#000000'/>
   <Interior ss:Color='#FFCC99' ss:Pattern='Solid'/>
   <Borders>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='Note' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='1'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
   <Interior ss:Color='#CCFFFF' ss:Pattern='Solid'/>
   <Borders>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='Heading' ss:Name='Column Headings' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='1'/>
   <Interior ss:Color='#C0C0C0' ss:Pattern='Solid'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='SummaryClass' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='SummaryValue' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='SummaryTotal' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Interior ss:Color='#C0C0C0' ss:Pattern='Solid'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='ComplianceID' ss:Name='Model Rule Column' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='ComplianceClassification' ss:Name='Classification Column' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='ComplianceLDRA' ss:Name='LDRA Standard Column' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='RuleDefault' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center'/>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='RuleDefaultWrapped' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Left' ss:WrapText='1'/>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='RuleEnhancedCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#88FF88' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleEnhancedCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#88FF88' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleEnhancedCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#88FF88' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleFullCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#CCFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleFullCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#CCFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleFullCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#CCFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePartialCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#FFFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePartialCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#FFFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePartialCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#FFFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePendingCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#CCCCFF' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePendingCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#CCCCFF' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePendingCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#CCCCFF' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleManualCoverage' ss:Parent='RuleDefault'>
  </Style>
  <Style ss:ID='RuleManualCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
  </Style>
  <Style ss:ID='RuleManualCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
  </Style>
 </Styles>
 <Worksheet ss:Name='Summary'>
  <Table ss:StyleID='TableDefault'>
   <Column ss:Index='1' ss:Width='75'/>
   <Column ss:Index='2' ss:Width='75'/>
   <Column ss:Index='3' ss:Width='75'/>
   <Column ss:Index='4' ss:Width='75'/>
   <Column ss:Index='5' ss:Width='75'/>
   <Column ss:Index='6' ss:Width='75'/>
   <Column ss:Index='7' ss:Width='37.5'/>
   <Row ss:Height='20'>
    <Cell ss:StyleID='Title' ss:MergeAcross='6'><Data ss:Type='String'>HIC++ Standards Model Summary for C++</Data></Cell>
   </Row>
   <Row ss:Index='3' ss:AutoFitHeight='1'>
    <Cell ss:StyleID='Note' ss:MergeAcross='6'><Data ss:Type='String'>The LDRA tool suite&reg; is developed and certified to BS EN ISO 9001:2000.</Data></Cell>
   </Row>
   <Row ss:Index='5' ss:AutoFitHeight='1'>
    <Cell ss:StyleID='Note' ss:MergeAcross='6' ss:MergeDown='1'><Data ss:Type='String'>This information is applicable to version 9.4.4 of the LDRA tool suite&reg;.&#10;It is correct as of 25th April 2014.</Data></Cell>
   </Row>
   <Row ss:Index='8' ss:AutoFitHeight='1'>
    <Cell ss:StyleID='Note' ss:MergeAcross='6' ss:MergeDown='6'><Data ss:Type='String'>Compliance is measured against&#10;"High-Integrity C++ Coding Standard Manual, Version 2.2"&#10;18 May 2004&#10;Copyright &copy; The Programming Research Group&#10;&#10;Further information is available at http://www.codingstandard.com/HICPPCM/index.html</Data></Cell>
   </Row>
   <Row ss:Index='16'>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Classification</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Enhanced&#10;Enforcement</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Fully&#10;Implemented</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Partially&#10;Implemented</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Not yet&#10;Implemented</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Not statically&#10;Checkable</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Total</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryClass'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage'><Data ss:Type='Number'>110</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage'><Data ss:Type='Number'>5</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage'><Data ss:Type='Number'>8</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage'><Data ss:Type='Number'>23</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>146</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryClass'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage'><Data ss:Type='Number'>17</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage'><Data ss:Type='Number'>4</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage'><Data ss:Type='Number'>1</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage'><Data ss:Type='Number'>16</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>38</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryClass'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage'><Data ss:Type='Number'>14</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>14</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='String'>Total</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>141</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>9</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>9</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>39</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>198</Data></Cell>
   </Row>
  </Table>
    <WorksheetOptions xmlns='urn:schemas-microsoft-com:office:excel'>
     <PageSetup>
      <Layout x:Orientation='Landscape' x:CenterHorizontal='1'/>
      <Header x:Margin='0.19685039370078741'
       x:Data='&amp;CVersion 9.4.4 Copyright &copy; 2014 LDRA Ltd.&#10;Copies of this document are not to be made or distributed.'/>
      <Footer x:Margin='0.19685039370078741'
       x:Data='&amp;CLDRA Ltd. reserves the right to change any specifications contained within this document without prior notice.&#10;The document was deemed correct at time of distribution.'/>
      <PageMargins x:Bottom='0.78740157480314965' x:Left='0.59055118110236227'
       x:Right='0.59055118110236227' x:Top='0.78740157480314965'/>
     </PageSetup>
     <FitToPage/>
     <Print>
      <FitHeight>0</FitHeight>
      <ValidPrinterInfo/>
      <PaperSizeIndex>9</PaperSizeIndex>
      <Scale>91</Scale>
      <HorizontalResolution>600</HorizontalResolution>
      <VerticalResolution>600</VerticalResolution>
     </Print>
    </WorksheetOptions>
 </Worksheet>
 <Worksheet ss:Name='Compliance'>
  <Names>
   <NamedRange ss:Name='Print_Titles' ss:RefersTo='=Compliance!R1:R3'/>
  </Names>
  <Table ss:StyleID='TableDefault'>
   <Column ss:Index='1' ss:StyleID='ComplianceID'/>
   <Column ss:Index='2' ss:StyleID='ComplianceClassification' ss:Width='95'/>
   <Column ss:Index='3' ss:Width='250'/>
   <Column ss:Index='4' ss:StyleID='ComplianceLDRA' ss:Width='55'/>
   <Column ss:Index='5' ss:Width='250'/>
   <Row ss:AutoRowHeight='1'>
    <Cell ss:StyleID='Title' ss:MergeAcross='4'><Data ss:Type='String'>HIC++ Standards Model Compliance for C++</Data></Cell>
   </Row>
   <Row ss:Index='3'>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Classification</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Rule Description</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>LDRA&#10;Standard</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>LDRA Standard Description</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.1.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Organise 'class' definitions by access level, in the following order : 'public', 'protected', 'private'.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>197 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Access specifiers in invalid order.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.1.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Define class type variables using direct initialisation rather than copy initialisation.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>419 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Deprecated class initialisation.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='6'><Data ss:Type='String'>3.1.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='6'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='6'><Data ss:Type='String'>Declare or define a copy constructor, a copy assignment operator and a destructor for classes which manage resources.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>233 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No copy constructor for class with pointers.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>234 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No assignment operator for class with pointers.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>235 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No destructor for class with pointers.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>236 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>New used in class without assignment op.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>239 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>New used in class without copy constructor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>469 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No copy constructor for complex destructor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>470 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No assignment operator for complex destrtor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.1.4</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use an atomic, non-throwing swap operation to implement the copy-assignment operator ('operator=')</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePendingCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>3.1.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Ensure copy assignment is implemented correctly in terms of self assignment, inheritance, resource management and behaves consistently with the built in assignment operator.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>52 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Member(s) not assigned in = operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>254 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operator = doesn't return reference to *this.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>3.1.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Only inline simple and non virtual functions, such as one line getters and setters.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>266 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Constructor defined within class declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>297 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inline member has more than *** source lines.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>420 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Virtual function should not be inline.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.1.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use the 'inline' keyword for member functions, inline functions by defining them in the class body.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>498 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of inline keyword.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.1.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Declare 'const' any class member function that does not modify the externally visible state of the object.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>46 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Member function may be declared const.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.1.9</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Behaviour should be implemented by only one member function in a class.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>3.1.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Do not declare conversion operators to fundamental types.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>393 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Single parameter constructor not 'explicit'.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>394 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Conversion function found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.1.11</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not provide conversion operators for class types.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>394 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Conversion function found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.1.12</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Provide an output operator ('operator &lt;&lt;') for ostream for all classes.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>500 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Class does not have a &lt;&lt; output operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>3.1.13</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>Verify that all classes provide a minimal standard interface against a checklist comprising: a default constructor; a copy constructor; a copy assignment operator and a destructor.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>230 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No copy constructor defined for class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>231 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No assignment operator defined for class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>232 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No destructor defined for class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>260 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No default constructor declared for class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.2.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Ensure all constructors supply an initial value (or invoke a constructor) for each virtual base class, each non virtual base class and all non-static data members.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>319 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Constructor has insufficient initialisers.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.2.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Write members in an initialisation list in the order in which they are declared.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>206 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Class initialiser out of order.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.2.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Declare all single argument constructors as explicit thus preventing their use as implicit type convertors.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>393 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Single parameter constructor not 'explicit'.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.2.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>An abstract class shall have no public constructors.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>391 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Public constructor in abstract class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.2.5</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Ensure destructors release all resources owned by the object.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePendingCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use public derivation only.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>418 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Class Derivation is not public.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Write a 'virtual' destructor for base classes.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>303 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Virtual class members need virtual destructor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid downcasting base class object pointers to derived class.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>448 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Base class pointer cast to derived class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid casting to a virtual base class as this is irreversible.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>449 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Derived class pointer cast to virtual base.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Override all overloads of a base class virtual function.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>601 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Insufficient overridden members.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.6</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>If a virtual function in a base class is not overridden in any derived class then make it non virtual.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.7</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Only define virtual functions in a base class if the behaviour will always be valid default behaviour for derived classes.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.8</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Declare a function pure virtual in the base class if each derived class has to provide specific behaviour.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.9</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>If a virtual function is overridden in each derived class with the same implementation then make it a non virtual function in the base class.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.10</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Ensure that the return type of the virtual function being overridden is compatible.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePendingCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.11</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not overload or hide inherited non-virtual functions.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>262 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Non virtual function redefined.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.12</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>When redeclaring and overriding functions use the same default parameter values as in other declarations.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>364 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inherited default parameter redefined.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>3.3.13</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Do not invoke virtual methods of the declared class in a constructor or destructor.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>92 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>C'tor/d'tor calls virtual function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>467 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Virtual member called in ctor/dtor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.14</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Declare the copy assignment operator protected in an abstract class.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>522 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Public assign operator in abstract class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.15</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Ensure base classes common to more than one derived class are virtual.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>28 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Duplicated Base Classes in a Derived class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3.16</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Explicitly declare polymorphic member functions virtual in a derived class.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>214 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Member not declared virtual.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.4.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Make member data private.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>202 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Class data is not explicitly private.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.4.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not return non-const handles to class data from const member functions.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>392 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Class data accessible thru non const member.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.4.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not write member functions which return non const pointers or references to data less accessible than the member function.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>392 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Class data accessible thru non const member.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>3.4.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Ensure friends have a legitimate basis in design, otherwise avoid.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>212 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of friend function in class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>213 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of friend class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.4.5</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>When publicly deriving from a base class, the base class should be abstract.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePendingCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.4.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Write derived classes to have at most one base class which is not a pure abstract class.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>283 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Multiple direct inheritance found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.4.7</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All members of a public base class must be valid for a derived class.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.5.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid overloading the comma operator (','), operator AND ('&amp;&amp;'), and operator OR ('||').</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>211 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Overloaded &amp;&amp;, || or comma.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.5.2</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Always write operations, that are normally equivalent, to be equivalent when overloaded.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.5.3</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Ensure that overloaded binary operators have expected behaviour</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePendingCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.5.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Make binary operators non-members to allow implicit conversions of the left hand operand.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>569 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operator should be non class member.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.5.5</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>When overloading the subscript operator ('operator[]') implement both const and non-const versions.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePendingCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>4.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not write functions with an excessive McCabe Cyclomatic Complexity.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 C  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cyclomatic complexity greater than ***.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>4.2</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid functions with a high static program path count.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePendingCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>4.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid functions with many arguments.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>18 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than *** parameters in procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>5.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Follow each flow control primitive ('if', 'else', 'while', 'for', 'do' and 'switch') by a block enclosed by braces, even if the block is empty or contains only one line.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>11 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No brackets to loop body (added by Testbed).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>12 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No brackets to then/else (added by Testbed).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>428 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No {} for switch (added by Testbed).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>5.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>For boolean expressions ('if', 'for', 'while', 'do' and the first operand of the ternary operator '?:') involving non-boolean values, always use an explicit test of equality or non-equality.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>114 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression is not Boolean.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>5.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Avoid conditional expressions that always have the same result.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>26 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Loop control expression may not terminate loop.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>139 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Construct leads to infeasible code.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>140 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Infeasible loop condition found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>5.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Follow each non-empty case statement block in a switch statement with a break statement.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>62 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Switch case not terminated with break.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>5.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not alter a control variable in the body of a for statement.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>55 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Modification of loop counter in loop body.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>5.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not alter a control variable more than once in a for, do or while statement.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>55 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Modification of loop counter in loop body.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>5.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The control variable in a for loop should be tested against a constant value, not a function or expression.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>447 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Loop termination not a simple constant test.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>5.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use 'goto'.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>13 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>goto detected.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>5.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>Ensure that every compound statement except the body of a switch statement has a single entry point and (barring the propagation of C++ exceptions) a single exit point.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>7 C  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure has more than one exit point.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>39 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than one entry to a loop.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>40 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than one exit from a loop.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>122 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of abort, exit, etc.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>5.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>For functions with non-void return type, ensure all paths have a return statement that contains an expression of the return type.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>2 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function does not return a value on all paths.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>36 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function has no return statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>66 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function with empty return expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>101 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function return type inconsistent.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>5.11</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Include explicit cases for all alternatives in multi-way conditional structures.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>59 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Else alternative missing in if.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>278 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Switch has missing or extra cases.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>5.12</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Declare for loop control variables within the for statement instead of using an existing variable.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>40 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Loop index is not declared locally.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>505 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Control variable not declared in for loop.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>6.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Use suffixes L, U, and UL for all constants of type 'long', 'unsigned int' and 'unsigned long'.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>252 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Lower case suffix to literal number.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>331 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Literal value requires a U suffix.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>6.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Use suffixes F and L for all constants of type 'float' and 'long double'.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>252 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Lower case suffix to literal number.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>425 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>float literal with no F suffix.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>6.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Write the value of a character constant to be in the range of its type.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>488 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value outside range of underlying type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>6.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Only use escape sequences defined by the ISO C++ Standard.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>176 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Non standard escape sequence in source.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>6.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not write character string literal tokens adjacent to wide string literal tokens.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>450 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Wide string and string concatenated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>6.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Global and static data should be const.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>10 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Globals used inside procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>95 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Named global function pointer used in procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>100 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Named static member object used in procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>7.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Always use casting forms: 'static_cast', 'const_cast', 'dynamic_cast' and 'reinterpret_cast' or explicit constructor call. Do not use any other form.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>306 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of C type cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>7.2</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Minimise the use of casts.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>7.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid casting away volatile qualification.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>344 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast on volatile value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>7.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Avoid casting away const qualification.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>203 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast on a constant value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>242 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of const_cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>7.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>Avoid using pointer or reference casts.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>94 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation on a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>95 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation to a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>439 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from pointer to integral type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>440 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from integral type to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>7.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Do not convert floating values to integral types except through use of standard library routines.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of mixed mode arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>107 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type mismatch in ternary expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>435 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Float/integer conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>7.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>Do not cast pointers to and from fundamental types.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>94 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation on a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>439 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from pointer to integral type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>635 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from pointer to float type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>636 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from float type to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>7.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not write code that relies on implicit conversions of arguments in function calls.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>458 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit conversion: actual to formal param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>8.1.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>With the exception of object definitions and unnamed namespace declarations and definitions, declare in header files: all non-inline functions, classes, variables, enumerations and enumerators, which are named at namespace scope and which have external linkage.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>352 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration of type not in header file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>354 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Extern declaration is not in header file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.1.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>With the exception of unnamed namespace declarations and definitions, define in header files all inline functions which are at namespace scope and which have external linkage.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>460 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inline or template function not in header.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.1.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>With the exception of unnamed namespace declarations and definitions, define in header files all template definitions which are at namespace scope and which have external linkage.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>460 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inline or template function not in header.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>8.2.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Do not hide declarations in other scopes.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>131 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name reused in inner scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>358 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Class member name reused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>8.2.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Avoid global variables.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>10 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Globals used inside procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>95 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Named global function pointer used in procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>100 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Named static member object used in procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.2.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Always use using declarations or write explicit namespace qualifiers. Do not use using directives.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>513 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of using directive.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.2.4</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Only have using namespace directives in the main source file, after all include directives.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>514 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Using directive or declaration in header.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.3.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid using the keyword 'static' when declaring objects in namespaces.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>570 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Static object declared in namespace.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.3.2</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Restrict the use of the 'extern' keyword. Do not write 'extern' where it is implicit.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>461 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Identifier with ambiguous linkage.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>8.3.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Do not use the 'auto' or 'register' keywords.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>84 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Register variable declared.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>464 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of auto specifier.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.3.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Ensure each identifier is distinct.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>217 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Names only differ by case.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.3.5</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid ambiguous grammar between function style casts and declarations.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.4.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not write the characters 'l' (ell) and '1' (one) or 'O' (oh) and '0' (zero) in the same identifier.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>571 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier with 'l' and 1, 'O' and zero.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>8.4.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Declare each variable on a separate line in a separate declaration statement. If the declaration is not self-explanatory, append a comment describing the variable.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>177 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier not declared on new line.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>178 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration statement not on new line.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>8.4.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Initialise all objects at definition. Never use an object before it has been given a value.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>57 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Global not initialised at declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>64 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Local not initialised at declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>69 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>UR anomaly, variable used before assignment.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.4.4</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Postpone variable definitions as long as possible.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>25 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Scope of variable could be reduced.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.4.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use the plain 'char' type when declaring objects that are subject to numeric operations. In this case always use an explicit 'signed char' or 'unsigned char' declaration.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>329 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operation not appropriate to plain char.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.4.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use class types or typedefs to indicate scalar quantities.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>90 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Basic type declaration used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.4.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Declare one type name only in each typedef declaration.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>422 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than one synonym in typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.4.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not typedef array types.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>390 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Typedef array declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.4.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use unbounded (C-style) aggregate types.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>310 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array parameter found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.4.10</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid pointers to members.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.4.11</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use 'const' whenever possible.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>168 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Call by value parameter not const.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.4.12</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Directly append the '*' and '&amp;' to type names in declarations and definitions.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>309 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>* or &amp; not attached to type in declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.4.13</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Prefer to use signed numeric values, not unsigned.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>304 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Arithmetic performed on unsigned values.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>9.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not throw exceptions from within destructors.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>453 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Throw found in destructor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>9.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Only throw objects of class type.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>454 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Throw type is not a class type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>9.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Catch exceptions by reference.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>455 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Catch is not by reference.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>9.4</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Only use the C++ exception handling mechanism to handle error conditions.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>9.5</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Each application must have some scheme for ensuring that all orphaned resources are properly released when an exception is thrown.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>9.6</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Each application that acquires resources that are not automatically freed at programtermination must use some mechanism to ensure that acquired resources are freed if the program unexpectedly terminates.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>10.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Use symbolic names instead of literal values in code. Do not use &quot;magic&quot; numbers.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>58 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Character or string literal re-used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>201 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of numeric literal in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>10.2</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Access to an array should be demonstrably within the bounds of the array.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>47 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Array bound exceeded.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='4'><Data ss:Type='String'>10.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='4'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='4'><Data ss:Type='String'>Do not assume the order of evaluation of operands in an expression.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>35 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression has side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 Q  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Call has execution order dependant side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>9 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operation in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>30 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Deprecated usage of ++ or -- operators found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>134 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Volatile variable in complex expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>10.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Use parentheses in expressions to specify the intent of the expression.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>49 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Logical conjunctions need brackets.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>361 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression needs brackets.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>10.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Always discard the result of an assignment operator.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>9 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operation in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>132 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operator in boolean expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>10.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>When comparing variables and constants for equality always place the constant on the left hand side.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>9 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operation in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>132 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operator in boolean expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>133 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operator in RHS of &amp;&amp; or ||.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>10.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='5'><Data ss:Type='String'>Do not use expressions which rely on implicit conversion of an operand.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>433 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>445 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Narrower float conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>446 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Narrower int conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>456 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit float widening for function return.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>457 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit int widening for function return.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>458 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit conversion: actual to formal param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>10.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Ensure expressions used in assertions are free from side-effects.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>572 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Side effect in assert.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='4'><Data ss:Type='String'>10.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='4'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='4'><Data ss:Type='String'>Do not code side effects into the right-hand operands of '&amp;&amp;', '||', 'sizeof' or 'typeid'.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 Q  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Call has execution order dependant side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>54 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Sizeof operator with side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>133 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operator in RHS of &amp;&amp; or ||.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>406 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of ++ or -- on RHS of &amp;&amp; or || operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>408 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Volatile variable accessed on RHS of &amp;&amp; or ||.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>10.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid statements that have no side effects.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>57 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Statement with no side effect.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>10.11</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>Do not apply the following bitwise operators to signed operands: shift operators ('&lt;&lt;', '&gt;&gt;'),bitwise AND ('&amp;'), exclusive OR ('^') and inclusive OR ('|').</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>50 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of shift operator on signed type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>120 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of bit operator on signed type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>136 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bit operator with boolean operand.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>345 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bit operator with floating point operand.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>10.12</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Validate arguments to be used in shift operators.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>50 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of shift operator on signed type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>51 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Shifting value too far.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>403 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Negative (or potentially negative) shift.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>10.13</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Do not mix signed and unsigned data items in the same expression.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>107 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type mismatch in ternary expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of mixed mode arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>434 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signed/unsigned conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='6'><Data ss:Type='String'>10.14</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='6'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='6'><Data ss:Type='String'>Do not mix arithmetic precision in expressions.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of mixed mode arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>107 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type mismatch in ternary expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>434 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signed/unsigned conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>445 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Narrower float conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>446 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Narrower int conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>456 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit float widening for function return.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>457 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit int widening for function return.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>10.15</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not write code that expects floating point calculations to yield exact results.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>56 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Equality comparison of floating point.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>10.16</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use the increment operator ('++') on a variable of type 'bool'.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>389 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bool value incremented/decremented.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>10.17</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Guard both division and remainder operations by a test on the right hand operand being non-zero.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>43 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Divide by 0 found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>10.18</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Guard the modulus operation to ensure that both arguments are non-negative.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>584 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Remainder of % op could be negative.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>10.19</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use the comma operator.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>53 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of comma operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>10.20</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use the ternary operator (?:) in expressions.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>33 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of ternary operator found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>10.21</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Apply unary minus to operands of signed type only.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>52 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsigned expression negated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>11.1</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All functions that have the same name should have similar behaviour, varying only in the number and/or types of parameters.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>11.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Enclose all non-member functions that are not part of the external interface in the unnamed namespace in the source file.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>311 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Non local declaration not in a namespace.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>11.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Specify the name of each function parameter in both the function declaration and the function definition. Use the same names in the function declaration and definition.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>36 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Prototype and definition name mismatch.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>103 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function and prototype param inconsistent (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>11.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use pass-by-reference in preference to pass by value or pass by pointer.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>215 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Struct or class called by value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>11.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Declare read-only parameters of class type as const references. Pass by value read-only parameters that are of a fundamental type.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>62 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer parameter should be declared const.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>11.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use ellipsis '...' in function parameters.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>41 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Ellipsis used in procedure parameter list.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>11.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>A function should not return a reference or a pointer to an automatic variable defined within the function. Instead, it should return a copy of the object.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>42 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Local pointer returned in function result.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>71 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer assignment to wider scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>564 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Reference assignment to wider scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>11.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Only declare trivial functions 'inline'.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>297 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inline member has more than *** source lines.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>353 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inline member has more than *** statements.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>11.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not overload on both numeric and pointer types.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>396 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Possible ambiguous numeric/pointer overloads.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.1</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use default arguments with overloaded functions.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>359 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Default parameter use.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Allocate memory using 'new' and release using 'delete'. Do not use the C memory management functions malloc(), realloc(), and free().</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Ensure the form used when invoking 'delete' is the same form that was used when memory was allocated using 'new'.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>424 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operator new[] and no operator delete[].</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not specify the number of elements when deleting an array of objects.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>502 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Delete contains number of elements.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not return a dereferenced pointer initialised by dynamic allocation within a function.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>503 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function returns local resources.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Write operator delete if you write operator new.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>423 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operator new and no operator delete.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Document that operator new and operator delete are static by declaring them static.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>421 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>New or delete not explicitly static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.8</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>On use of delete always set the pointer to zero after the delete.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePendingCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>13.1</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid implementation defined behaviour.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>13.2</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use standard language features and standard library functions in preference to extra functionality provided by the operating system or environment.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>13.3</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not exceed the translation limits imposed by the ISO C++ Standard.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>13.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Do not use compiler specific language or pre-processor extensions.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>69 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#pragma used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>293 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Non ANSI/ISO construct used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>13.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Do not use the 'asm' declaration.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>17 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Code insert found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>88 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure is not pure assembler.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='3'><Data ss:Type='String'>13.6</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='3'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>Do not make any assumptions about the internal representation of a value or object.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>50 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Use of shift operator on signed type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>90 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Basic type declaration used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>123 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Use of underlying enum representation value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>345 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Bit operator with floating point operand.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>13.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Do not cast a pointer to fundamental type, to a pointer to a more restrictively aligned fundamental type.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>94 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation on a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>439 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from pointer to integral type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>554 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast to an unrelated type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use the C++ comment delimiters &quot;//&quot;. Do not use the C comment delimiters &quot;/* ... */&quot;.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>207 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of old style /* comments in C++.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use tab characters in source files.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>187 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Tab character in source.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.3</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Write pre-processor directives to begin in column 1 with no whitespace between the '#' and the pre-processor directive.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>209 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Preprocessor command indented.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.4</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Write pre-processor directives to begin in column 1 with whitespace between the '#' and the pre-processor directive representing nesting in preprocessor conditionals.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>209 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Preprocessor command indented.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Control conditional compilation by the use of, or absence of, a pre-processor token definition.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>417 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of #if preprocessor command.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.6</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use the __cplusplus identifier to distinguish between C and C++ compilation.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not include comment text in the definition of a pre-processor macro.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>152 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of a comment in a macro definition.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>14.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Ensure that the last line of all files containing source code is followed by a new-line.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>412 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Undefined behaviour, \ before E-O-F.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>5 Q  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>File does not end with new line.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use &lt;&gt; brackets for system and standard library headers. Use &quot;&quot; quotes for all other headers.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>568 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#include &quot;filename&quot; uses standard library name.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not include a path specifier in file names supplied in #include directives.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>4 Q  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file has path.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.11</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule (checking)</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Incorporate include guards in header files to prevent multiple inclusions of the same file</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>243 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file not protected with #define.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.12</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use lower-case for file names and references to file names (such as include directives).</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>3 Q  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Filename contains upper case letters.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.13</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Write header files such that all files necessary for their compilation are included.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>14.14</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Enclose macro arguments and body in parentheses.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>77 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro replacement list needs parentheses.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>78 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro parameter not in brackets.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>14.15</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Do not use pre-processor macros to define code segments.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>79 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro contains unacceptable items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>340 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of function like macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.16</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use the NULL macro.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>348 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of the NULL macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.17</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use const objects or enumerators to define constants, not #define.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>200 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Define used for numeric constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>14.18</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Do not use digraphs or trigraphs.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>81 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of trigraph.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>295 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of digraph.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>15.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use variant structures (unions).</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>74 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Union declared.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>15.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not include member functions or access specifiers in struct types.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>198 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of privacy statement in struct.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>15.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not rely on the value of an enumerator.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>123 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of underlying enum representation value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>15.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid casting an integer to an enumeration as the result of this cast is unspecified if the value is not within the range of the enumeration.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>411 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inappropriate value assigned to enum.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>16.1</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Avoid implicit conversions from class templates to non-dependent types as this ensures that clients cannot bypass the class interface.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePendingCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>16.2</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not define a class template with potentially conflicting methods.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>16.3</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Only instantiate templates with template arguments which fulfill the interface requirements of the 'template'.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>16.4</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Only use templates when the behaviour of the class or function template is completely independent of the type of object to which it is applied.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use Standard C++ Library headers defined by the language standard and not outdated .h headers. For example, use &lt;iostream&gt; and not &lt;iostream.h&gt;, &lt;cstdio&gt; and not &lt;stdio.h&gt;.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>130 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file is not permitted.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.2</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use Standard Template Library containers and algorithms in preference to custom designs.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.3</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Make copying efficient for objects in containers.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.4</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Where copying is expensive use containers of pointers or smart pointers.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.5</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not attempt to insert derived class objects in a container that holds base class objects.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.6</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use empty() instead of checking size() against zero.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use STL containers as public base classes.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>395 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Public base use of STL library member.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.8</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Never create containers of auto_ptrs.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use vector and string in place of dynamically allocated arrays.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.10</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Where possible pre-allocate in containers to save unnecessary reallocations.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.11</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>When passing vector types to C style functions use 'v [ 0 ]'.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.12</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Only use STL string's member c_str to get a const char* to use with legacy functions.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.13</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Do not use vector &lt;bool&gt;.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.14</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Return false for equivalent values in relational predicates.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.15</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Never modify the key part of a set or multiset element.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.16</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Minimise mixing of iterator types.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.17</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The result of a predicate should depend only on its parameters.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.18</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use STL algorithms rather than hand-written loops.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.19</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Use container member functions rather than algorithms with the same name. with the provisions of this document, and shall have been subject to appropriate validation</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.20</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Directly include necessary STL headers.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.21</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Guideline</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Minimise use of the Standard Template Library 'auto_ptr'.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
  </Table>
    <WorksheetOptions xmlns='urn:schemas-microsoft-com:office:excel'>
     <PageSetup>
      <Layout x:Orientation='Landscape' x:CenterHorizontal='1'/>
      <Header x:Margin='0.19685039370078741'
       x:Data='&amp;CVersion 9.4.4 Copyright &copy; 2014 LDRA Ltd.&#10;Copies of this document are not to be made or distributed.'/>
      <Footer x:Margin='0.19685039370078741'
       x:Data='&amp;CLDRA Ltd. reserves the right to change any specifications contained within this document without prior notice.&#10;The document was deemed correct at time of distribution.'/>
      <PageMargins x:Bottom='0.78740157480314965' x:Left='0.59055118110236227'
       x:Right='0.59055118110236227' x:Top='0.78740157480314965'/>
     </PageSetup>
     <FitToPage/>
     <Print>
      <FitHeight>0</FitHeight>
      <ValidPrinterInfo/>
      <PaperSizeIndex>9</PaperSizeIndex>
      <Scale>91</Scale>
      <HorizontalResolution>600</HorizontalResolution>
      <VerticalResolution>600</VerticalResolution>
     </Print>
    </WorksheetOptions>
 </Worksheet>
</Workbook>
