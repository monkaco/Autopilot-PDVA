<?xml version='1.0'?>
<?mso-application progid='Excel.Sheet'?>
<Workbook xmlns='urn:schemas-microsoft-com:office:spreadsheet'
 xmlns:o='urn:schemas-microsoft-com:office:office'
 xmlns:x='urn:schemas-microsoft-com:office:excel'
 xmlns:ss='urn:schemas-microsoft-com:office:spreadsheet'
 xmlns:html='http://www.w3.org/TR/REC-html40'>
 <DocumentProperties xmlns='urn:schemas-microsoft-com:office:office'>
  <LastAuthor>LDRA Standards Wiki</LastAuthor>
  <Created>2014-04-25T08:31:23Z</Created>
  <LastSaved>2014-04-25T08:31:23Z</LastSaved>
  <Version>12.0</Version>
 </DocumentProperties>
 <Styles>
  <Style ss:ID='TableDefault'>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
    <Border ss:Position='Left' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
    <Border ss:Position='Right' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
    <Border ss:Position='Top' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
   </Borders>
  </Style>
  <Style ss:ID='Default' ss:Name='Normal'>
   <Alignment ss:Vertical='Top'/>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
   </Borders>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
   <Interior/>
   <NumberFormat/>
   <Protection/>
  </Style>
  <Style ss:ID='Title' ss:Name='Title' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='1'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='16' ss:Bold='1' ss:Color='#000000'/>
   <Interior ss:Color='#FFCC99' ss:Pattern='Solid'/>
   <Borders>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='Note' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='1'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
   <Interior ss:Color='#CCFFFF' ss:Pattern='Solid'/>
   <Borders>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='Heading' ss:Name='Column Headings' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='1'/>
   <Interior ss:Color='#C0C0C0' ss:Pattern='Solid'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='SummaryClass' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='SummaryValue' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='SummaryTotal' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Interior ss:Color='#C0C0C0' ss:Pattern='Solid'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='ComplianceID' ss:Name='Model Rule Column' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='ComplianceClassification' ss:Name='Classification Column' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='ComplianceLDRA' ss:Name='LDRA Standard Column' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='RuleDefault' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center'/>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='RuleDefaultWrapped' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Left' ss:WrapText='1'/>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='RuleEnhancedCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#88FF88' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleEnhancedCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#88FF88' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleEnhancedCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#88FF88' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleFullCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#CCFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleFullCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#CCFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleFullCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#CCFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePartialCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#FFFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePartialCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#FFFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePartialCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#FFFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePendingCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#CCCCFF' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePendingCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#CCCCFF' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePendingCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#CCCCFF' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleManualCoverage' ss:Parent='RuleDefault'>
  </Style>
  <Style ss:ID='RuleManualCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
  </Style>
  <Style ss:ID='RuleManualCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
  </Style>
 </Styles>
 <Worksheet ss:Name='Summary'>
  <Table ss:StyleID='TableDefault'>
   <Column ss:Index='1' ss:Width='75'/>
   <Column ss:Index='2' ss:Width='75'/>
   <Column ss:Index='3' ss:Width='75'/>
   <Column ss:Index='4' ss:Width='75'/>
   <Column ss:Index='5' ss:Width='75'/>
   <Column ss:Index='6' ss:Width='75'/>
   <Column ss:Index='7' ss:Width='37.5'/>
   <Row ss:Height='20'>
    <Cell ss:StyleID='Title' ss:MergeAcross='6'><Data ss:Type='String'>Legacy Standards Model Summary for C / C++</Data></Cell>
   </Row>
   <Row ss:Index='3' ss:AutoFitHeight='1'>
    <Cell ss:StyleID='Note' ss:MergeAcross='6'><Data ss:Type='String'>The LDRA tool suite&reg; is developed and certified to BS EN ISO 9001:2000.</Data></Cell>
   </Row>
   <Row ss:Index='5' ss:AutoFitHeight='1'>
    <Cell ss:StyleID='Note' ss:MergeAcross='6' ss:MergeDown='1'><Data ss:Type='String'>This information is applicable to version 9.4.4 of the LDRA tool suite&reg;.&#10;It is correct as of 25th April 2014.</Data></Cell>
   </Row>
   <Row ss:Index='8'>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Classification</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Enhanced&#10;Enforcement</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Fully&#10;Implemented</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Partially&#10;Implemented</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Not yet&#10;Implemented</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Not statically&#10;Checkable</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Total</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryClass'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage'><Data ss:Type='Number'>1</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>1</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryClass'><Data ss:Type='String'>Optional</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage'><Data ss:Type='Number'>1</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>1</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryClass'><Data ss:Type='String'>Informational</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage'><Data ss:Type='Number'>1</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>1</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='String'>Total</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>3</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>3</Data></Cell>
   </Row>
  </Table>
    <WorksheetOptions xmlns='urn:schemas-microsoft-com:office:excel'>
     <PageSetup>
      <Layout x:Orientation='Landscape' x:CenterHorizontal='1'/>
      <Header x:Margin='0.19685039370078741'
       x:Data='&amp;CVersion 9.4.4 Copyright &copy; 2014 LDRA Ltd.&#10;Copies of this document are not to be made or distributed.'/>
      <Footer x:Margin='0.19685039370078741'
       x:Data='&amp;CLDRA Ltd. reserves the right to change any specifications contained within this document without prior notice.&#10;The document was deemed correct at time of distribution.'/>
      <PageMargins x:Bottom='0.78740157480314965' x:Left='0.59055118110236227'
       x:Right='0.59055118110236227' x:Top='0.78740157480314965'/>
     </PageSetup>
     <FitToPage/>
     <Print>
      <FitHeight>0</FitHeight>
      <ValidPrinterInfo/>
      <PaperSizeIndex>9</PaperSizeIndex>
      <Scale>91</Scale>
      <HorizontalResolution>600</HorizontalResolution>
      <VerticalResolution>600</VerticalResolution>
     </Print>
    </WorksheetOptions>
 </Worksheet>
 <Worksheet ss:Name='Compliance'>
  <Names>
   <NamedRange ss:Name='Print_Titles' ss:RefersTo='=Compliance!R1:R3'/>
  </Names>
  <Table ss:StyleID='TableDefault'>
   <Column ss:Index='1' ss:StyleID='ComplianceID'/>
   <Column ss:Index='2' ss:StyleID='ComplianceClassification' ss:Width='95'/>
   <Column ss:Index='3' ss:Width='250'/>
   <Column ss:Index='4' ss:StyleID='ComplianceLDRA' ss:Width='55'/>
   <Column ss:Index='5' ss:Width='250'/>
   <Row ss:AutoRowHeight='1'>
    <Cell ss:StyleID='Title' ss:MergeAcross='4'><Data ss:Type='String'>Legacy Standards Model Compliance for C / C++</Data></Cell>
   </Row>
   <Row ss:Index='3'>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Classification</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Rule Description</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>LDRA&#10;Standard</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>LDRA Standard Description</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='70'><Data ss:Type='String'>I</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='70'><Data ss:Type='String'>Informational</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='70'><Data ss:Type='String'>Informational Rules</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unused procedure parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>4 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variables declared but not used in code analysed.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>6 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Recursion in procedure calls found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>14 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to change parameter passed by value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>15 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unused procedural parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>25 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Scope of variable could be reduced.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>28 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Potentially infinite loop found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>34 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure name re-used in different files.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>39 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than one entry to a loop.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>74 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Potential side effect from repeated function call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>76 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure is not called or referenced in code analysed.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>80 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Potentially unused function-modified value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>86 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>User input not checked before use.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>91 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function return value potentially unused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>94 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Named variable declared but not used in code.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable has repeated initialisation.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 I  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Local variables contribute nothing to results.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 J  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unreachable Code found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure name reused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>9 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operation in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>11 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No brackets to loop body (added by Testbed).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>12 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No brackets to then/else (added by Testbed).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>17 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Code insert found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>23 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure is not explicitly called in code analysed.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>34 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No parameters declared in proc specification.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>35 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Static procedure is not explicitly called in code analysed.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>37 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure parameter has a type but no identifier.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>39 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsuitable type for loop variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>57 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Statement with no side effect.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>58 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Null statement found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>62 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Switch case not terminated with break.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>85 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Incomplete initialisation of enumerator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>128 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter has same name as global variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>131 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name reused in inner scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>133 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operator in RHS of &amp;&amp; or ||.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>135 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter list is KR.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>142 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter list declarations are inconsistent.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>172 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable declared multiply.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>215 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Struct or class called by value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>285 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Class definition not needed in file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>296 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function declared at block scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>298 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Non const pointer to function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>331 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Literal value requires a U suffix.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>354 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Extern declaration is not in header file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>358 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Class member name reused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>361 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression needs brackets.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>377 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Null character used within a string.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>382 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>(void) missing for discarded return value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>383 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier name matches macro name.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>388 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Extern used in function body.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>393 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Single parameter constructor not 'explicit'.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>405 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro name appears in own replacement list.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>413 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>User type declared but not used in code analysed.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>426 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#undef used in a block.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>448 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Base class pointer cast to derived class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>455 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Catch is not by reference.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>497 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type is incomplete in translation unit.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>512 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of unnamed namespace.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>514 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Using directive or declaration in header.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>523 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Exception type is pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>534 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array has decayed to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>543 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Virtual base not in diamond hierarchy.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>547 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Base member not qualified.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>550 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsuffixed hex or octal is unsigned, add U.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>562 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of ++,-- or = in macro parameters.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>578 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Sizeof used in arithmetic expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>593 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use fseek() rather than rewind().</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 U  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inter-file recursion found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>2 U  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure not called anywhere in system.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>3 U  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No procedures in this file called from other files.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>67 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier is typographically ambiguous.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='257'><Data ss:Type='String'>M</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='257'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='257'><Data ss:Type='String'>Mandatory Rules</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>6 C  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure has more than one entry point.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>2 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function does not return a value on all paths.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>3 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Actual parameter is also global to procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>11 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameters do not match expected actions.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>13 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Global used in procedure matches local parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>17 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier not unique within *** characters.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>19 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure called before being defined.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>20 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No declaration for variable found before use.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>26 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable should be defined once in only one file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>31 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Withdrawn</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>33 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No real declaration for external variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>41 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure call has no prototype declared.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>42 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Local pointer returned in function result.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>43 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Divide by 0 found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>48 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to write to unopened file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>49 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>File pointer not closed on exit.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>50 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Memory not freed after last reference.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>51 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to read from freed memory.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>52 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Member(s) not assigned in = operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>53 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to use uninitialised pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>54 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsafe use of function pointer variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>56 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Throw found with no catch in scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>60 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>External object should be declared only once.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>63 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No definition in system for prototyped procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>65 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Void function has no side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>69 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>UR anomaly, variable used before assignment.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>71 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No matching catch for throw in called function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>72 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Potential side effect problem in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>75 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to open file pointer more than once.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>77 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Local structure returned in function result.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>82 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>fsetpos values not generated by fgetpos.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>84 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No fseek or flush before I/O.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>87 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Illegal shared object in signal handler.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>88 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Illegal use of longjmp in signal handler.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>89 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Illegal use of raise in signal handler.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>90 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unguarded global used in threaded function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>92 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>C'tor/d'tor calls virtual function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>97 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signal called from within signal handler.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>110 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than one prototype for same function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>113 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>File closed more than once.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>2 J  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unused inspect annotation.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 Q  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Call has execution order dependant side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>5 Q  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>File does not end with new line.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>20 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter not declared explicitly.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>21 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Number of parameters does not match.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>24 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of Noanalysis annotation.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>27 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Void procedure with return statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>28 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Duplicated Base Classes in a Derived class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>36 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function has no return statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>47 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array bound exceeded.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>48 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No default case in switch statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>50 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of shift operator on signed type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>51 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Shifting value too far.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>52 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsigned expression negated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>56 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Equality comparison of floating point.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>60 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Empty switch statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>61 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Switch contains default only.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>63 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Empty parameter list to procedure/function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>64 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Void procedure used in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>65 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Void variable passed as parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>66 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function with empty return expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>71 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer assignment to wider scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>86 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to define reserved word.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>93 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value is not of appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of mixed mode arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>98 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Actual and formal parameters inconsistent (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>100 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#include filename is non conformant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>101 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function return type inconsistent.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>102 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function and prototype return inconsistent (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>103 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function and prototype param inconsistent (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>104 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Struct field initialisation incorrect.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>105 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Initialisation brace { } fault.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>107 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type mismatch in ternary expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>109 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array subscript is not integral.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>113 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Non standard character in source.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>115 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>String incorrectly terminated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>116 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Boolean comparison with 0 preferred.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>117 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Logical negation of constant value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>118 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>main must be int (void) or int (int,char*[]).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>119 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Nested comment found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>120 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of bit operator on signed type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>126 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>A #if has no #endif in the same file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>136 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bit operator with boolean operand.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>139 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Construct leads to infeasible code.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>140 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Infeasible loop condition found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>141 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Incomplete structure or class declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>143 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Curly brackets used in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>145 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#if has invalid expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>146 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#define with empty parameter list.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>147 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Spurious characters after preprocessor directive.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>148 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No return type for function/procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>149 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Reference parameter to procedure is reassigned.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>156 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of 'defined' keyword in macro body.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>157 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Modification of string literal.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>170 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure call has no prototype and no defn.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>176 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Non standard escape sequence in source.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>206 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Class initialiser out of order.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>211 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Overloaded &amp;&amp;, || or comma.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>230 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No copy constructor defined for class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>231 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No assignment operator defined for class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>233 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No copy constructor for class with pointers.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>234 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No assignment operator for class with pointers.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>239 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>New used in class without copy constructor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>244 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>new or delete overloaded.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>247 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro definition calls itself.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>248 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Divide by zero in preprocessor directive.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>249 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operation not appropriate to boolean type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>250 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cyclic included file nesting found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>251 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of stdio.h instead of iostream.h.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>253 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Opposite type operator missing.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>254 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operator = doesn't return reference to *this.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>260 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No default constructor declared for class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>278 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Switch has missing or extra cases.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>293 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Non ANSI/ISO construct used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>303 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Virtual class members need virtual destructor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>305 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unused inspect annotation for standard ...</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>323 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Switch has more than one default case.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>324 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro call has wrong number of parameters.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>326 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration is missing type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>329 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operation not appropriate to plain char.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>330 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit conversion of underlying type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>332 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Widening cast on complex integer expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>333 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Widening cast on complex float expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>334 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No cast when ~ or &lt;&lt; applied to small types.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>335 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operator defined contains illegal items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>336 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#if expansion contains define operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>339 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#include directive with illegal items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>341 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Preprocessor construct as macro parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>342 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Extra chars after preprocessor directive.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>343 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#else has no #if, etc in the same file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>344 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast on volatile value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>345 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bit operator with floating point operand.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>347 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro parameter list has leading space.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>355 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variables not unique within *** characters.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>360 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Incompatible type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>364 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inherited default parameter redefined.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>389 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bool value incremented/decremented.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>391 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Public constructor in abstract class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>392 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Class data accessible thru non const member.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>396 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Possible ambiguous numeric/pointer overloads.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>397 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array initialisation has insufficient items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>399 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function declared more than once.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>401 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of sizeof on an array parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>402 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Comparison of booleans.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>403 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Negative (or potentially negative) shift.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>404 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array initialisation has too many items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>407 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>free used on string.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>411 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inappropriate value assigned to enum.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>412 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Undefined behaviour, \ before E-O-F.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>420 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Virtual function should not be inline.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>423 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operator new and no operator delete.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>424 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operator new[] and no operator delete[].</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>425 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>float literal with no F suffix.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>427 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Filename in #include not in &lt; &gt; or &quot; &quot;.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>431 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Char used instead of (un)signed char.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>432 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inappropriate type - should be plain char.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>437 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>&lt; &gt; &lt;= &gt;= used on different object pointers.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>438 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer subtraction not addressing one array.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>439 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from pointer to integral type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>440 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from integral type to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>441 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Float cast to non-float.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>442 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signed integral type cast to unsigned.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>443 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsigned integral type cast to signed.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>444 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Integral type cast to non-integral.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>445 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Narrower float conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>446 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Narrower int conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>450 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Wide string and string concatenated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>451 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No cast for widening complex float expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>452 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No cast for widening complex int expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>458 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit conversion: actual to formal param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>461 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier with ambiguous linkage.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>462 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Struct initialisation has insufficient items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>464 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of auto specifier.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>467 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Virtual member called in ctor/dtor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>468 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Member function redeclared.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>469 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No copy constructor for complex destructor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>470 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No assignment operator for complex destrtor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>479 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Right shift loses all bits.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>480 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>String function params access same variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>481 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array with no bounds in struct.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>482 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Incomplete structure referenced.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>483 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>free parameter is not heap item.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>484 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to use already freed object.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>485 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array deletion without [].</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>486 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Incorrect number of formats in output function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>487 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Insufficient space allocated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>488 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value outside range of underlying type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>489 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Insufficient space for operation.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>493 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Numeric overflow.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>494 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Numeric underflow.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>496 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function call with no prior declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>499 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Too many default parameters in copy ctor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>502 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Delete contains number of elements.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>503 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function returns local resources.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>504 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Space required between &gt; and &gt;.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>506 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of boolean with relational operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>507 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Explicit cast from integral to floating type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>508 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operator &amp; overloaded.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>511 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Jump into nested block.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>518 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Using declaration is straddled by declarations.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>519 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Return of reference parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>522 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Public assign operator in abstract class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>524 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Jump into try or catch statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>525 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>throw with explicit NULL.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>526 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Empty throw is not in catch statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>529 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Static member initialised/assigned in constructor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>530 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>NULL used in integer context.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>532 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No copy ctor for templated copy ctor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>533 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No assgnmt optor for templated assgmnt op.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>535 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Binary bitwise op with different types.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>538 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Template class/function/member not instantiated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>539 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Specialised overloaded templated function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>540 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from pointer to void to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>541 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Catch-all is not last catch.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>544 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Member re-declared pure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>545 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment of overlapping storage.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>546 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Overload resolution could be forward.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>549 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Catch in c'tor/d'tor references nonstatic member.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>553 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function and proto should both be static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>554 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast to an unrelated type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>556 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Wrong order of catches for derived class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>557 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function call can generate throw exception.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>558 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Template may lead to ill-formed program.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>559 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Virtual member defined more than once.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>561 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of dynamic type in c'tor/d'tor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>564 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Reference assignment to wider scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>565 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment to wider scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>569 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operator should be non class member.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>570 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Static object declared in namespace.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>572 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Side effect in assert.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>573 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro concatenation of uni char names.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>574 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operator new called with inconsistent type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>575 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Linkage differs from previous declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>576 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function pointer is of wrong type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>577 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Sizeof argument is a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>580 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro redefinition without using #undef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>582 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>const object reassigned.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>583 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Comparison of pointer and string literal.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>587 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Const local variable not immediately initialised.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>589 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Format is not appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>591 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inappropriate use of file pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>595 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Base member with change of access.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>599 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of &amp;&amp; or || in initialisation.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>600 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Argument of strlen is unterminated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>601 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Insufficient overridden members.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>615 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Conditional operator has incompatible types.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>635 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from pointer to float type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>636 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from float type to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration types do not match across a system.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>62 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function prototype/defn return type mismatch (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>63 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function prototype/defn param type mismatch (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>64 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array bound exceeded at call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>66 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Insufficient array space at call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>68 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter indexing array too big at call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>69 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Global array bound exceeded at use.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>70 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array has insufficient space.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>71 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Insufficient space for copy.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>72 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter indexing array too small at call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='61'><Data ss:Type='String'>O</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='61'><Data ss:Type='String'>Optional</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='61'><Data ss:Type='String'>Optional Rules</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>5 C  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure contains infinite loop.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>8 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>DD data flow anomalies found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>16 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identical actual parameters in call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>35 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression has side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>36 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Prototype and definition name mismatch.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>45 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer not checked for null before use.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>70 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>DU anomaly, variable value is not used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>81 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to remove an open file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>83 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Potentially repeated call to ungetc.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>85 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Filename not verified before fopen.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>98 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to write to file opened read only.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>7 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Jump out of procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>22 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of obsolete language feature ( use = - ).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>26 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Loop control expression may not terminate loop.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>45 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of C++ keyword.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>54 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Sizeof operator with side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>72 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signed bit field less than 2 bits wide.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>73 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bit field not signed or unsigned int.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>76 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than one of # or ## in a macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>92 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Duplicate use of a name in an enumeration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>99 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function use is not a call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>112 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Typedef name redeclared.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>114 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression is not Boolean.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>123 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of underlying enum representation value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>127 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array has no bounds specified.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>132 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operator in boolean expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>160 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Loop in macro expansion.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>203 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast on a constant value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>218 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name is used in standard libraries.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>232 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No destructor defined for class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>236 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>New used in class without assignment op.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>237 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operator parameter not const.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>243 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file not protected with #define.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>245 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Case statement in nested block.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>262 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Non virtual function redefined.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>276 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Case is not part of switch enumeration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>287 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable definition in header file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>319 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Constructor has insufficient initialisers.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>337 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Undefined macro variable in #if.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>357 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Base class is mixed virtual and non virtual.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>362 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>main program in a namespace.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>433 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>434 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signed/unsigned conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>435 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Float/integer conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>436 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration does not specify an array.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>453 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Throw found in destructor.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>466 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>long literal with no L suffix.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>498 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of inline keyword.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>520 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bit field is not bool or explicit integral.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>521 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Class derived from virtual base class.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>527 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No master exception handler.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>528 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Base class constructor omitted (added by Testbed).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>536 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Enum type in bit field.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>551 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from base to derived for polymorphic type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>555 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Base class member name not unique.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>568 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#include &quot;filename&quot; uses standard library name.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>584 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Remainder of % op could be negative.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>590 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Mode fault in fopen.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>592 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of filename based functions.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>594 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use setvbuf() rather than setbuf().</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>602 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>strtok may change the parse string.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>2 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Ambiguous declaration of variable.</Data></Cell>
   </Row>
  </Table>
    <WorksheetOptions xmlns='urn:schemas-microsoft-com:office:excel'>
     <PageSetup>
      <Layout x:Orientation='Landscape' x:CenterHorizontal='1'/>
      <Header x:Margin='0.19685039370078741'
       x:Data='&amp;CVersion 9.4.4 Copyright &copy; 2014 LDRA Ltd.&#10;Copies of this document are not to be made or distributed.'/>
      <Footer x:Margin='0.19685039370078741'
       x:Data='&amp;CLDRA Ltd. reserves the right to change any specifications contained within this document without prior notice.&#10;The document was deemed correct at time of distribution.'/>
      <PageMargins x:Bottom='0.78740157480314965' x:Left='0.59055118110236227'
       x:Right='0.59055118110236227' x:Top='0.78740157480314965'/>
     </PageSetup>
     <FitToPage/>
     <Print>
      <FitHeight>0</FitHeight>
      <ValidPrinterInfo/>
      <PaperSizeIndex>9</PaperSizeIndex>
      <Scale>91</Scale>
      <HorizontalResolution>600</HorizontalResolution>
      <VerticalResolution>600</VerticalResolution>
     </Print>
    </WorksheetOptions>
 </Worksheet>
</Workbook>
