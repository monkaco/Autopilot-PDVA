<?xml version='1.0'?>
<?mso-application progid='Excel.Sheet'?>
<Workbook xmlns='urn:schemas-microsoft-com:office:spreadsheet'
 xmlns:o='urn:schemas-microsoft-com:office:office'
 xmlns:x='urn:schemas-microsoft-com:office:excel'
 xmlns:ss='urn:schemas-microsoft-com:office:spreadsheet'
 xmlns:html='http://www.w3.org/TR/REC-html40'>
 <DocumentProperties xmlns='urn:schemas-microsoft-com:office:office'>
  <LastAuthor>LDRA Standards Wiki</LastAuthor>
  <Created>2014-04-25T08:31:23Z</Created>
  <LastSaved>2014-04-25T08:31:23Z</LastSaved>
  <Version>12.0</Version>
 </DocumentProperties>
 <Styles>
  <Style ss:ID='TableDefault'>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
    <Border ss:Position='Left' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
    <Border ss:Position='Right' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
    <Border ss:Position='Top' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
   </Borders>
  </Style>
  <Style ss:ID='Default' ss:Name='Normal'>
   <Alignment ss:Vertical='Top'/>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
   </Borders>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
   <Interior/>
   <NumberFormat/>
   <Protection/>
  </Style>
  <Style ss:ID='Title' ss:Name='Title' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='1'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='16' ss:Bold='1' ss:Color='#000000'/>
   <Interior ss:Color='#FFCC99' ss:Pattern='Solid'/>
   <Borders>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='Note' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='1'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
   <Interior ss:Color='#CCFFFF' ss:Pattern='Solid'/>
   <Borders>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='Heading' ss:Name='Column Headings' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='1'/>
   <Interior ss:Color='#C0C0C0' ss:Pattern='Solid'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='SummaryClass' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='SummaryValue' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='SummaryTotal' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Interior ss:Color='#C0C0C0' ss:Pattern='Solid'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='ComplianceID' ss:Name='Model Rule Column' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='ComplianceClassification' ss:Name='Classification Column' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='ComplianceLDRA' ss:Name='LDRA Standard Column' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='RuleDefault' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center'/>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='RuleDefaultWrapped' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Left' ss:WrapText='1'/>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='RuleEnhancedCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#88FF88' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleEnhancedCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#88FF88' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleEnhancedCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#88FF88' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleFullCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#CCFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleFullCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#CCFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleFullCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#CCFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePartialCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#FFFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePartialCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#FFFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePartialCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#FFFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePendingCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#CCCCFF' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePendingCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#CCCCFF' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePendingCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#CCCCFF' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleManualCoverage' ss:Parent='RuleDefault'>
  </Style>
  <Style ss:ID='RuleManualCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
  </Style>
  <Style ss:ID='RuleManualCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
  </Style>
 </Styles>
 <Worksheet ss:Name='Summary'>
  <Table ss:StyleID='TableDefault'>
   <Column ss:Index='1' ss:Width='75'/>
   <Column ss:Index='2' ss:Width='75'/>
   <Column ss:Index='3' ss:Width='75'/>
   <Column ss:Index='4' ss:Width='75'/>
   <Column ss:Index='5' ss:Width='75'/>
   <Column ss:Index='6' ss:Width='75'/>
   <Column ss:Index='7' ss:Width='37.5'/>
   <Row ss:Height='20'>
    <Cell ss:StyleID='Title' ss:MergeAcross='6'><Data ss:Type='String'>MISRA-C:2012 Standards Model Summary for C / C++</Data></Cell>
   </Row>
   <Row ss:Index='3' ss:AutoFitHeight='1'>
    <Cell ss:StyleID='Note' ss:MergeAcross='6'><Data ss:Type='String'>The LDRA tool suite&reg; is developed and certified to BS EN ISO 9001:2000.</Data></Cell>
   </Row>
   <Row ss:Index='5' ss:AutoFitHeight='1'>
    <Cell ss:StyleID='Note' ss:MergeAcross='6' ss:MergeDown='1'><Data ss:Type='String'>This information is applicable to version 9.4.4 of the LDRA tool suite&reg;.&#10;It is correct as of 25th April 2014.</Data></Cell>
   </Row>
   <Row ss:Index='8' ss:AutoFitHeight='1'>
    <Cell ss:StyleID='Note' ss:MergeAcross='6' ss:MergeDown='6'><Data ss:Type='String'>Compliance is measured against&#10;"MISRA C:2012 Guidelines for the use of the C language in critical systems"&#10;2013&#10;Copyright &copy; MISRA&#10;&#10;Further information is available at http://www.misra.org.uk</Data></Cell>
   </Row>
   <Row ss:Index='16'>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Classification</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Enhanced&#10;Enforcement</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Fully&#10;Implemented</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Partially&#10;Implemented</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Not yet&#10;Implemented</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Not statically&#10;Checkable</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Total</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryClass'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage'><Data ss:Type='Number'>8</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage'><Data ss:Type='Number'>2</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>10</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryClass'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage'><Data ss:Type='Number'>9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage'><Data ss:Type='Number'>91</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage'><Data ss:Type='Number'>9</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage'><Data ss:Type='Number'>2</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>111</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryClass'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage'><Data ss:Type='Number'>6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage'><Data ss:Type='Number'>27</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage'><Data ss:Type='Number'>5</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>38</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='String'>Total</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>15</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>126</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>16</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>2</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>159</Data></Cell>
   </Row>
  </Table>
    <WorksheetOptions xmlns='urn:schemas-microsoft-com:office:excel'>
     <PageSetup>
      <Layout x:Orientation='Landscape' x:CenterHorizontal='1'/>
      <Header x:Margin='0.19685039370078741'
       x:Data='&amp;CVersion 9.4.4 Copyright &copy; 2014 LDRA Ltd.&#10;Copies of this document are not to be made or distributed.'/>
      <Footer x:Margin='0.19685039370078741'
       x:Data='&amp;CLDRA Ltd. reserves the right to change any specifications contained within this document without prior notice.&#10;The document was deemed correct at time of distribution.'/>
      <PageMargins x:Bottom='0.78740157480314965' x:Left='0.59055118110236227'
       x:Right='0.59055118110236227' x:Top='0.78740157480314965'/>
     </PageSetup>
     <FitToPage/>
     <Print>
      <FitHeight>0</FitHeight>
      <ValidPrinterInfo/>
      <PaperSizeIndex>9</PaperSizeIndex>
      <Scale>91</Scale>
      <HorizontalResolution>600</HorizontalResolution>
      <VerticalResolution>600</VerticalResolution>
     </Print>
    </WorksheetOptions>
 </Worksheet>
 <Worksheet ss:Name='Compliance'>
  <Names>
   <NamedRange ss:Name='Print_Titles' ss:RefersTo='=Compliance!R1:R3'/>
  </Names>
  <Table ss:StyleID='TableDefault'>
   <Column ss:Index='1' ss:StyleID='ComplianceID'/>
   <Column ss:Index='2' ss:StyleID='ComplianceClassification' ss:Width='95'/>
   <Column ss:Index='3' ss:Width='250'/>
   <Column ss:Index='4' ss:StyleID='ComplianceLDRA' ss:Width='55'/>
   <Column ss:Index='5' ss:Width='250'/>
   <Row ss:AutoRowHeight='1'>
    <Cell ss:StyleID='Title' ss:MergeAcross='4'><Data ss:Type='String'>MISRA-C:2012 Standards Model Compliance for C / C++</Data></Cell>
   </Row>
   <Row ss:Index='3'>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Classification</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Rule Description</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>LDRA&#10;Standard</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>LDRA Standard Description</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>D.1.1</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Any implementation-defined behaviour on which the output of the program depends shall be documented and understood</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>69 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>#pragma used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>584 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Remainder of % op could be negative.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>D.2.1</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All source files shall compile without any compilation errors</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>D.3.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All code shall be traceable to documented requirements</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='3'><Data ss:Type='String'>D.4.1</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='3'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>Run-time failures shall be minimised</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>43 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Divide by 0 found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>45 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Pointer not checked for null before use.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>248 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Divide by zero in preprocessor directive.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>629 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Divide by zero found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>D.4.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All usage of assembly language should be documented</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>17 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Code insert found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>D.4.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Assembly language shall be encapsulated and isolated</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>88 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure is not pure assembler.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>D.4.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Sections of code should not be 'commented out'</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>302 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Comment possibly contains code.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>D.4.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Identifiers in the same namespace with overlapping visibility should be typographically unambiguous</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>217 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Names only differ by case.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>67 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier is typographically ambiguous.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='1'><Data ss:Type='String'>D.4.6</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='1'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>typedefs that indicate size and signedness should be used in place of the basic numerical types</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>90 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Basic type declaration used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>495 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Typedef name has no size indication.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='0'><Data ss:Type='String'>D.4.7</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>If a function returns error information, then that error information shall be tested</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>91 D  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Function return value potentially unused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>D.4.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>If a pointer to a structure or union is never dereferenced within a translation unit, then the implementation of the object should be hidden</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>104 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Structure implementation not hidden.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='0'><Data ss:Type='String'>D.4.9</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A function should be used in preference to a function-like macro where they are interchangeable</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>340 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Use of function like macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>D.4.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Precautions shall be taken in order to prevent the contents of a header file being included more than once</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>243 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file not protected with #define.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>D.4.11</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The validity of values passed to library functions shall be checked</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>D.4.12</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Dynamic memory allocation shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>D.4.13</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Functions which are designed to provide operations on a resource should be called in an appropriate sequence</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='7'><Data ss:Type='String'>R.1.1</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='7'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='7'><Data ss:Type='String'>The program shall contain no violations of the standard C syntax and constraints, and shall not exceed the implementation's translation limits</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>21 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Number of parameters does not match.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>145 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>#if has invalid expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>323 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Switch has more than one default case.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>345 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Bit operator with floating point operand.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>404 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Array initialisation has too many items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>481 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Array with no bounds in struct.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>580 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Macro redefinition without using #undef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>615 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Conditional operator has incompatible types.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='3'><Data ss:Type='String'>R.1.2</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='3'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>Language extensions should not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>110 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Use of single line comment //.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>143 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Curly brackets used in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>293 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Non ANSI/ISO construct used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>632 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Use of // comment in pre-processor directive or macro defn.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='34'><Data ss:Type='String'>R.1.3</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='34'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='34'><Data ss:Type='String'>There shall be no occurrence of undefined or critical unspecified behaviour</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>82 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>fsetpos values not generated by fgetpos.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>83 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Potentially repeated call to ungetc.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>84 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>No fseek or flush before I/O.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>87 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Illegal shared object in signal handler.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>89 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Illegal use of raise in signal handler.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>5 Q  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>File does not end with new line.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>21 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Number of parameters does not match.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>64 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Void procedure used in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>65 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Void variable passed as parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>113 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Non standard character in source.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>118 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>main must be int (void) or int (int,char*[]).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>176 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Non standard escape sequence in source.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>296 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Function declared at block scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>324 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Macro call has wrong number of parameters.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>335 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Operator defined contains illegal items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>336 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>#if expansion contains define operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>412 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Undefined behaviour, \ before E-O-F.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>450 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Wide string and string concatenated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>465 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Struct/union not completely specified.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>482 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Incomplete structure referenced.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>486 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Incorrect number of formats in output function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>487 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Insufficient space allocated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>489 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Insufficient space for operation.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>497 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Type is incomplete in translation unit.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>573 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Macro concatenation of uni char names.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>576 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Function pointer is of wrong type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>582 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>const object reassigned.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>587 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Const local variable not immediately initialised.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>589 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Format is not appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>590 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Mode fault in fopen.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>608 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Use of explicitly undefined language feature.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>66 X  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Insufficient array space at call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>70 X  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Array has insufficient space.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>71 X  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Insufficient space for copy.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='4'><Data ss:Type='String'>R.2.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='4'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='4'><Data ss:Type='String'>A project shall not contain unreachable code</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>28 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Potentially infinite loop found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>76 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure is not called or referenced in code analysed.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 J  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unreachable Code found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>3 J  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>All internal linkage calls unreachable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>35 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Static procedure is not explicitly called in code analysed.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='3'><Data ss:Type='String'>R.2.2</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='3'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>There shall be no dead code</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>8 D  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>DD data flow anomalies found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>65 D  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Void function has no side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>105 D  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>DU anomaly dead code, variable value is unused on all paths.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>57 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Statement with no side effect.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.2.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A project should not contain unused type declarations</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>413 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>User type declared but not used in code analysed.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.2.4</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A project should not contain unused tag declarations</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>413 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>User type declared but not used in code analysed.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.2.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A project should not contain unused macro declarations</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>628 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro not used in translation unit.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.2.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A function should not contain unused label declarations</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>610 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Label is unused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.2.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>There should be no unused parameters in functions</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unused procedure parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>15 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unused procedural parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.3.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The character sequences /* and // shall not be used within a comment</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>119 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Nested comment found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.3.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Line-splicing shall not be used in // comments</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>611 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Line splice used in // comment.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.4.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Octal and hexadecimal escape sequences shall be terminated</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>176 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Non standard escape sequence in source.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.4.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Trigraphs should not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>81 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of trigraph.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.5.1</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>External identifiers shall be distinct</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>17 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Identifier not unique within *** characters.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>61 X  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Identifier match in *** chars.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.5.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Identifiers declared in the same scope and name space shall be distinct</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>17 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier not unique within *** characters.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>61 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier match in *** chars.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>R.5.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='5'><Data ss:Type='String'>An identifier declared in an inner scope shall not hide an identifier declared in an outer scope</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>17 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier not unique within *** characters.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>18 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier name reused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>92 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Duplicate use of a name in an enumeration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>128 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter has same name as global variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>131 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name reused in inner scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>61 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier match in *** chars.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>R.5.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Macro identifiers shall be distinct</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>384 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier matches macro name in 31 chars.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>622 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro parameters are not unique within limits.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>61 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier match in *** chars.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='10'><Data ss:Type='String'>R.5.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='10'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='10'><Data ss:Type='String'>Identifiers shall be distinct from macro names</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>383 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier name matches macro name.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>384 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier matches macro name in 31 chars.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>12 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>21 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>34 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: proc vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>37 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>47 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: component vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>48 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: label vs macro (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>50 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: var vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>53 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: proc param vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>57 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: macro vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='10'><Data ss:Type='String'>R.5.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='10'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='10'><Data ss:Type='String'>A typedef name shall be a unique identifier</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>112 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Typedef name redeclared.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>374 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name conflict with typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>11 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>16 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>17 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>18 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>19 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs procedure parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>20 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>22 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs component.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>23 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>24 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='11'><Data ss:Type='String'>R.5.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='11'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='11'><Data ss:Type='String'>A tag name shall be a unique identifier</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>325 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inconsistent use of tag.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>4 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: struct/union tag repeated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>5 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: struct vs union.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>6 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: struct/union tag vs enum tag.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>7 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>8 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs procedure parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>9 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>10 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>11 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>13 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs component.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>14 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>15 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs tag.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='17'><Data ss:Type='String'>R.5.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='17'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='17'><Data ss:Type='String'>Identifiers that define objects or functions with external linkage shall be unique</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure name reused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>7 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>15 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs tag.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>20 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>24 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>25 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: procedure vs procedure param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>26 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>27 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persist var vs persist var.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>28 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs var.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>29 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>30 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs proc param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>31 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: procedure vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>32 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: procedure vs var.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>33 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: procedure vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>35 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: proc vs component.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>36 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: proc vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>38 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs component.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>39 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='17'><Data ss:Type='String'>R.5.9</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='17'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='17'><Data ss:Type='String'>Identifiers that define objects or functions with internal linkage should be unique</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>1 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Procedure name reused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>7 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>15 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs tag.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>20 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>24 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>25 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: procedure vs procedure param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>26 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>27 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persist var vs persist var.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>28 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs var.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>29 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>30 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs proc param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>31 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: procedure vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>32 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: procedure vs var.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>33 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: procedure vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>35 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: proc vs component.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>36 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: proc vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>38 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs component.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>39 X  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.6.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Bit-fields shall only be declared with an appropriate type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>73 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bit field not signed or unsigned int.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>520 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bit field is not bool or explicit integral.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.6.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Single-bit named bit fields shall not be of a signed type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>72 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signed bit field less than 2 bits wide.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.7.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Octal constants shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>83 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Octal number found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.7.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>A &quot;u&quot; or &quot;U&quot; suffix shall be applied to all integer constants that are represented in an unsigned type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>331 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Literal value requires a U suffix.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>550 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsuffixed hex or octal is unsigned, add U.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.7.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The lowercase character 'l' shall not be used in a literal suffix</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>252 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Lower case suffix to literal number.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.7.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>A string literal shall not be assigned to an object unless the object's type is &quot;pointer to const-qualified char&quot;</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>157 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Modification of string literal.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>623 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>String assigned to non const object.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>R.8.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Types shall be explicitly specified</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>20 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter not declared explicitly.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>135 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter list is KR.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>326 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration is missing type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>R.8.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Function types shall be in prototype form with named parameters</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>37 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure parameter has a type but no identifier.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>63 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Empty parameter list to procedure/function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>135 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter list is KR.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.8.3</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>All declarations of an object or function shall use the same names and type qualifiers</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>36 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Prototype and definition name mismatch.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>63 X  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Function prototype/defn param type mismatch (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='6'><Data ss:Type='String'>R.8.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='6'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='6'><Data ss:Type='String'>A compatible declaration shall be visible when an object or function with external linkage is defined</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>36 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Prototype and definition name mismatch.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>106 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No prototype for non-static function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>102 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function and prototype return inconsistent (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>103 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function and prototype param inconsistent (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration types do not match across a system.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>62 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function prototype/defn return type mismatch (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>63 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function prototype/defn param type mismatch (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>R.8.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>An external object or function shall be declared once in one and only one file</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>60 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>External object should be declared only once.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>110 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than one prototype for same function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>172 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable declared multiply.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>R.8.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>An identifier with external linkage shall have exactly one external definition</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>26 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable should be defined once in only one file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>33 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No real declaration for external variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>34 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure name re-used in different files.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>63 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No definition in system for prototyped procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.8.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Functions and objects should not be defined with external linkage if they are referenced in only one translation unit</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>27 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable should be declared static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>61 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure should be declared static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='4'><Data ss:Type='String'>R.8.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='4'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='4'><Data ss:Type='String'>The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>27 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable should be declared static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>61 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure should be declared static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>461 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier with ambiguous linkage.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>553 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function and proto should both be static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>575 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Linkage differs from previous declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.8.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>An object should be defined at block scope if its identifier only appears in a single function</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>25 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Scope of variable could be reduced.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.8.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>An inline function shall be declared with the static storage class</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>612 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>inline function should be declared static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.8.11</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>When an array with external linkage is declared, its size should be explicitly specified</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>127 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array has no bounds specified.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.8.12</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Within an enumerator list, the value of an implicitly-specified enumeration constant shall be unique</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>630 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Duplicated enumeration value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.8.13</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A pointer should point to a const-qualified type whenever possible</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>62 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer parameter should be declared const.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.8.14</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The restrict type qualifier shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>613 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of restrict keyword.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>R.9.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>The value of an object with automatic storage duration shall not be read before it has been set</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>53 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to use uninitialised pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>69 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>UR anomaly, variable used before assignment.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>631 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration not reachable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.9.2</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The initializer for an aggregate or union shall be enclosed in braces</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>105 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Initialisation brace { } fault.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>627 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Initialiser both positional and designational.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.9.3</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Arrays shall not be partially initialized</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>397 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Array initialisation has insufficient items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>627 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Initialiser both positional and designational.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.9.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>An element of an object shall not be initialised more than once</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>620 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Initialisation designator duplicated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>627 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Initialiser both positional and designational.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.9.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Where designated initialisers are used to initialize an array object the size of the array shall be specified explicitly</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>127 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array has no bounds specified.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='14'><Data ss:Type='String'>R.10.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='14'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='14'><Data ss:Type='String'>Operands shall not be of an inappropriate essential type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>50 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of shift operator on signed type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>52 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsigned expression negated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>93 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value is not of appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of mixed mode arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>114 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression is not Boolean.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>120 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of bit operator on signed type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>123 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of underlying enum representation value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>136 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bit operator with boolean operand.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>249 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operation not appropriate to boolean type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>329 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operation not appropriate to plain char.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>345 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bit operator with floating point operand.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>389 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bool value incremented/decremented.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>403 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Negative (or potentially negative) shift.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>433 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>506 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of boolean with relational operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.10.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Expressions of essentially character type shall not be used inappropriately in addition and subtraction operations</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of mixed mode arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>329 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operation not appropriate to plain char.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='17'><Data ss:Type='String'>R.10.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='17'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='17'><Data ss:Type='String'>The value of an expression shall not be assigned to an object with a narrower essential type or of a different essential type category</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>93 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value is not of appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of mixed mode arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>101 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function return type inconsistent.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>104 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Struct field initialisation incorrect.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>123 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of underlying enum representation value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>276 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Case is not part of switch enumeration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>330 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit conversion of underlying type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>331 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Literal value requires a U suffix.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>411 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inappropriate value assigned to enum.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>431 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Char used instead of (un)signed char.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>432 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inappropriate type - should be plain char.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>433 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>434 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signed/unsigned conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>435 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Float/integer conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>445 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Narrower float conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>446 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Narrower int conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>458 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit conversion: actual to formal param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>488 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value outside range of underlying type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='9'><Data ss:Type='String'>R.10.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='9'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='9'><Data ss:Type='String'>Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>93 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value is not of appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of mixed mode arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>107 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type mismatch in ternary expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>123 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of underlying enum representation value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>330 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit conversion of underlying type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>331 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Literal value requires a U suffix.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>433 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>434 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signed/unsigned conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>435 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Float/integer conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>488 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value outside range of underlying type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.10.5</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The value of an expression should not be cast to an inappropriate essential type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>93 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Value is not of appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.10.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The value of a composite expression shall not be assigned to an object with wider essential type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>451 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No cast for widening complex float expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>452 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No cast for widening complex int expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.10.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>If a composite expression is used as one operand of an operator in which the usual arithmetic conversions are performed then the other operand shall not have wider essential type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>451 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No cast for widening complex float expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>452 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No cast for widening complex int expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>R.10.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='5'><Data ss:Type='String'>The value of a composite expression shall not be cast to a different essential type category or a wider essential type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>332 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Widening cast on complex integer expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>333 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Widening cast on complex float expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>441 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Float cast to non-float.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>442 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signed integral type cast to unsigned.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>443 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsigned integral type cast to signed.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>444 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Integral type cast to non-integral.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='4'><Data ss:Type='String'>R.11.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='4'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='4'><Data ss:Type='String'>Conversions shall not be performed between a pointer to a function and any other type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>93 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value is not of appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>94 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation on a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>95 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation to a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>440 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from integral type to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>606 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast involving function pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='4'><Data ss:Type='String'>R.11.2</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='4'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='4'><Data ss:Type='String'>Conversions shall not be performed between a pointer to incomplete and any other type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>94 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Casting operation on a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>95 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Casting operation to a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>439 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Cast from pointer to integral type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>440 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Cast from integral type to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>554 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Cast to an unrelated type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='2'><Data ss:Type='String'>R.11.3</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='2'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>A cast shall not be performed between a pointer to object type and a pointer to a different object type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>94 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Casting operation on a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>95 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Casting operation to a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>554 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Cast to an unrelated type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.11.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>A conversion should not be performed between a pointer to object and an integer type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>439 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from pointer to integral type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>440 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from integral type to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.11.5</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A conversion should not be performed from pointer to void into pointer to object</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>95 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Casting operation to a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='3'><Data ss:Type='String'>R.11.6</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='3'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>A cast shall not be performed between pointer to void and an arithmetic type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>439 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Cast from pointer to integral type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>440 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Cast from integral type to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>635 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Cast from pointer to float type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>636 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Cast from float type to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>R.11.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>A cast shall not be performed between pointer to object and a non-integer arithmetic type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>94 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation on a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>95 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation to a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>439 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from pointer to integral type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>440 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from integral type to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.11.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>A cast shall not remove any const or volatile qualification from the type pointed to by a pointer</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>203 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast on a constant value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>344 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast on volatile value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.11.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The macro NULL shall be the only permitted form of integer null pointer constant</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>531 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Literal zero used in pointer context.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.12.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The precedence of operators within expressions should be made explicit</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>49 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Logical conjunctions need brackets.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>361 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression needs brackets.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.12.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The right hand operand of a shift operator shall lie in the range zero to one less than the width in bits of the essential type of the left hand operand</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>51 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Shifting value too far.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>403 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Negative (or potentially negative) shift.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.12.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The comma operator should not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>53 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of comma operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.12.4</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Evaluation of constant expressions should not lead to unsigned integer wrap-around</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>493 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Numeric overflow.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>494 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Numeric underflow.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>R.13.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='5'><Data ss:Type='String'>Initialiser lists shall not contain persistent side effects</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>35 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression has side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 Q  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Call has execution order dependant side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>9 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operation in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>30 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Deprecated usage of ++ or -- operators found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>132 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operator in boolean expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>134 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Volatile variable in complex expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='7'><Data ss:Type='String'>R.13.2</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='7'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='7'><Data ss:Type='String'>The value of an expression and its persistent side effects shall be the same under all permitted evaluation orders</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>22 D  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Function has global variable side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>35 D  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Expression has side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>72 D  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Potential side effect problem in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>74 D  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Potential side effect from repeated function call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>1 Q  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Call has execution order dependant side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>9 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Assignment operation in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>30 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Deprecated usage of ++ or -- operators found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>134 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Volatile variable in complex expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.13.3</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A full expression containing an increment (++) or decrement (--) operator should have no other potential side effects other than that caused by the increment or decrement operator</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>30 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Deprecated usage of ++ or -- operators found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.13.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The result of an assignment operator should not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>9 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operation in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>132 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operator in boolean expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>R.13.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>The right hand operand of a logical &amp;&amp; or || operator shall not contain persistent side effects</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>35 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression has side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 Q  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Call has execution order dependant side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>406 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of ++ or -- on RHS of &amp;&amp; or || operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>408 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Volatile variable accessed on RHS of &amp;&amp; or ||.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.13.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The operand of the sizeof operator shall not contain any expression which has potential side effects</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>54 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Sizeof operator with side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.14.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A loop counter shall not have essentially floating type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>39 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsuitable type for loop variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='5'><Data ss:Type='String'>R.14.2</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='5'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='5'><Data ss:Type='String'>A for loop shall be well-formed</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>55 D  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Modification of loop counter in loop body.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>270 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>For loop initialisation is not simple.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>271 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>For loop incrementation is not simple.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>429 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Empty middle expression in for loop.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>430 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Inconsistent usage of loop control variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>581 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Loop conditions are independent.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.14.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Controlling expressions shall not be invariant</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>139 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Construct leads to infeasible code.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>140 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Infeasible loop condition found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.14.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The controlling expression of an if statement and the controlling expression of an iteration-statement shall have essentially Boolean type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>114 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression is not Boolean.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.15.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The goto statement should not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>13 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>goto detected.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.15.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The goto statement shall jump to a label declared later in the same function</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>509 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>goto label is backwards.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.15.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Any label referenced by a goto statement shall be declared in the same block, or in any block enclosing the goto statement</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>511 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Jump into nested block.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.15.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>There should be no more than one break or goto statement used to terminate any iteration statement</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>409 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than one break or goto statement in loop.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.15.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A function should have a single point of exit at the end</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>7 C  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure has more than one exit point.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>R.15.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>The body of an iteration-statement or a selection-statement shall be a compound statement</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>11 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No brackets to loop body (added by Testbed).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>12 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No brackets to then/else (added by Testbed).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>428 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No {} for switch (added by Testbed).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.15.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>All if . . else if constructs shall be terminated with an else statement</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>59 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Else alternative missing in if.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>477 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Empty else clause following else if.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.16.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All switch statements shall be well-formed</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>385 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>MISRA switch statement syntax violation.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.16.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A switch label shall only be used when the most closely-enclosing compound statement is the body of a switch statement</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>245 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Case statement in nested block.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.16.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>An unconditional break statement shall terminate every switch-clause</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>62 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Switch case not terminated with break.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.16.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Every switch statement shall have a default label</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>48 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No default case in switch statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>410 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Switch empty default has no comment.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.16.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A default label shall appear as either the first or the last switch label of a switch statement</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>322 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Default is not last case of switch.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.16.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Every switch statement shall have at least two switch-clauses</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>60 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Empty switch statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>61 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Switch contains default only.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.16.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A switch-expression shall not have essentially Boolean type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>121 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of boolean expression in switch.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.17.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The features of &lt;stdarg.h&gt; shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.17.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Functions shall not call themselves, either directly or indirectly</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>6 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Recursion in procedure calls found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 U  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inter-file recursion found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.17.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A function shall not be declared implicitly</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>496 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function call with no prior declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>R.17.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>All exit paths from a function with non-void return type shall have an explicit return statement with an expression</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>2 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function does not return a value on all paths.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>36 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function has no return statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>66 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function with empty return expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.17.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The function argument corresponding to a parameter declared to have an array type shall have an appropriate number of elements</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>64 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array bound exceeded at call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.17.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The declaration of an array parameter shall not contain the static keyword between the [ ]</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>614 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of static keyword in array parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.17.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The value returned by a function having non-void return type shall be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>91 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function return value potentially unused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>382 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>(void) missing for discarded return value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.17.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>A function parameter should not be modified</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>14 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to change parameter passed by value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>149 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Reference parameter to procedure is reassigned.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='6'><Data ss:Type='String'>R.18.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='6'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='6'><Data ss:Type='String'>A pointer resulting from arithmetic on a pointer operand shall address an element of the same array as that pointer operand</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>47 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array bound exceeded.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>436 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration does not specify an array.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>567 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer arithmetic is not on array.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>64 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array bound exceeded at call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>68 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter indexing array too big at call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>69 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Global array bound exceeded at use.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>72 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter indexing array too small at call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.18.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Subtraction between pointers shall only be applied to pointers that address elements of the same array</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>438 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer subtraction not addressing one array.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.18.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The relational operators &gt;, &gt;=, &lt; and &lt;= shall not be applied to objects of pointer type except where they point into the same object</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>437 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>&lt; &gt; &lt;= &gt;= used on different object pointers.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.18.4</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='1'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The +, -, += and -= operators should not be applied to an expression of pointer type</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>87 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Use of pointer arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>567 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Pointer arithmetic is not on array.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.18.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Declarations should contain no more than two levels of pointer nesting</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>80 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer indirection exceeds 2 levels.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>R.18.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>The address of an object with automatic storage shall not be copied to another object that persists after the first object has ceased to exist</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>42 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Local pointer returned in function result.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>77 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Local structure returned in function result.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>71 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer assignment to wider scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>565 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment to wider scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.18.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Flexible array members shall not be declared</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>481 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array with no bounds in struct.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.18.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Variable-length array types shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>621 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable-length array declared.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.19.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>An object shall not be assigned or copied to an overlapping object</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>480 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>String function params access same variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>545 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment of overlapping storage.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.19.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The union keyword should not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>74 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Union declared.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.20.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>#include directives should only be preceded by preprocessor directives or comments</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>75 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Executable code before an included file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>338 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#include preceded by non preproc directives.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.20.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The ', &quot; or \ characters and the /* or // character sequences shall not occur in a header file name</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>100 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#include filename is non conformant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.20.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The #include directive shall be followed by either a &lt;filename&gt; or &quot;filename&quot; sequence</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>427 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Filename in #include not in &lt; &gt; or &quot; &quot;.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>R.20.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>A macro shall not be defined with the same name as a keyword</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>86 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to define reserved word.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>580 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro redefinition without using #undef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>626 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#define of keyword.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.20.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>#undef should not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>68 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#undef used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>426 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#undef used in a block.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.20.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Tokens that look like a preprocessing directive shall not occur within a macro argument</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>341 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Preprocessor construct as macro parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.20.7</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Expressions resulting from the expansion of macro parameters shall be enclosed in parentheses</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>78 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Macro parameter not in brackets.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>361 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Expression needs brackets.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.20.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The controlling expression of a #if or #elif preprocessing directive shall evaluate to 0 or 1</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>616 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Preprocessor result not 0 or 1.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.20.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All identifiers used in the controlling expression of #if or #elif preprocessing directives shall be #define'd before evaluation</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>337 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Undefined macro variable in #if.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.20.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The # and ## preprocessor operators should not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>125 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of ## or # in a macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.20.11</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>A macro parameter immediately following a # operator shall not immediately be followed by a ## operator</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>76 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than one of # or ## in a macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>637 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'># operand followed by ##.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.20.12</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A macro parameter used as an operand to the # or ## operators, which is itself subject to further macro replacement, shall only be used as an operand to these operators</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleEnhancedCoverageRight'><Data ss:Type='String'>125 S  </Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverageWrapped'><Data ss:Type='String'>Use of ## or # in a macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.20.13</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>A line whose first token is # shall be a valid preprocessing directive</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>147 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Spurious characters after preprocessor directive.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>342 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Extra chars after preprocessor directive.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.20.14</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>All #else, #elif and #endif preprocessor directives shall reside in the same file as the #if, #ifdef or #ifndef directive to which they are related</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>126 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>A #if has no #endif in the same file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>343 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#else has no #if, etc in the same file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>R.21.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>#define and #undef shall not be used on a reserved identifier or reserved macro name</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>86 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to define reserved word.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>156 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of 'defined' keyword in macro body.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>219 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>User name starts with underscore.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.21.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>A reserved identifier or macro name shall not be declared</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>218 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name is used in standard libraries.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>219 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>User name starts with underscore.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.21.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The memory allocation and deallocation functions of &lt;stdlib.h&gt; shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.21.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The standard header file &lt;setjmp.h&gt; shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>43 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of setjmp/longjmp.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.21.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The standard header file &lt;signal.h&gt; shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>130 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file is not permitted.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.21.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The Standard Library input/output routines shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>130 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file is not permitted.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.21.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The atof, atoi, atol and atoll functions of &lt;stdlib.h&gt; shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.21.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The library functions abort, exit, getenv and system of &lt;stdlib.h&gt; shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>122 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of abort, exit, etc.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.21.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The library functions bsearch and qsort of &lt;stdlib.h&gt; shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.21.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The Standard Library time and date routines shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>130 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file is not permitted.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.21.11</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The standard header file &lt;tgmath.h&gt; shall not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>130 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file is not permitted.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.21.12</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Advisory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The exception handling features of &lt;fenv.h&gt; should not be used</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='2'><Data ss:Type='String'>R.22.1</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='2'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>All resources obtained dynamically by means of Standard Library functions shall be explicitly released</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>49 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>File pointer not closed on exit.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>50 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Memory not freed after last reference.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>75 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Attempt to open file pointer more than once.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>R.22.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>A block of memory shall only be freed if it was allocated by means of a Standard Library function</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>51 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to read from freed memory.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>407 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>free used on string.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>483 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>free parameter is not heap item.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>484 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to use already freed object.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.22.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Required</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The same file shall not be open for read and write access at the same time on different streams</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>103 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>File opened both read and write.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.22.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>There shall be no attempt to write to a stream which has been opened as read-only</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>98 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to write to file opened read only.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>R.22.5</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A pointer to a FILE object shall not be dereferenced</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>591 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Inappropriate use of file pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>R.22.6</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>Mandatory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The value of a pointer to a FILE shall not be used after the associated stream has been closed</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>48 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Attempt to write to unopened file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>113 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>File closed more than once.</Data></Cell>
   </Row>
  </Table>
    <WorksheetOptions xmlns='urn:schemas-microsoft-com:office:excel'>
     <PageSetup>
      <Layout x:Orientation='Landscape' x:CenterHorizontal='1'/>
      <Header x:Margin='0.19685039370078741'
       x:Data='&amp;CVersion 9.4.4 Copyright &copy; 2014 LDRA Ltd.&#10;Copies of this document are not to be made or distributed.'/>
      <Footer x:Margin='0.19685039370078741'
       x:Data='&amp;CLDRA Ltd. reserves the right to change any specifications contained within this document without prior notice.&#10;The document was deemed correct at time of distribution.'/>
      <PageMargins x:Bottom='0.78740157480314965' x:Left='0.59055118110236227'
       x:Right='0.59055118110236227' x:Top='0.78740157480314965'/>
     </PageSetup>
     <FitToPage/>
     <Print>
      <FitHeight>0</FitHeight>
      <ValidPrinterInfo/>
      <PaperSizeIndex>9</PaperSizeIndex>
      <Scale>91</Scale>
      <HorizontalResolution>600</HorizontalResolution>
      <VerticalResolution>600</VerticalResolution>
     </Print>
    </WorksheetOptions>
 </Worksheet>
</Workbook>
