<?xml version='1.0'?>
<?mso-application progid='Excel.Sheet'?>
<Workbook xmlns='urn:schemas-microsoft-com:office:spreadsheet'
 xmlns:o='urn:schemas-microsoft-com:office:office'
 xmlns:x='urn:schemas-microsoft-com:office:excel'
 xmlns:ss='urn:schemas-microsoft-com:office:spreadsheet'
 xmlns:html='http://www.w3.org/TR/REC-html40'>
 <DocumentProperties xmlns='urn:schemas-microsoft-com:office:office'>
  <LastAuthor>LDRA Standards Wiki</LastAuthor>
  <Created>2014-04-25T08:31:23Z</Created>
  <LastSaved>2014-04-25T08:31:23Z</LastSaved>
  <Version>12.0</Version>
 </DocumentProperties>
 <Styles>
  <Style ss:ID='TableDefault'>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
    <Border ss:Position='Left' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
    <Border ss:Position='Right' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
    <Border ss:Position='Top' ss:LineStyle='None' ss:Weight='1' ss:Color='#B2B2B2'/>
   </Borders>
  </Style>
  <Style ss:ID='Default' ss:Name='Normal'>
   <Alignment ss:Vertical='Top'/>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
   </Borders>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
   <Interior/>
   <NumberFormat/>
   <Protection/>
  </Style>
  <Style ss:ID='Title' ss:Name='Title' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='1'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='16' ss:Bold='1' ss:Color='#000000'/>
   <Interior ss:Color='#FFCC99' ss:Pattern='Solid'/>
   <Borders>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='Note' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='1'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
   <Interior ss:Color='#CCFFFF' ss:Pattern='Solid'/>
   <Borders>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='2' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='Heading' ss:Name='Column Headings' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='1'/>
   <Interior ss:Color='#C0C0C0' ss:Pattern='Solid'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='SummaryClass' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='SummaryValue' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='SummaryTotal' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Interior ss:Color='#C0C0C0' ss:Pattern='Solid'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Bold='1' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='ComplianceID' ss:Name='Model Rule Column' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='ComplianceClassification' ss:Name='Classification Column' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='ComplianceLDRA' ss:Name='LDRA Standard Column' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center' ss:WrapText='0'/>
   <Font ss:FontName='Arial' x:Family='Swiss' ss:Size='11' ss:Color='#000000'/>
  </Style>
  <Style ss:ID='RuleDefault' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Center'/>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='RuleDefaultWrapped' ss:Parent='Default'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Left' ss:WrapText='1'/>
   <Borders>
    <Border ss:Position='Bottom' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Left' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Right' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
    <Border ss:Position='Top' ss:LineStyle='Continuous' ss:Weight='1' ss:Color='#000000'/>
   </Borders>
  </Style>
  <Style ss:ID='RuleEnhancedCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#88FF88' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleEnhancedCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#88FF88' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleEnhancedCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#88FF88' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleFullCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#CCFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleFullCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#CCFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleFullCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#CCFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePartialCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#FFFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePartialCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#FFFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePartialCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#FFFFCC' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePendingCoverage' ss:Parent='RuleDefault'>
   <Interior ss:Color='#CCCCFF' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePendingCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
   <Interior ss:Color='#CCCCFF' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RulePendingCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
   <Interior ss:Color='#CCCCFF' ss:Pattern='Solid'/>
  </Style>
  <Style ss:ID='RuleManualCoverage' ss:Parent='RuleDefault'>
  </Style>
  <Style ss:ID='RuleManualCoverageRight' ss:Parent='RuleDefault'>
   <Alignment ss:Vertical='Center' ss:Horizontal='Right'/>
  </Style>
  <Style ss:ID='RuleManualCoverageWrapped' ss:Parent='RuleDefaultWrapped'>
  </Style>
 </Styles>
 <Worksheet ss:Name='Summary'>
  <Table ss:StyleID='TableDefault'>
   <Column ss:Index='1' ss:Width='75'/>
   <Column ss:Index='2' ss:Width='75'/>
   <Column ss:Index='3' ss:Width='75'/>
   <Column ss:Index='4' ss:Width='75'/>
   <Column ss:Index='5' ss:Width='75'/>
   <Column ss:Index='6' ss:Width='75'/>
   <Column ss:Index='7' ss:Width='37.5'/>
   <Row ss:Height='20'>
    <Cell ss:StyleID='Title' ss:MergeAcross='6'><Data ss:Type='String'>MISRA-AC Standards Model Summary for C / C++</Data></Cell>
   </Row>
   <Row ss:Index='3' ss:AutoFitHeight='1'>
    <Cell ss:StyleID='Note' ss:MergeAcross='6'><Data ss:Type='String'>The LDRA tool suite&reg; is developed and certified to BS EN ISO 9001:2000.</Data></Cell>
   </Row>
   <Row ss:Index='5' ss:AutoFitHeight='1'>
    <Cell ss:StyleID='Note' ss:MergeAcross='6' ss:MergeDown='1'><Data ss:Type='String'>This information is applicable to version 9.4.4 of the LDRA tool suite&reg;.&#10;It is correct as of 25th April 2014.</Data></Cell>
   </Row>
   <Row ss:Index='8' ss:AutoFitHeight='1'>
    <Cell ss:StyleID='Note' ss:MergeAcross='6' ss:MergeDown='6'><Data ss:Type='String'>Compliance is measured against&#10;"MISRA AC AGC Guidelines for the application of MISRA-C:2004 in the context of automatic code generation"&#10;November 2007&#10;Copyright &copy; MISRA&#10;&#10;Further information is available at http://www.misra.org.uk</Data></Cell>
   </Row>
   <Row ss:Index='16'>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Classification</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Enhanced&#10;Enforcement</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Fully&#10;Implemented</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Partially&#10;Implemented</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Not yet&#10;Implemented</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Not statically&#10;Checkable</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Total</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryClass'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage'><Data ss:Type='Number'>81</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage'><Data ss:Type='Number'>6</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage'><Data ss:Type='Number'>1</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage'><Data ss:Type='Number'>10</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>98</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryClass'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage'><Data ss:Type='Number'>31</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage'><Data ss:Type='Number'>2</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>33</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryClass'><Data ss:Type='String'>Readability</Data></Cell>
    <Cell ss:StyleID='RuleEnhancedCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage'><Data ss:Type='Number'>9</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>9</Data></Cell>
   </Row>
   <Row>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='String'>Total</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'></Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>121</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>6</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>1</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>12</Data></Cell>
    <Cell ss:StyleID='SummaryTotal'><Data ss:Type='Number'>140</Data></Cell>
   </Row>
  </Table>
    <WorksheetOptions xmlns='urn:schemas-microsoft-com:office:excel'>
     <PageSetup>
      <Layout x:Orientation='Landscape' x:CenterHorizontal='1'/>
      <Header x:Margin='0.19685039370078741'
       x:Data='&amp;CVersion 9.4.4 Copyright &copy; 2014 LDRA Ltd.&#10;Copies of this document are not to be made or distributed.'/>
      <Footer x:Margin='0.19685039370078741'
       x:Data='&amp;CLDRA Ltd. reserves the right to change any specifications contained within this document without prior notice.&#10;The document was deemed correct at time of distribution.'/>
      <PageMargins x:Bottom='0.78740157480314965' x:Left='0.59055118110236227'
       x:Right='0.59055118110236227' x:Top='0.78740157480314965'/>
     </PageSetup>
     <FitToPage/>
     <Print>
      <FitHeight>0</FitHeight>
      <ValidPrinterInfo/>
      <PaperSizeIndex>9</PaperSizeIndex>
      <Scale>91</Scale>
      <HorizontalResolution>600</HorizontalResolution>
      <VerticalResolution>600</VerticalResolution>
     </Print>
    </WorksheetOptions>
 </Worksheet>
 <Worksheet ss:Name='Compliance'>
  <Names>
   <NamedRange ss:Name='Print_Titles' ss:RefersTo='=Compliance!R1:R3'/>
  </Names>
  <Table ss:StyleID='TableDefault'>
   <Column ss:Index='1' ss:StyleID='ComplianceID'/>
   <Column ss:Index='2' ss:StyleID='ComplianceClassification' ss:Width='95'/>
   <Column ss:Index='3' ss:Width='250'/>
   <Column ss:Index='4' ss:StyleID='ComplianceLDRA' ss:Width='55'/>
   <Column ss:Index='5' ss:Width='250'/>
   <Row ss:AutoRowHeight='1'>
    <Cell ss:StyleID='Title' ss:MergeAcross='4'><Data ss:Type='String'>MISRA-AC Standards Model Compliance for C / C++</Data></Cell>
   </Row>
   <Row ss:Index='3'>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Rule</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Classification</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>Rule Description</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>LDRA&#10;Standard</Data></Cell>
    <Cell ss:StyleID='Heading'><Data ss:Type='String'>LDRA Standard Description</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='4'><Data ss:Type='String'>1.1</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='4'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='4'><Data ss:Type='String'>All code shall conform to ISO 9899:1990 &quot;Programming languages - C&quot;, amended and corrected by ISO/IEC 9899/COR1:1995, ISO/IEC 9899/AMD1:1995, and ISO/IEC 9899/COR2:1996</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>143 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Curly brackets used in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>145 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>#if has invalid expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>293 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Non ANSI/ISO construct used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>580 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Macro redefinition without using #undef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>615 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Conditional operator has incompatible types.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='14'><Data ss:Type='String'>1.2</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='14'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='14'><Data ss:Type='String'>No reliance shall be placed on undefined or unspecified behaviour.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>82 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>fsetpos values not generated by fgetpos.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>83 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Potentially repeated call to ungetc.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>84 D  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>No fseek or flush before I/O.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>5 Q  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>File does not end with new line.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>64 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Void procedure used in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>65 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Void variable passed as parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>113 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Non standard character in source.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>157 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Modification of string literal.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>412 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Undefined behaviour, \ before E-O-F.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>450 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Wide string and string concatenated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>573 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Macro concatenation of uni char names.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>575 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Linkage differs from previous declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>582 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>const object reassigned.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>587 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Const local variable not immediately initialised.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>590 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Mode fault in fopen.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>1.3</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Multiple compilers and/or languages shall only be used if there is a common defined interface standard for object code to which the languages/compilers/assemblers conform.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='1'><Data ss:Type='String'>1.4</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The compiler/linker shall be checked to ensure that 31 character significance and case sensitivity are supported for external identifiers.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>17 D  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Identifier not unique within *** characters.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>61 X  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Identifier match in *** chars.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>1.5</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Floating-point implementations should comply with a defined floating-point standard.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>2.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Assembly language shall be encapsulated and isolated.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>88 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure is not pure assembler.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>2.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Source code shall only use /* ... */ style comments.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>110 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of single line comment //.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>632 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of // comment in pre-processor directive or macro defn.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>2.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The character sequence /* shall not be used within a comment.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>119 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Nested comment found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>2.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Sections of code should not be &quot;commented out&quot;.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>302 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Comment possibly contains code.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.1</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All usage of implementation-defined behaviour shall be documented.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.2</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The character set and the corresponding encoding shall be documented.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.3</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The implementation of integer division in the chosen compiler should be determined, documented and taken into account.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>373 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Use of integer division.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.4</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All uses of the #pragma directive shall be documented and explained.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>69 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>#pragma used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.5</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>If it is being relied upon, the implementation defined behaviour and packing of bitfields shall be documented.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>42 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Use of bit field in structure declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>3.6</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All libraries used in production code shall be written to comply with the provisions of this document, and shall have been subject to appropriate validation.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>4.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Only those escape sequences that are defined in the ISO C standard shall be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>176 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Non standard escape sequence in source.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>4.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Trigraphs shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>81 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of trigraph.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>5.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Identifiers (internal and external) shall not rely on the significance of more than 31 characters.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>17 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier not unique within *** characters.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>384 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier matches macro name in 31 chars.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>61 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier match in *** chars.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>5.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='5'><Data ss:Type='String'>Identifiers in an inner scope shall not use the same name as an identifier in an outer scope, and therefore hide that identifier.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>18 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier name reused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure name reused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>91 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name redeclared in another C name space (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>92 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Duplicate use of a name in an enumeration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>128 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter has same name as global variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>131 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name reused in inner scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='12'><Data ss:Type='String'>5.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='12'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='12'><Data ss:Type='String'>A typedef name shall be a unique identifier.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>112 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Typedef name redeclared.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>131 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name reused in inner scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>374 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name conflict with typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>11 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>16 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>17 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>18 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>19 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs procedure parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>20 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>21 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>22 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs component.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>23 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>24 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='13'><Data ss:Type='String'>5.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='13'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='13'><Data ss:Type='String'>A tag name shall be a unique identifier.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>131 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name reused in inner scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>325 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inconsistent use of tag.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>4 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: struct/union tag repeated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>5 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: struct vs union.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>6 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: struct/union tag vs enum tag.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>7 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>8 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs procedure parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>9 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>10 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>11 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>12 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>13 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs component.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>14 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>15 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs tag.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='20'><Data ss:Type='String'>5.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='20'><Data ss:Type='String'>Readability</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='20'><Data ss:Type='String'>No object or function identifier with static storage duration should be reused.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>18 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier name reused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>131 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name reused in inner scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>7 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>15 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs tag.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>20 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>24 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: typedef vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>25 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: procedure vs procedure param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>26 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>27 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persist var vs persist var.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>28 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs var.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>29 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>30 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs proc param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>31 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: procedure vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>32 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: procedure vs var.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>33 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: procedure vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>34 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: proc vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>35 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: proc vs component.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>36 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: proc vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>37 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>38 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs component.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>39 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: persistent var vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='19'><Data ss:Type='String'>5.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='19'><Data ss:Type='String'>Readability</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='19'><Data ss:Type='String'>No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure and union member names.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>91 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name redeclared in another C name space (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>112 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Typedef name redeclared.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>383 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier name matches macro name.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>7 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>8 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs procedure parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>9 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>10 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>11 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs typedef.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>12 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>13 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs component.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>14 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: tag vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>40 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: component vs var.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>41 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: label vs variable (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>42 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: component vs procedure param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>43 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: label vs procedure param (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: component vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>45 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: component vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>46 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: label vs enum constant (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>47 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: component vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>48 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: label vs macro (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='17'><Data ss:Type='String'>5.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='17'><Data ss:Type='String'>Readability</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='17'><Data ss:Type='String'>No identifier name should be reused.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure name reused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>2 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Label name reused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>91 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name redeclared in another C name space (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>92 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Duplicate use of a name in an enumeration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>129 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter has same name as type or tag.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>327 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Reuse of struct or class member name.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>383 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier name matches macro name.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>49 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: var vs proc param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>50 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: var vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>51 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: var vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>52 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: proc param vs proc param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>53 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: proc param vs macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>54 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: proc param vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>55 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: label vs label (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>57 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: macro vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>58 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: component vs component.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>59 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: enum constant vs enum constant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>60 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier reuse: variable vs variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>6.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>The plain char type shall be used only for the storage and use of character values.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>93 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value is not of appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>329 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operation not appropriate to plain char.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>432 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inappropriate type - should be plain char.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>433 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>6.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>Signed and unsigned char type shall be used only for the storage and use of numeric values.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>93 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value is not of appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of mixed mode arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>431 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Char used instead of (un)signed char.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>433 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>6.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Typedefs that indicate size and signedness should be used in place of the basic types.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>90 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Basic type declaration used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>495 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Typedef name has no size indication.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>6.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Bit fields shall only be defined to be of type unsigned int or signed int.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>73 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bit field not signed or unsigned int.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>6.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Bit fields of type signed int shall be at least 2 bits long.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>72 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signed bit field less than 2 bits wide.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>7.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Octal constants (other than zero) and octal escape sequences shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>83 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Octal number found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>376 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of octal escape sequence.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>377 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Null character used within a string.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>8.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>24 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure definition has no associated prototype.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>20 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Parameter not declared explicitly.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>496 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function call with no prior declaration.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Whenever an object or function is declared or defined, its type shall be explicitly stated.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>326 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration is missing type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>8.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>For each function parameter the type given in the declaration and definition shall be identical, and the return types shall also be identical.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>102 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function and prototype return inconsistent (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>103 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function and prototype param inconsistent (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>62 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function prototype/defn return type mismatch (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>63 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function prototype/defn param type mismatch (MR).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>8.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>If objects or functions are declared more than once their types shall be compatible.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>360 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Incompatible type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 X  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration types do not match across a system.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>8.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>There shall be no definitions of objects or functions in a header file.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>286 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Functions defined in header file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>287 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable definition in header file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Functions shall be declared at file scope.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>296 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function declared at block scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Objects shall be defined at block scope if they are only accessed from within a single function.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>25 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Scope of variable could be reduced.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>8.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>An external object or function shall be declared in one and only one file.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>26 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable should be defined once in only one file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>60 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>External object should be declared only once.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>110 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than one prototype for same function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>8.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>An identifier with external linkage shall have exactly one external definition.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>33 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No real declaration for external variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>34 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure name re-used in different files.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>63 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No definition in system for prototyped procedure.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>172 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable declared multiply.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>8.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>All declarations and definitions of objects or functions at file scope shall have internal linkage unless external linkage is required.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>27 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable should be declared static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>61 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure should be declared static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>8.11</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>The static storage class specifier shall be used in definitions and declarations of objects and functions that have internal linkage.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>27 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Variable should be declared static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>61 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure should be declared static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>461 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Identifier with ambiguous linkage.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>553 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function and proto should both be static.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>8.12</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>127 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array has no bounds specified.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>9.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All automatic variables shall have been assigned a value before being used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>69 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>UR anomaly, variable used before assignment.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>9.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Readability</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>Braces shall be used to indicate and match the structure in the non-zero initialisation of arrays and structures.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>105 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Initialisation brace { } fault.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>397 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array initialisation has insufficient items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>404 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array initialisation has too many items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>462 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Struct initialisation has insufficient items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>9.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>In an enumerator list, the &quot;=&quot; construct shall not be used to explicitly initialise members other than the first, unless all items are explicitly initialised.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>85 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Incomplete initialisation of enumerator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='14'><Data ss:Type='String'>10.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='14'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='14'><Data ss:Type='String'>The value of an expression of integer type shall not be implicitly converted to a different underlying type if: a) it is not a conversion to a wider integer type of the same signedness, or b) the expression is complex, or c) the expression is not constant and is a function argument, or d) the expression is not constant and is a return expression</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>93 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value is not of appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of mixed mode arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>101 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function return type inconsistent.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>107 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type mismatch in ternary expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>330 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit conversion of underlying type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>331 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Literal value requires a U suffix.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>433 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>434 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signed/unsigned conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>435 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Float/integer conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>446 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Narrower int conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>452 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No cast for widening complex int expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>457 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit int widening for function return.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>458 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit conversion: actual to formal param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>488 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value outside range of underlying type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>491 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No cast for widening int parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='11'><Data ss:Type='String'>10.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='11'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='11'><Data ss:Type='String'>The value of an expression of floating type shall not be implicitly converted to a different type if: a) it is not a conversion to a wider floating type, or b) the expression is complex, or c) the expression is a function argument, or d) the expression is a return expression</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>93 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value is not of appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of mixed mode arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>101 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function return type inconsistent.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>107 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type mismatch in ternary expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>330 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit conversion of underlying type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>433 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>435 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Float/integer conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>445 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Narrower float conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>451 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No cast for widening complex float expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>456 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit float widening for function return.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>458 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Implicit conversion: actual to formal param.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>490 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No cast for widening float parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>10.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='5'><Data ss:Type='String'>The value of a complex expression of integer type may only be cast to a type that is narrower and of the same signedness as the underlying type of the expression.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>93 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value is not of appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>332 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Widening cast on complex integer expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>433 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>442 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Signed integral type cast to unsigned.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>443 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsigned integral type cast to signed.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>444 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Integral type cast to non-integral.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>10.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>The value of a complex expression of floating type may only be cast to a narrower floating type.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>93 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Value is not of appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>333 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Widening cast on complex float expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>433 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type conversion without cast.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>441 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Float cast to non-float.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>10.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>If the bitwise operators ~ and &lt;&lt; are applied to an operand of underlying type unsigned char or unsigned short, the result shall be immediately cast to the underlying type of the operand.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>334 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No cast when ~ or &lt;&lt; applied to small types.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>10.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A &quot;U&quot; suffix shall be applied to all constants of unsigned type.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>550 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsuffixed hex or octal is unsigned, add U.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>11.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Conversions shall not be performed between a pointer to a function and any type other than an integral type.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>94 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation on a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>95 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation to a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>576 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function pointer is of wrong type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>11.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Conversions shall not be performed between a pointer to object and any type other than an integral type, another pointer to object type or a pointer to void.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>94 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation on a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>635 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from pointer to float type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>636 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from float type to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>11.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>A cast should not be performed between a pointer type and an integral type.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>439 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from pointer to integral type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>440 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast from integral type to pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>11.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>A cast should not be performed between a pointer to object type and a different pointer to object type.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>94 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation on a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>95 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Casting operation to a pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>554 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast to an unrelated type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>11.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>A cast shall not be performed that removes any const or volatile qualification from the type addressed by a pointer.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>203 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast on a constant value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>344 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Cast on volatile value.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>12.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Limited dependence should be placed on C's operator precedence rules in expressions.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>49 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Logical conjunctions need brackets.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>361 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression needs brackets.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='6'><Data ss:Type='String'>12.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='6'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='6'><Data ss:Type='String'>The value of an expression shall be the same under any order of evaluation that the standard permits.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>35 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression has side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>72 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Potential side effect problem in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>74 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Potential side effect from repeated function call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 Q  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Call has execution order dependant side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>9 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operation in expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>30 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Deprecated usage of ++ or -- operators found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>134 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Volatile variable in complex expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The sizeof operator shall not be used on expressions that contain side effects.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>54 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Sizeof operator with side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>12.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>The right hand operand of a logical &amp;&amp; or || operator shall not contain side effects.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>35 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression has side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 Q  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Call has execution order dependant side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>406 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of ++ or -- on RHS of &amp;&amp; or || operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>408 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Volatile variable accessed on RHS of &amp;&amp; or ||.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The operands of a logical &amp;&amp; or || shall be primary-expressions.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>49 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Logical conjunctions need brackets.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='4'><Data ss:Type='String'>12.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='4'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='4'><Data ss:Type='String'>The operands of logical operators ( &amp;&amp;, || and !) should be effectively Boolean. Expressions that are effectively Boolean should not be used as operands to operators other than ( &amp;&amp;, || and !).</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>96 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of mixed mode arithmetic.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>114 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression is not Boolean.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>136 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bit operator with boolean operand.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>249 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operation not appropriate to boolean type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>389 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Bool value incremented/decremented.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>12.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Bitwise operators shall not be applied to operands whose underlying type is signed.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>50 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of shift operator on signed type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>120 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of bit operator on signed type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>403 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Negative (or potentially negative) shift.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The right hand operand of a shift operator shall lie between zero and one less than the width in bits of the underlying type of the left hand operand.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>51 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Shifting value too far.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The unary minus operator shall not be applied to an expression whose underlying type is unsigned.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>52 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsigned expression negated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The comma operator shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>53 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of comma operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.11</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Evaluation of constant unsigned integer expressions should not lead to wrap-around.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePendingCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RulePendingCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>12.12</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The underlying bit representations of floating-point values shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>345 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Bit operator with floating point operand.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>12.13</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Readability</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The increment (++) and decrement (--) operators should not be mixed with other operators in an expression.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>35 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression has side effects.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>30 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Deprecated usage of ++ or -- operators found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>13.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Assignment operators shall not be used in expressions that yield a Boolean value.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>132 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment operator in boolean expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>13.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Tests of a value against zero should be made explicit, unless the operand is effectively Boolean.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>114 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Expression is not Boolean.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>13.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The controlling expression of a for statement shall not contain any objects of floating type.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>39 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unsuitable type for loop variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>13.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='5'><Data ss:Type='String'>The three expressions of a for statement shall be concerned only with loop control.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>269 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Empty increment exprsn in for loop.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>270 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>For loop initialisation is not simple.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>271 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>For loop incrementation is not simple.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>429 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Empty middle expression in for loop.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>430 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inconsistent usage of loop control variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>581 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Loop conditions are independent.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>13.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Numeric variables being used within a for loop for iteration counting shall not be modified in the body of the loop.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>55 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Modification of loop counter in loop body.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>13.7</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Boolean operations whose results are invariant shall not be permitted.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>139 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Construct leads to infeasible code.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>140 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Infeasible loop condition found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>There shall be no unreachable code.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 J  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Unreachable Code found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All non-null statements shall either : a) have at least one side-effect however executed, or b) cause control flow to change.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>57 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Statement with no side effect.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Before preprocessing, a null statement shall only occur on a line by itself; it may be followed by a comment provided that the first character following the null statement is a white-space character.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>58 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Null statement found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The goto statement shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>13 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>goto detected.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The continue statement shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>32 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of continue statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>For any iteration statement there shall be at most one break statement used for loop termination.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>409 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than one break or goto statement in loop.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A function shall have a single point of exit at the end of the function.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>7 C  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure has more than one exit point.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>14.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The statement forming the body of a switch, while, do ... while or for statement shall be a compound statement.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>11 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No brackets to loop body (added by Testbed).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>428 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No {} for switch (added by Testbed).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>14.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>12 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No brackets to then/else (added by Testbed).</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>14.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Readability</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>All if ... else if constructs shall be terminated with an else clause.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>59 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Else alternative missing in if.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>477 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Empty else clause following else if.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>15.0</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>GENERAL SWITCH SYNTAX</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>60 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Empty switch statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>385 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>MISRA switch statement syntax violation.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>15.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A switch label shall only be used when the most closely-enclosing compound statement is the body of a switch statement.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>245 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Case statement in nested block.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>15.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>An unconditional break statement shall terminate every non-empty switch clause.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>62 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Switch case not terminated with break.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>15.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A switch expression shall not represent a value that is effectively Boolean.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>121 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of boolean expression in switch.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>15.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>Every switch statement shall have at least one case clause.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>61 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Switch contains default only.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>62 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Switch case not terminated with break.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>245 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Case statement in nested block.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>16.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Functions shall not be defined with a variable number of arguments.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>41 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Ellipsis used in procedure parameter list.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>16.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Functions shall not call themselves, either directly or indirectly.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>6 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Recursion in procedure calls found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>1 U  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Inter-file recursion found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>16.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Identifiers shall be given for all of the parameters in a function prototype declaration.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>37 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Procedure parameter has a type but no identifier.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>16.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The identifiers used in the declaration and definition of a function shall be identical.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>36 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Prototype and definition name mismatch.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>16.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Functions with no parameters shall be declared with parameter type void.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>63 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Empty parameter list to procedure/function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>16.6</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The number of arguments passed to a function shall match the number of parameters.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>21 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Number of parameters does not match.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>16.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>62 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer parameter should be declared const.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>16.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>All exit paths from a function with non-void return type shall have an explicit return statement with an expression.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>2 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function does not return a value on all paths.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>36 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function has no return statement.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>66 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function with empty return expression.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>16.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A function identifier shall only be used with either a preceding &amp;, or with a parenthesised parameter list, which may be empty.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>99 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function use is not a call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>16.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>If a function returns error information, then that error information shall be tested.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>91 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Function return value potentially unused.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>17.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Pointer arithmetic shall only be applied to pointers that address an array or array element.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>436 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration does not specify an array.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>567 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer arithmetic is not on array.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Pointer subtraction shall only be applied to pointers that address elements of the same array.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>438 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer subtraction not addressing one array.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>&gt;, &gt;=, &lt;, &lt;= shall not be applied to pointer types except where they point to the same array.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>437 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>&lt; &gt; &lt;= &gt;= used on different object pointers.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>17.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Array indexing shall be the only allowed form of pointer arithmetic.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>436 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Declaration does not specify an array.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>567 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer arithmetic is not on array.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>17.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Readability</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The declaration of objects should contain no more than 2 levels of pointer indirection.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>80 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer indirection exceeds 2 levels.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>17.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>The address of an object with automatic storage shall not be assigned to another object that may persist after the first object has ceased to exist.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>42 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Local pointer returned in function result.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>77 D  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Local structure returned in function result.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>71 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Pointer assignment to wider scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>565 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment to wider scope.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>18.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='3'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='3'><Data ss:Type='String'>All structure and union types shall be complete at the end of a translation unit.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>465 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Struct/union not completely specified.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>481 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Array with no bounds in struct.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>482 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Incomplete structure referenced.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>497 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Type is incomplete in translation unit.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>18.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>An object shall not be assigned to an overlapping object.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>480 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>String function params access same variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>545 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Assignment of overlapping storage.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>18.3</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>An area of memory shall not be reused for unrelated purposes.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>18.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Unions shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>74 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Union declared.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>19.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>#include statements in a file should only be preceded by other preprocessor directives or comments.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>75 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Executable code before an included file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>338 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#include preceded by non preproc directives.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>19.2</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Non-standard characters should not occur in header file names in #include directives.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>100 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#include filename is non conformant.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>19.3</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='2'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='2'><Data ss:Type='String'>The #include directive shall be followed by either a &lt;filename&gt; or &quot;filename&quot; sequence.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>292 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>No space between #include and filename.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>339 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#include directive with illegal items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>427 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Filename in #include not in &lt; &gt; or &quot; &quot;.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>19.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>C macros shall only expand to a braced initialiser, a constant, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>77 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro replacement list needs parentheses.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>79 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro contains unacceptable items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>19.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Readability</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Macros shall not be #define'd or #undef'd within a block.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>67 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#define used in a block.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>426 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#undef used in a block.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>19.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Readability</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>#undef shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>68 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#undef used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>19.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A function should be used in preference to a function-like macro.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>340 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of function like macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>19.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>A function-like macro shall not be invoked without all of its arguments.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>324 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro call has wrong number of parameters.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>19.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Arguments to a function-like macro shall not contain tokens that look like preprocessing directives.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>341 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Preprocessor construct as macro parameter.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>19.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>78 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Macro parameter not in brackets.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>19.11</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>All macro identifiers in preprocessor directives shall be defined before use, except in #ifdef and #ifndef preprocessor directives and the defined() operator.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>337 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Undefined macro variable in #if.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>19.12</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>There shall be at most one occurrence of the # or ## operators in a single macro definition.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>76 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>More than one of # or ## in a macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>19.13</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Recommended</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The # and ## operators should not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>125 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of ## or # in a macro.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>19.14</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The defined preprocessor operator shall only be used in one of the two standard forms.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>335 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Operator defined contains illegal items.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>336 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#if expansion contains define operator.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>19.15</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Precautions shall be taken in order to prevent the contents of a header file being included twice.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>243 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file not protected with #define.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>19.16</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>Preprocessing directives shall be syntactically meaningful even when excluded by the preprocessor.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>147 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Spurious characters after preprocessor directive.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>342 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Extra chars after preprocessor directive.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>19.17</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>All #else, #elif and #endif preprocessor directives shall reside in the same file as the #if or #ifdef directive to which they are related.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>126 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>A #if has no #endif in the same file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>343 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#else has no #if, etc in the same file.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>20.1</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='5'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='5'><Data ss:Type='String'>Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>68 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>#undef used.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>86 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Attempt to define reserved word.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>156 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of 'defined' keyword in macro body.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>219 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>User name starts with underscore.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>478 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Name starts with ISO reserved prefix.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>20.2</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The names of standard library macros, objects and functions shall not be reused.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>218 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>Name is used in standard libraries.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RulePartialCoverageRight'><Data ss:Type='String'>219 S  </Data></Cell>
    <Cell ss:StyleID='RulePartialCoverageWrapped'><Data ss:Type='String'>User name starts with underscore.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>20.3</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The validity of values passed to library functions shall be checked.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverage'><Data ss:Type='String'></Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'></Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>20.4</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>Dynamic heap memory allocation shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>20.5</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The error indicator errno shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>20.6</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The macro offsetof, in library &lt;stddef.h&gt;, shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>20.7</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The setjmp macro and the longjmp function shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>43 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of setjmp/longjmp.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>20.8</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The signal handling facilities of &lt;signal.h&gt; shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>130 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file is not permitted.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>20.9</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The input/output library &lt;stdio.h&gt; shall not be used in production code.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>130 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file is not permitted.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>20.10</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The library functions atof, atoi and atol from library &lt;stdlib.h&gt; shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>20.11</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='1'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='1'><Data ss:Type='String'>The library functions abort, exit, getenv and system from library &lt;stdlib.h&gt; shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>44 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of banned function or variable.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>122 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Use of abort, exit, etc.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>20.12</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverage' ss:MergeDown='0'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped' ss:MergeDown='0'><Data ss:Type='String'>The time handling functions of library &lt;time.h&gt; shall not be used.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleFullCoverageRight'><Data ss:Type='String'>130 S  </Data></Cell>
    <Cell ss:StyleID='RuleFullCoverageWrapped'><Data ss:Type='String'>Included file is not permitted.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='22'><Data ss:Type='String'>21.1</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverage' ss:MergeDown='22'><Data ss:Type='String'>Obligatory</Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped' ss:MergeDown='22'><Data ss:Type='String'>Minimisation of run-time failures shall be ensured by the use of at least one of a) static analysis tools/techniques; b) dynamic analysis tools/techniques; c) explicit coding of checks to handle run-time faults.</Data></Cell>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>43 D  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Divide by 0 found.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>45 D  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Pointer not checked for null before use.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>51 D  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Attempt to read from freed memory.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>53 D  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Attempt to use uninitialised pointer.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>87 D  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Illegal shared object in signal handler.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>47 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Array bound exceeded.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>248 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Divide by zero in preprocessor directive.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>407 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>free used on string.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>483 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>free parameter is not heap item.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>484 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Attempt to use already freed object.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>486 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Incorrect number of formats in output function.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>487 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Insufficient space allocated.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>489 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Insufficient space for operation.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>493 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Numeric overflow.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>494 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Numeric underflow.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>589 S  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Format is not appropriate type.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>64 X  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Array bound exceeded at call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>66 X  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Insufficient array space at call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>68 X  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Parameter indexing array too big at call.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>69 X  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Global array bound exceeded at use.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>70 X  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Array has insufficient space.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>71 X  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Insufficient space for copy.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight='1'>
    <Cell ss:Index='4' ss:StyleID='RuleManualCoverageRight'><Data ss:Type='String'>72 X  </Data></Cell>
    <Cell ss:StyleID='RuleManualCoverageWrapped'><Data ss:Type='String'>Parameter indexing array too small at call.</Data></Cell>
   </Row>
  </Table>
    <WorksheetOptions xmlns='urn:schemas-microsoft-com:office:excel'>
     <PageSetup>
      <Layout x:Orientation='Landscape' x:CenterHorizontal='1'/>
      <Header x:Margin='0.19685039370078741'
       x:Data='&amp;CVersion 9.4.4 Copyright &copy; 2014 LDRA Ltd.&#10;Copies of this document are not to be made or distributed.'/>
      <Footer x:Margin='0.19685039370078741'
       x:Data='&amp;CLDRA Ltd. reserves the right to change any specifications contained within this document without prior notice.&#10;The document was deemed correct at time of distribution.'/>
      <PageMargins x:Bottom='0.78740157480314965' x:Left='0.59055118110236227'
       x:Right='0.59055118110236227' x:Top='0.78740157480314965'/>
     </PageSetup>
     <FitToPage/>
     <Print>
      <FitHeight>0</FitHeight>
      <ValidPrinterInfo/>
      <PaperSizeIndex>9</PaperSizeIndex>
      <Scale>91</Scale>
      <HorizontalResolution>600</HorizontalResolution>
      <VerticalResolution>600</VerticalResolution>
     </Print>
    </WorksheetOptions>
 </Worksheet>
</Workbook>
