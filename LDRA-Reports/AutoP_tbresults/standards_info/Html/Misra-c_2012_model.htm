<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'
'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>
<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en' dir='ltr'>
<head>
  <!-- Force (well, try) IE8 to use IE8 standards mode -->
  <meta http-equiv='X-UA-Compatible' content='IE=8' />
  <meta http-equiv='Content-Type' content='text/html' />
  <title>MISRA-C:2012 Standards Model for C / C++</title>
  <meta name='generator' content='LDRA Standards Tool' />
  <meta name='date' content='2014-04-25_08-31-23' />
  <style>

* {
    padding : 0em;
    margin  : 0em;
}

body {
    padding     : 0px;
    margin      : 0px;
    background  : #ffffff;
    font-family : Verdana, sans-serif;
    font-size   : 100%; /* Forces font sizes to work in all browsers (i.e. IE) */
}

div.nav {
    width : 100%;
}

div.floating-menu {
    position    : fixed;
    width       : 100%;
    margin-left : 1em;
    margin-top  : 1.5em;
    font-size   : 1em;
    z-index     : 20; /* Ensure popup is over page title */
}

div.nav div.page_title {
    top            : 0px;
    left           : 0px;
    width          : 100%;
    height         : 1em;
    font-size      : 200%;
    font-weight    : bold;
    text-align     : center;
    padding-top    : 0.25em;
    padding-bottom : 0.25em;
    color          : #5f4970;
    border-bottom  : 2px solid #eb6c00;
    z-index        : 10; /* Ensure page title is over page body */
}

div.nav div.page_title span.registered {
    font-size      : 50%;
    vertical-align : top;
}

.floating-menu .title:hover {
    color        : #000000;
    background   : #ccc0da;
}

.floating-menu ul {
    font-family   : Arial, Helvetica, sans-serif;
    margin  : 0em;
    padding : 0em;
}

.floating-menu li.sep {
  border-top : 0.125em solid #eb6c00;
}

.floating-menu li {
  position          : relative;
/*   width             : 8em; --- move to :hover to fix IE7 stuck hover */
  width             : 8em;
  list-style        : none;
  border-left       : 0.25em solid #eb6c00;
  border-bottom     : 1px solid #ccc0da;
  vertical-align    : bottom; /* Fix IE5-Win */
}

.floating-menu ul a,
.floating-menu ul li {
  display           : block;
  text-decoration   : none;
  text-align        : center;
  color             : #ccc0da;
  background        : #5f4970;
  vertical-align    : bottom; /* Fix IE5-Win */
}

.floating-menu ul ul {
/*  Rest of styling in hover to fix IE hover bug */
    display : none;
}

/* Menu item hover effects */
.floating-menu a:hover,
.floating-menu li:hover {
    color           : #5f4970;
    background      : #ccc0da;
    width           : 8em;
}

.floating-menu ul.l-1 li:hover ul.l-2 {
    position    : absolute;
    left        : -0.25em;
    top         : 0px;
    display     : block;

    /* These give tracking error bands around popup items.
     * This doesn't work for IE7 without a background image.
     */
    padding             : 1.5em 1.5em 1.5em 0em;
    background-image    : url(ie7/transparent-bg.gif);
    background-repeat   : repeat;
}

.floating-menu ul.l-2 li:hover ul.l-3,
.floating-menu ul.l-3 li:hover ul.l-4,
.floating-menu ul.l-4 li:hover ul.l-5 {
    position    : absolute;
    left        : 7.75em;   /* Just inside the right edge of the parent */
    top         : -1.5em;   /* Compensate for tracking guard band at top */
    display     : block;

    /* These give tracking error bands around popup items.
     * This doesn't work for IE7 without a background image.
     */
    padding             : 1.5em 1.5em 1.5em 0em;
    background-image    : url(ie7/transparent-bg.gif);
    background-repeat   : repeat;
}

.floating-menu ul.h-menu li {
    display         : inline;
    float           : left;
    border-right    : 0px; /* Turn off right border. */
}

.floating-menu li div.standard-range {
    margin : 0 auto;
    width  : 100%;
}

li div.right-align-standard {
    width      : 40%;
    text-align : right;
    display    : inline-block;
}
li div.center {
    width      : 20%;
    display    : inline-block;
    text-align : center;
}
li div.left-align-standard {
    width      : 40%;
    display    : inline-block;
    text-align : left;
}
.floating-menu ul.h-standards li,
.floating-menu ul.h-standards a {
    width : 3.5em;
}

.floating-menu ul.h-standards div.standard {
}
.floating-menu ul.h-standards li.unused-standard:hover,
.floating-menu ul.h-standards li.unused-standard {
    color      : #837093;
    background : #5f4970;
}
.floating-menu ul.h-standards li.standard div,
.floating-menu ul.h-standards li.unused-standard div {
    width      : 80%;
    text-align : right;
    display    : inline-block;
}
.floating-menu ul.h-keywords {
    width : 43.75em; /* 5 * ( 8.5em + 0.25em ) */
}

.floating-menu ul.h-models {
    width : 43.75em; /* 5 * ( 8.5em + 0.25em ) */
}

.floating-menu ul.h-models li,
.floating-menu ul.h-models a {
    width : 8.5em;
}

div.body {
    background : #ffffff;
    position   : absolute;
    top        : 3em;
    bottom     : 0em;
    left       : 0em;
    right      : 0em;
}

div.body * {
    padding : 0em;
    margin  : 0.5em 0em 0em 0em;
    border  : none;
}

div.body div {
    margin-top : 0em;
}

div.body-content {
    background  : #ffffff;
    border-left : 2px solid #eb6c00;
}

div.body_block {
    margin-left     : 10px;
    margin-right    : 10px;
    margin-bottom   : 0em;
    margin-top      : 0.5em;
    padding-top     : 0.25em;
    padding-bottom  : 1.5em;
    border-bottom   : 1px solid #eb6c00;
    font-size       : 80%;
}

.body_block .block_title {
    color         : #5f4970;
    font-size     : 135%;
    margin-bottom : 0.5em;
}

thead .block_title {
    margin-left : -1.25em;
}

.body_block .block_title div.standard {
    font-family : Arial, Helvetica, sans-serif;
    margin-left : -7em;
    width       : 6.25em;
    float       : left;
    font-size   : 115%;
    text-align  : right;
}

.body_block .block_title div.rule {
    font-family : Arial, Helvetica, sans-serif;
    font-size   : 110%;
    margin-left : -8.75em;
    width       : 7.75em;
    float       : left;
}

.body_block .block_title div.rule div {
    text-align : right;
}

.body_block .block_title div.rule span {
    font-size  : 80%;
    font-style : italic;
}

div.body_block .title {
    color         : #5f4970;
    text-align    : left;
    font-weight   : bold;
    margin-top    : 0.75em;
    margin-bottom : 0.5em;
}

div.body_block ul,
div.body_block ol {
    margin-left : 2em;
}

div.footer {
    text-align     : center;
    padding-bottom : 1em;
}

div.footer span {
    font-size : 75%;
}

pre {
    font-family : 'Courier New', monospace;
    font-size   : 85%; /* Forces font sizes to work in all browsers (i.e. IE) */
}

pre .kw1, pre .kw2, pre .kw3, pre .kw4, pre .kw5 {
    color:#0000ff;
}

pre .coMULTI, pre .co0, pre .co1, pre .co2, pre .co3 {
    color:#008000;
}

pre .es0, pre .es1, pre .es2, pre .es3, pre .es4, pre .es5, pre .esHARD, pre .nu0, pre .nu1, pre .nu2, pre .nu3, pre .nu4, pre .nu5, pre .nu6, pre .nu7, pre .nu8, pre .nu9, pre .nu10, pre .nu11, pre .nu12, pre .nu13, pre .nu14, pre .nu15, pre .nu16, pre .nu17, pre .nu18, pre .nu19, pre .st0 {
    color:#8080ff;
}

pre .br0 {
    color:#ff8080;
}

pre .me1, pre .me2 {
    color:#c00000;
}

pre .sy0, pre .sy1, pre .sy2, pre .sy3, pre .sy4 {
    color:#888888;
}

div.xref {
    margin-top  : 6pt;
    margin-left : 20px;
}

div.xref td {
    color          : #5f4970;
    vertical-align : top;
}

div.xref td.from {
    text-align : right;
}

div.xref td.level,
div.xref td.target {
    padding-left:1em;
}

div.body-content a {
    text-decoration : none;
    color           : #eb6c00;
}

div.body-content a:hover {
    text-decoration : underline;
}

@media screen {
    div.nav div.page_title {
        position : fixed;
    }
    div.body-content {
        margin-left : 10em;
    }
    div.body {
        overflow : auto;
    }
}
@media print {
    div.nav div.page_title {
        position  : relative;
        font-size : 150%;
    }
    div.floating-menu,
    div.noprint {
        display : none;
    }
    div.body {
        overflow : visible;
    }
}
@media print {
    div.body-content {
        margin-left : 10em;
    }
}

  </style>
</head>
<body>
  <!--[if lt IE 8]>
  <script src='ie7/IE8.js'></script>
  <![endif]-->
  <div class='nav'>
    <div class='floating-menu'>
  <ul class='l-1'>
    <li style='z-index:10000'>Menu
      <ul class='l-2'>
       <li style='z-index:9999;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         S Standards
    <ul class='l-3'>
      <li style='z-index:10000;'>
        <div class='standard-range'><div class='right-align-standard'>1&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>100&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s1'><div>1&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s2'><div>2&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s3'><div>3&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s4'><div>4&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s5'><div>5&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s6'><div>6&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s7'><div>7&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s8'><div>8&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s9'><div>9&nbsp;S</div></a></li>
      <li class='unused-standard'><div>10&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s11'><div>11&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s12'><div>12&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s13'><div>13&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s14'><div>14&nbsp;S</div></a></li>
      <li class='unused-standard'><div>15&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s16'><div>16&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s17'><div>17&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s18'><div>18&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s19'><div>19&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s20'><div>20&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s21'><div>21&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s22'><div>22&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s23'><div>23&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s24'><div>24&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s25'><div>25&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s26'><div>26&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s27'><div>27&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s28'><div>28&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s29'><div>29&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s30'><div>30&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s31'><div>31&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s32'><div>32&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s33'><div>33&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s34'><div>34&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s35'><div>35&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s36'><div>36&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s37'><div>37&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s38'><div>38&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s39'><div>39&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s40'><div>40&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s41'><div>41&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s42'><div>42&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s43'><div>43&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s44'><div>44&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s45'><div>45&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s46'><div>46&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s47'><div>47&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s48'><div>48&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s49'><div>49&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s50'><div>50&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s51'><div>51&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s52'><div>52&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s53'><div>53&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s54'><div>54&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s55'><div>55&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s56'><div>56&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s57'><div>57&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s58'><div>58&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s59'><div>59&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s60'><div>60&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s61'><div>61&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s62'><div>62&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s63'><div>63&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s64'><div>64&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s65'><div>65&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s66'><div>66&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s67'><div>67&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s68'><div>68&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s69'><div>69&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s70'><div>70&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s71'><div>71&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s72'><div>72&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s73'><div>73&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s74'><div>74&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s75'><div>75&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s76'><div>76&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s77'><div>77&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s78'><div>78&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s79'><div>79&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s80'><div>80&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s81'><div>81&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s82'><div>82&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s83'><div>83&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s84'><div>84&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s85'><div>85&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s86'><div>86&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s87'><div>87&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s88'><div>88&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s89'><div>89&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s90'><div>90&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s91'><div>91&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s92'><div>92&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s93'><div>93&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s94'><div>94&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s95'><div>95&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s96'><div>96&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s97'><div>97&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s98'><div>98&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s99'><div>99&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s100'><div>100&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9999;'>
        <div class='standard-range'><div class='right-align-standard'>101&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>200&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s101'><div>101&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s102'><div>102&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s103'><div>103&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s104'><div>104&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s105'><div>105&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s106'><div>106&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s107'><div>107&nbsp;S</div></a></li>
      <li class='unused-standard'><div>108&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s109'><div>109&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s110'><div>110&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s111'><div>111&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s112'><div>112&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s113'><div>113&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s114'><div>114&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s115'><div>115&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s116'><div>116&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s117'><div>117&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s118'><div>118&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s119'><div>119&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s120'><div>120&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s121'><div>121&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s122'><div>122&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s123'><div>123&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s124'><div>124&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s125'><div>125&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s126'><div>126&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s127'><div>127&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s128'><div>128&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s129'><div>129&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s130'><div>130&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s131'><div>131&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s132'><div>132&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s133'><div>133&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s134'><div>134&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s135'><div>135&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s136'><div>136&nbsp;S</div></a></li>
      <li class='unused-standard'><div>137&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s138'><div>138&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s139'><div>139&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s140'><div>140&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s141'><div>141&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s142'><div>142&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s143'><div>143&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s144'><div>144&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s145'><div>145&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s146'><div>146&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s147'><div>147&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s148'><div>148&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s149'><div>149&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s150'><div>150&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s151'><div>151&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s152'><div>152&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s153'><div>153&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s154'><div>154&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s155'><div>155&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s156'><div>156&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s157'><div>157&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s158'><div>158&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s159'><div>159&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s160'><div>160&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s161'><div>161&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s162'><div>162&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s163'><div>163&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s164'><div>164&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s165'><div>165&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s166'><div>166&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s167'><div>167&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s168'><div>168&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s169'><div>169&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s170'><div>170&nbsp;S</div></a></li>
      <li class='unused-standard'><div>171&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s172'><div>172&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s173'><div>173&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s174'><div>174&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s175'><div>175&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s176'><div>176&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s177'><div>177&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s178'><div>178&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s179'><div>179&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s180'><div>180&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s181'><div>181&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s182'><div>182&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s183'><div>183&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s184'><div>184&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s185'><div>185&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s186'><div>186&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s187'><div>187&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s188'><div>188&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s189'><div>189&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s190'><div>190&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s191'><div>191&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s192'><div>192&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s193'><div>193&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s194'><div>194&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s195'><div>195&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s196'><div>196&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s197'><div>197&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s198'><div>198&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s199'><div>199&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s200'><div>200&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9998;'>
        <div class='standard-range'><div class='right-align-standard'>201&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>300&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s201'><div>201&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s202'><div>202&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s203'><div>203&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s204'><div>204&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s205'><div>205&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s206'><div>206&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s207'><div>207&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s208'><div>208&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s209'><div>209&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s210'><div>210&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s211'><div>211&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s212'><div>212&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s213'><div>213&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s214'><div>214&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s215'><div>215&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s216'><div>216&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s217'><div>217&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s218'><div>218&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s219'><div>219&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s220'><div>220&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s221'><div>221&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s222'><div>222&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s223'><div>223&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s224'><div>224&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s225'><div>225&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s226'><div>226&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s227'><div>227&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s228'><div>228&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s229'><div>229&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s230'><div>230&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s231'><div>231&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s232'><div>232&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s233'><div>233&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s234'><div>234&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s235'><div>235&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s236'><div>236&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s237'><div>237&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s238'><div>238&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s239'><div>239&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s240'><div>240&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s241'><div>241&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s242'><div>242&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s243'><div>243&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s244'><div>244&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s245'><div>245&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s246'><div>246&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s247'><div>247&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s248'><div>248&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s249'><div>249&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s250'><div>250&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s251'><div>251&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s252'><div>252&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s253'><div>253&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s254'><div>254&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s255'><div>255&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s256'><div>256&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s257'><div>257&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s258'><div>258&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s259'><div>259&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s260'><div>260&nbsp;S</div></a></li>
      <li class='unused-standard'><div>261&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s262'><div>262&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s263'><div>263&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s264'><div>264&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s265'><div>265&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s266'><div>266&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s267'><div>267&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s268'><div>268&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s269'><div>269&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s270'><div>270&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s271'><div>271&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s272'><div>272&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s273'><div>273&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s274'><div>274&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s275'><div>275&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s276'><div>276&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s277'><div>277&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s278'><div>278&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s279'><div>279&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s280'><div>280&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s281'><div>281&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s282'><div>282&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s283'><div>283&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s284'><div>284&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s285'><div>285&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s286'><div>286&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s287'><div>287&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s288'><div>288&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s289'><div>289&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s290'><div>290&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s291'><div>291&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s292'><div>292&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s293'><div>293&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s294'><div>294&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s295'><div>295&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s296'><div>296&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s297'><div>297&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s298'><div>298&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s299'><div>299&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s300'><div>300&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9997;'>
        <div class='standard-range'><div class='right-align-standard'>301&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>400&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s301'><div>301&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s302'><div>302&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s303'><div>303&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s304'><div>304&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s305'><div>305&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s306'><div>306&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s307'><div>307&nbsp;S</div></a></li>
      <li class='unused-standard'><div>308&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s309'><div>309&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s310'><div>310&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s311'><div>311&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s312'><div>312&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s313'><div>313&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s314'><div>314&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s315'><div>315&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s316'><div>316&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s317'><div>317&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s318'><div>318&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s319'><div>319&nbsp;S</div></a></li>
      <li class='unused-standard'><div>320&nbsp;S</div></li>
      <li class='unused-standard'><div>321&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s322'><div>322&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s323'><div>323&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s324'><div>324&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s325'><div>325&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s326'><div>326&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s327'><div>327&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s328'><div>328&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s329'><div>329&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s330'><div>330&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s331'><div>331&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s332'><div>332&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s333'><div>333&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s334'><div>334&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s335'><div>335&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s336'><div>336&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s337'><div>337&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s338'><div>338&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s339'><div>339&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s340'><div>340&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s341'><div>341&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s342'><div>342&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s343'><div>343&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s344'><div>344&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s345'><div>345&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s346'><div>346&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s347'><div>347&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s348'><div>348&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s349'><div>349&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s350'><div>350&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s351'><div>351&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s352'><div>352&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s353'><div>353&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s354'><div>354&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s355'><div>355&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s356'><div>356&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s357'><div>357&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s358'><div>358&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s359'><div>359&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s360'><div>360&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s361'><div>361&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s362'><div>362&nbsp;S</div></a></li>
      <li class='unused-standard'><div>363&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s364'><div>364&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s365'><div>365&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s366'><div>366&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s367'><div>367&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s368'><div>368&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s369'><div>369&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s370'><div>370&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s371'><div>371&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s372'><div>372&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s373'><div>373&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s374'><div>374&nbsp;S</div></a></li>
      <li class='unused-standard'><div>375&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s376'><div>376&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s377'><div>377&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s378'><div>378&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s379'><div>379&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s380'><div>380&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s381'><div>381&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s382'><div>382&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s383'><div>383&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s384'><div>384&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s385'><div>385&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s386'><div>386&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s387'><div>387&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s388'><div>388&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s389'><div>389&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s390'><div>390&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s391'><div>391&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s392'><div>392&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s393'><div>393&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s394'><div>394&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s395'><div>395&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s396'><div>396&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s397'><div>397&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s398'><div>398&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s399'><div>399&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s400'><div>400&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9996;'>
        <div class='standard-range'><div class='right-align-standard'>401&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>500&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s401'><div>401&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s402'><div>402&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s403'><div>403&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s404'><div>404&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s405'><div>405&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s406'><div>406&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s407'><div>407&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s408'><div>408&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s409'><div>409&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s410'><div>410&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s411'><div>411&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s412'><div>412&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s413'><div>413&nbsp;S</div></a></li>
      <li class='unused-standard'><div>414&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s415'><div>415&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s416'><div>416&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s417'><div>417&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s418'><div>418&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s419'><div>419&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s420'><div>420&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s421'><div>421&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s422'><div>422&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s423'><div>423&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s424'><div>424&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s425'><div>425&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s426'><div>426&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s427'><div>427&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s428'><div>428&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s429'><div>429&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s430'><div>430&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s431'><div>431&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s432'><div>432&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s433'><div>433&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s434'><div>434&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s435'><div>435&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s436'><div>436&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s437'><div>437&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s438'><div>438&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s439'><div>439&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s440'><div>440&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s441'><div>441&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s442'><div>442&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s443'><div>443&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s444'><div>444&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s445'><div>445&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s446'><div>446&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s447'><div>447&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s448'><div>448&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s449'><div>449&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s450'><div>450&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s451'><div>451&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s452'><div>452&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s453'><div>453&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s454'><div>454&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s455'><div>455&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s456'><div>456&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s457'><div>457&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s458'><div>458&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s459'><div>459&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s460'><div>460&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s461'><div>461&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s462'><div>462&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s463'><div>463&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s464'><div>464&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s465'><div>465&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s466'><div>466&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s467'><div>467&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s468'><div>468&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s469'><div>469&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s470'><div>470&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s471'><div>471&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s472'><div>472&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s473'><div>473&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s474'><div>474&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s475'><div>475&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s476'><div>476&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s477'><div>477&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s478'><div>478&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s479'><div>479&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s480'><div>480&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s481'><div>481&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s482'><div>482&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s483'><div>483&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s484'><div>484&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s485'><div>485&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s486'><div>486&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s487'><div>487&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s488'><div>488&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s489'><div>489&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s490'><div>490&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s491'><div>491&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s492'><div>492&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s493'><div>493&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s494'><div>494&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s495'><div>495&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s496'><div>496&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s497'><div>497&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s498'><div>498&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s499'><div>499&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s500'><div>500&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9995;'>
        <div class='standard-range'><div class='right-align-standard'>501&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>600&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s501'><div>501&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s502'><div>502&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s503'><div>503&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s504'><div>504&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s505'><div>505&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s506'><div>506&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s507'><div>507&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s508'><div>508&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s509'><div>509&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s510'><div>510&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s511'><div>511&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s512'><div>512&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s513'><div>513&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s514'><div>514&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s515'><div>515&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s516'><div>516&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s517'><div>517&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s518'><div>518&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s519'><div>519&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s520'><div>520&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s521'><div>521&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s522'><div>522&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s523'><div>523&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s524'><div>524&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s525'><div>525&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s526'><div>526&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s527'><div>527&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s528'><div>528&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s529'><div>529&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s530'><div>530&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s531'><div>531&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s532'><div>532&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s533'><div>533&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s534'><div>534&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s535'><div>535&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s536'><div>536&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s537'><div>537&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s538'><div>538&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s539'><div>539&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s540'><div>540&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s541'><div>541&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s542'><div>542&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s543'><div>543&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s544'><div>544&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s545'><div>545&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s546'><div>546&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s547'><div>547&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s548'><div>548&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s549'><div>549&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s550'><div>550&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s551'><div>551&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s552'><div>552&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s553'><div>553&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s554'><div>554&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s555'><div>555&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s556'><div>556&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s557'><div>557&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s558'><div>558&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s559'><div>559&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s560'><div>560&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s561'><div>561&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s562'><div>562&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s563'><div>563&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s564'><div>564&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s565'><div>565&nbsp;S</div></a></li>
      <li class='unused-standard'><div>566&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s567'><div>567&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s568'><div>568&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s569'><div>569&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s570'><div>570&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s571'><div>571&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s572'><div>572&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s573'><div>573&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s574'><div>574&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s575'><div>575&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s576'><div>576&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s577'><div>577&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s578'><div>578&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s579'><div>579&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s580'><div>580&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s581'><div>581&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s582'><div>582&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s583'><div>583&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s584'><div>584&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s585'><div>585&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s586'><div>586&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s587'><div>587&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s588'><div>588&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s589'><div>589&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s590'><div>590&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s591'><div>591&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s592'><div>592&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s593'><div>593&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s594'><div>594&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s595'><div>595&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s596'><div>596&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s597'><div>597&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s598'><div>598&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s599'><div>599&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s600'><div>600&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9994;'>
        <div class='standard-range'><div class='right-align-standard'>601&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>639&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s601'><div>601&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s602'><div>602&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s603'><div>603&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s604'><div>604&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s605'><div>605&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s606'><div>606&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s607'><div>607&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s608'><div>608&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s609'><div>609&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s610'><div>610&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s611'><div>611&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s612'><div>612&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s613'><div>613&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s614'><div>614&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s615'><div>615&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s616'><div>616&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s617'><div>617&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s618'><div>618&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s619'><div>619&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s620'><div>620&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s621'><div>621&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s622'><div>622&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s623'><div>623&nbsp;S</div></a></li>
      <li class='unused-standard'><div>624&nbsp;S</div></li>
      <li class='unused-standard'><div>625&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s626'><div>626&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s627'><div>627&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s628'><div>628&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s629'><div>629&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s630'><div>630&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s631'><div>631&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s632'><div>632&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s633'><div>633&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s634'><div>634&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s635'><div>635&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s636'><div>636&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s637'><div>637&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s638'><div>638&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s639'><div>639&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9998;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         C Standards
    <ul class='l-3 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_c1'><div>1&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c2'><div>2&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c3'><div>3&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c4'><div>4&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c5'><div>5&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c6'><div>6&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c7'><div>7&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c8'><div>8&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c9'><div>9&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c10'><div>10&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c11'><div>11&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c12'><div>12&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c13'><div>13&nbsp;C</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9997;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         D Standards
    <ul class='l-3'>
      <li style='z-index:10000;'>
        <div class='standard-range'><div class='right-align-standard'>1&nbsp;D</div><div class='center'>to</div><div class='left-align-standard'>100&nbsp;D</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_d1'><div>1&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d2'><div>2&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d3'><div>3&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d4'><div>4&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d5'><div>5&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d6'><div>6&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d7'><div>7&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d8'><div>8&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d9'><div>9&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d10'><div>10&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d11'><div>11&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d12'><div>12&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d13'><div>13&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d14'><div>14&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d15'><div>15&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d16'><div>16&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d17'><div>17&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d18'><div>18&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d19'><div>19&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d20'><div>20&nbsp;D</div></a></li>
      <li class='unused-standard'><div>21&nbsp;D</div></li>
      <li class='standard'><a href='standards.htm#standard_d22'><div>22&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d23'><div>23&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d24'><div>24&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d25'><div>25&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d26'><div>26&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d27'><div>27&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d28'><div>28&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d29'><div>29&nbsp;D</div></a></li>
      <li class='unused-standard'><div>30&nbsp;D</div></li>
      <li class='unused-standard'><div>31&nbsp;D</div></li>
      <li class='unused-standard'><div>32&nbsp;D</div></li>
      <li class='standard'><a href='standards.htm#standard_d33'><div>33&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d34'><div>34&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d35'><div>35&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d36'><div>36&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d37'><div>37&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d38'><div>38&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d39'><div>39&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d40'><div>40&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d41'><div>41&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d42'><div>42&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d43'><div>43&nbsp;D</div></a></li>
      <li class='unused-standard'><div>44&nbsp;D</div></li>
      <li class='standard'><a href='standards.htm#standard_d45'><div>45&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d46'><div>46&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d47'><div>47&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d48'><div>48&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d49'><div>49&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d50'><div>50&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d51'><div>51&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d52'><div>52&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d53'><div>53&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d54'><div>54&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d55'><div>55&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d56'><div>56&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d57'><div>57&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d58'><div>58&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d59'><div>59&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d60'><div>60&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d61'><div>61&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d62'><div>62&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d63'><div>63&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d64'><div>64&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d65'><div>65&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d66'><div>66&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d67'><div>67&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d68'><div>68&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d69'><div>69&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d70'><div>70&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d71'><div>71&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d72'><div>72&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d73'><div>73&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d74'><div>74&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d75'><div>75&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d76'><div>76&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d77'><div>77&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d78'><div>78&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d79'><div>79&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d80'><div>80&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d81'><div>81&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d82'><div>82&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d83'><div>83&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d84'><div>84&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d85'><div>85&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d86'><div>86&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d87'><div>87&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d88'><div>88&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d89'><div>89&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d90'><div>90&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d91'><div>91&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d92'><div>92&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d93'><div>93&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d94'><div>94&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d95'><div>95&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d96'><div>96&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d97'><div>97&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d98'><div>98&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d99'><div>99&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d100'><div>100&nbsp;D</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9999;'>
        <div class='standard-range'><div class='right-align-standard'>101&nbsp;D</div><div class='center'>to</div><div class='left-align-standard'>113&nbsp;D</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_d101'><div>101&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d102'><div>102&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d103'><div>103&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d104'><div>104&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d105'><div>105&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d106'><div>106&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d107'><div>107&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d108'><div>108&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d109'><div>109&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d110'><div>110&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d111'><div>111&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d112'><div>112&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d113'><div>113&nbsp;D</div></a></li>
    </ul> <!-- l-4 -->
      </li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9996;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         X Standards
    <ul class='l-3 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_x1'><div>1&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x2'><div>2&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x3'><div>3&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x4'><div>4&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x5'><div>5&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x6'><div>6&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x7'><div>7&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x8'><div>8&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x9'><div>9&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x10'><div>10&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x11'><div>11&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x12'><div>12&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x13'><div>13&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x14'><div>14&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x15'><div>15&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x16'><div>16&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x17'><div>17&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x18'><div>18&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x19'><div>19&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x20'><div>20&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x21'><div>21&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x22'><div>22&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x23'><div>23&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x24'><div>24&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x25'><div>25&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x26'><div>26&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x27'><div>27&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x28'><div>28&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x29'><div>29&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x30'><div>30&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x31'><div>31&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x32'><div>32&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x33'><div>33&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x34'><div>34&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x35'><div>35&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x36'><div>36&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x37'><div>37&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x38'><div>38&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x39'><div>39&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x40'><div>40&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x41'><div>41&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x42'><div>42&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x43'><div>43&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x44'><div>44&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x45'><div>45&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x46'><div>46&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x47'><div>47&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x48'><div>48&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x49'><div>49&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x50'><div>50&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x51'><div>51&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x52'><div>52&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x53'><div>53&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x54'><div>54&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x55'><div>55&nbsp;X</div></a></li>
      <li class='unused-standard'><div>56&nbsp;X</div></li>
      <li class='standard'><a href='standards.htm#standard_x57'><div>57&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x58'><div>58&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x59'><div>59&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x60'><div>60&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x61'><div>61&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x62'><div>62&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x63'><div>63&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x64'><div>64&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x65'><div>65&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x66'><div>66&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x67'><div>67&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x68'><div>68&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x69'><div>69&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x70'><div>70&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x71'><div>71&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x72'><div>72&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x73'><div>73&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x74'><div>74&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x75'><div>75&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x76'><div>76&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x77'><div>77&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x78'><div>78&nbsp;X</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9995;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         I Standards
    <ul class='l-3 h-menu h-standards' style='width:3.75em;'>
      <li class='standard'><a href='standards.htm#standard_i1'><div>1&nbsp;I</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9994;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         Q Standards
    <ul class='l-3 h-menu h-standards' style='width:18.75em;'>
      <li class='standard'><a href='standards.htm#standard_q1'><div>1&nbsp;Q</div></a></li>
      <li class='standard'><a href='standards.htm#standard_q2'><div>2&nbsp;Q</div></a></li>
      <li class='standard'><a href='standards.htm#standard_q3'><div>3&nbsp;Q</div></a></li>
      <li class='standard'><a href='standards.htm#standard_q4'><div>4&nbsp;Q</div></a></li>
      <li class='standard'><a href='standards.htm#standard_q5'><div>5&nbsp;Q</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9993;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         U Standards
    <ul class='l-3 h-menu h-standards' style='width:11.25em;'>
      <li class='standard'><a href='standards.htm#standard_u1'><div>1&nbsp;U</div></a></li>
      <li class='standard'><a href='standards.htm#standard_u2'><div>2&nbsp;U</div></a></li>
      <li class='standard'><a href='standards.htm#standard_u3'><div>3&nbsp;U</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9992;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         J Standards
    <ul class='l-3 h-menu h-standards' style='width:11.25em;'>
      <li class='standard'><a href='standards.htm#standard_j1'><div>1&nbsp;J</div></a></li>
      <li class='standard'><a href='standards.htm#standard_j2'><div>2&nbsp;J</div></a></li>
      <li class='standard'><a href='standards.htm#standard_j3'><div>3&nbsp;J</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9991;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         Z Standards
    <ul class='l-3 h-menu h-standards' style='width:3.75em;'>
      <li class='standard'><a href='standards.htm#standard_z1'><div>1&nbsp;Z</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9990;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         H Standards
    <ul class='l-3 h-menu h-standards' style='width:30em;'>
      <li class='standard'><a href='standards.htm#standard_h1'><div>1&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h2'><div>2&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h3'><div>3&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h4'><div>4&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h5'><div>5&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h6'><div>6&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h7'><div>7&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h8'><div>8&nbsp;H</div></a></li>
    </ul> <!-- l-3 -->
       </li>
    <li class='sep' style='z-index:9999;' />
        <li style='z-index:9989;'>
          <!-- No <a> tag round content means item stays lit when in popup -->
          By Keyword
          <ul class='l-3 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_decl'>Decl</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_class'>Class</a></div>
          <ul class='l-5 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_inherit'>Inherit</a></div>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_op'>Op</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_fn'>Fn</a></div>
          <ul class='l-5 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_fnpar'>Fnpar</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9998;'>
              <div class='standard-range'><a href='keywords.htm#keyword_id'>Id</a></div>
            </li>
            <li style='z-index:9997;'>
              <div class='standard-range'><a href='keywords.htm#keyword_obj'>Obj</a></div>
            </li>
            <li style='z-index:9996;'>
              <div class='standard-range'><a href='keywords.htm#keyword_template'>Template</a></div>
            </li>
            <li style='z-index:9995;'>
              <div class='standard-range'><a href='keywords.htm#keyword_type'>Type</a></div>
          <ul class='l-5 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_struct'>Struct</a></div>
            </li>
          </ul>
            </li>
          </ul>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_exp'>Exp</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_arr'>Arr</a></div>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_conv'>Conv</a></div>
            </li>
            <li style='z-index:9998;'>
              <div class='standard-range'><a href='keywords.htm#keyword_ptr'>Ptr</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9998;'>
              <div class='standard-range'><a href='keywords.htm#keyword_file'>File</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_namespace'>Namespace</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9997;'>
              <div class='standard-range'><a href='keywords.htm#keyword_flow'>Flow</a></div>
            </li>
            <li style='z-index:9996;'>
              <div class='standard-range'><a href='keywords.htm#keyword_lib'>Lib</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_io'>Io</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9995;'>
              <div class='standard-range'><a href='keywords.htm#keyword_lit'>Lit</a></div>
            </li>
            <li style='z-index:9994;'>
              <div class='standard-range'><a href='keywords.htm#keyword_metric'>Metric</a></div>
            </li>
            <li style='z-index:9993;'>
              <div class='standard-range'><a href='keywords.htm#keyword_misc'>Misc</a></div>
            </li>
            <li style='z-index:9992;'>
              <div class='standard-range'><a href='keywords.htm#keyword_pre'>Pre</a></div>
            </li>
            <li style='z-index:9991;'>
              <div class='standard-range'><a href='keywords.htm#keyword_stmt'>Stmt</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_cond'>Cond</a></div>
          <ul class='l-5 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_if'>If</a></div>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_switch'>Switch</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_loop'>Loop</a></div>
            </li>
            <li style='z-index:9998;'>
              <div class='standard-range'><a href='keywords.htm#keyword_jmp'>Jmp</a></div>
            </li>
            <li style='z-index:9997;'>
              <div class='standard-range'><a href='keywords.htm#keyword_except'>Except</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9990;'>
              <div class='standard-range'><a href='keywords.htm#keyword_style'>Style</a></div>
            </li>
          </ul>
        </li>
        <li style='z-index:9988;'>
          <!-- No <a> tag round content means item stays lit when in popup -->
          By Classification
          <ul class='l-3 h-menu h-keywords'>
    <li><a href='classifications.htm#classification_allocation'>Allocation</a></li>
    <li><a href='classifications.htm#classification_complexity'>Complexity</a></li>
    <li><a href='classifications.htm#classification_dependability'>Dependability</a></li>
    <li><a href='classifications.htm#classification_fault'>Fault</a></li>
    <li><a href='classifications.htm#classification_maintainability'>Maintainability</a></li>
    <li><a href='classifications.htm#classification_portability'>Portability</a></li>
    <li><a href='classifications.htm#classification_style'>Style</a></li>
    <li><a href='classifications.htm#classification_testability'>Testability</a></li>
    <li><a href='classifications.htm#classification_vulnerabilities'>Vulnerabilities</a></li>
          </ul>
        </li>
    <li><a href='standard_flags.htm'>Std Modifiers</a></li>
    <li class='sep' style='z-index:9999;' />
        <li style='z-index:9987;'>
          <!-- No <a> tag round content means item stays lit when in popup -->
          Models
          <ul class='l-3 h-menu h-models'>
    <li><a href='cast_model.htm'>CAST</a></li>
    <li><a href='cert-c_model.htm'>CERT-C</a></li>
    <li><a href='cmse_model.htm'>CMSE</a></li>
    <li><a href='conform_model.htm'>CONFORM</a></li>
    <li><a href='cwe_model.htm'>CWE</a></li>
    <li><a href='customer_sample_model.htm'>Customer Sample</a></li>
    <li><a href='dera_model.htm'>DERA</a></li>
    <li><a href='eads-c_model.htm'>EADS-C</a></li>
    <li><a href='eads-cpp_model.htm'>EADS-C++</a></li>
    <li><a href='fsb582-c_model.htm'>FSB582-C</a></li>
    <li><a href='fsb582-cpp_model.htm'>FSB582-C++</a></li>
    <li><a href='gjb_model.htm'>GJB</a></li>
    <li><a href='hicpp_model.htm'>HIC++</a></li>
    <li><a href='his_model.htm'>HIS</a></li>
    <li><a href='jpl_model.htm'>JPL</a></li>
    <li><a href='jsf++_av_model.htm'>JSF++ AV</a></li>
    <li><a href='lmtcp_model.htm'>LMTCP</a></li>
    <li><a href='legacy_model.htm'>Legacy</a></li>
    <li><a href='misra-ac_model.htm'>MISRA-AC</a></li>
    <li><a href='misra-cpp_2008_model.htm'>MISRA-C++:2008</a></li>
    <li><a href='misra-c_1998_model.htm'>MISRA-C:1998</a></li>
    <li><a href='misra-c_2004_model.htm'>MISRA-C:2004</a></li>
    <li><a href='misra-c_2012_model.htm'>MISRA-C:2012</a></li>
    <li><a href='netrino_model.htm'>NETRINO</a></li>
    <li><a href='runtime_model.htm'>RUNTIME</a></li>
    <li><a href='sec-c_model.htm'>SEC-C</a></li>
    <li><a href='standard_model.htm'>Standard</a></li>
    <li><a href='tbrun_requires_model.htm'>TBrun Requires</a></li>
    <li><a href='uml_model.htm'>UML</a></li>
    <li><a href='vsos_model.htm'>VSOS</a></li>
          </ul>
        </li>
      </ul>
    </li>
  </ul><!-- l-1 -->
    </div><!-- floating-menu -->
    <div class='page_title'>MISRA-C:2012 Standards Model for C / C++</div>
  </div><!-- nav -->
  <div class='body'>
    <div class='body-content'>
<div class='body_block'>
  <div class='title'>Acknowledgements</div>
  <p>Extracts from "MISRA C:2012 Guidelines for the use of the C language in critical systems" &copy; MISRA</p>
  <div class='title'>Compliance Matrix</div>
  <p>A compliance matrix for the MISRA-C:2012 standards model is available in the Microsoft Excel XML file <i>standards_info/compliance/misra-c_2012_compliance.xml</i>, which may be found relative to the LDRA tool suite installation directory.</p>
<p>Some MISRA C:2012 guidelines are undecidable. Such guidelines will be marked as Fully Implemented if all statically checkable aspects of the guideline are addressed.
Note 1: The MISRA C:2012 categories are mapped as follows: Mandatory as Mandatory(M), Required as Checking(C), Advisory as Optional(O).In addition, the category Document(I) is used to highlight code that has issues which should be addressed by accompanying documentation.
Note 2: Where a piece of code violates more than one guideline, only one violation may be output.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.1.1' name='rule_misra-c%3A2012_d.1.1'><div class='rule'><div class='id'>D.1.1<br/><span>Required</span></div></div></a><div class='headline'>Any implementation-defined behaviour on which the output of the program depends shall be documented and understood</div></div><p>This directive is mainly intended for the user to document the behaviour of implementation dependent features.  Some of these features are highlighted using these LDRA standards.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>69&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s69'>#pragma used.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>584&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s584'>Remainder of % op could be negative.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.2.1' name='rule_misra-c%3A2012_d.2.1'><div class='rule'><div class='id'>D.2.1<br/><span>Required</span></div></div></a><div class='headline'>All source files shall compile without any compilation errors</div></div><p>Coverage of C constraint errors is covered by rule 1.1.  This rule applies to other errors that might be produced by the user's compiler.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.3.1' name='rule_misra-c%3A2012_d.3.1'><div class='rule'><div class='id'>D.3.1<br/><span>Required</span></div></div></a><div class='headline'>All code shall be traceable to documented requirements</div></div><p>TBreq supplies the functionality for tracing requirements to the code.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.1' name='rule_misra-c%3A2012_d.4.1'><div class='rule'><div class='id'>D.4.1<br/><span>Required</span></div></div></a><div class='headline'>Run-time failures shall be minimised</div></div><p>This directive cannot be completely checked using static analysis. Dynamic analysis and coverage analysis can be used to minimise run-time errors.  Errors such as exceeding array bounds are covered by more specific rules.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>43&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d43'>Divide by 0 found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>45&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d45'>Pointer not checked for null before use.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>248&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s248'>Divide by zero in preprocessor directive.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>629&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s629'>Divide by zero found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.2' name='rule_misra-c%3A2012_d.4.2'><div class='rule'><div class='id'>D.4.2<br/><span>Advisory</span></div></div></a><div class='headline'>All usage of assembly language should be documented</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>17&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s17'>Code insert found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.3' name='rule_misra-c%3A2012_d.4.3'><div class='rule'><div class='id'>D.4.3<br/><span>Required</span></div></div></a><div class='headline'>Assembly language shall be encapsulated and isolated</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>88&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s88'>Procedure is not pure assembler.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.4' name='rule_misra-c%3A2012_d.4.4'><div class='rule'><div class='id'>D.4.4<br/><span>Advisory</span></div></div></a><div class='headline'>Sections of code should not be 'commented out'</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>302&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s302'>Comment possibly contains code.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.5' name='rule_misra-c%3A2012_d.4.5'><div class='rule'><div class='id'>D.4.5<br/><span>Advisory</span></div></div></a><div class='headline'>Identifiers in the same namespace with overlapping visibility should be typographically unambiguous</div></div><p>This directive allows a static analysis tool the choice of what is considered ambiguous. The analysis checks for the following: change in case, presence/absence of underscore, Ov0, Iv1, Ivl, lv1, Sv5, Zv2, nvh and Bv8.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>217&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s217'>Names only differ by case.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>67&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x67'>Identifier is typographically ambiguous.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.6' name='rule_misra-c%3A2012_d.4.6'><div class='rule'><div class='id'>D.4.6<br/><span>Advisory</span></div></div></a><div class='headline'>typedefs that indicate size and signedness should be used in place of the basic numerical types</div></div><p>The analysis highlights all uses of basic types.  This includes their use in bit-fields, which is allowed by this MISRA rule.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>90&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s90'>Basic type declaration used.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_219'>219</a> = 1</td>    </tr>
    <tr>    <td class='from'>495&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s495'>Typedef name has no size indication.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_392'>392</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.7' name='rule_misra-c%3A2012_d.4.7'><div class='rule'><div class='id'>D.4.7<br/><span>Required</span></div></div></a><div class='headline'>If a function returns error information, then that error information shall be tested</div></div><p>The analysis highlights all  function return values that are not used. The user must then manually check for which unused function returns include error information.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>91&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d91'>Function return value potentially unused.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.8' name='rule_misra-c%3A2012_d.4.8'><div class='rule'><div class='id'>D.4.8<br/><span>Advisory</span></div></div></a><div class='headline'>If a pointer to a structure or union is never dereferenced within a translation unit, then the implementation of the object should be hidden</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>104&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d104'>Structure implementation not hidden.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.9' name='rule_misra-c%3A2012_d.4.9'><div class='rule'><div class='id'>D.4.9<br/><span>Advisory</span></div></div></a><div class='headline'>A function should be used in preference to a function-like macro where they are interchangeable</div></div><p>The analysis highlights all uses of function-like macros. The user must then manually check whether they can be replaced by a function without causing a compiler error.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>340&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s340'>Use of function like macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.10' name='rule_misra-c%3A2012_d.4.10'><div class='rule'><div class='id'>D.4.10<br/><span>Required</span></div></div></a><div class='headline'>Precautions shall be taken in order to prevent the contents of a header file being included more than once</div></div><p>The documentation for <a href='standards.htm#standard_s243'>243 S</a> describes the forms accepted by the tool.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>243&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s243'>Included file not protected with #define.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.11' name='rule_misra-c%3A2012_d.4.11'><div class='rule'><div class='id'>D.4.11<br/><span>Required</span></div></div></a><div class='headline'>The validity of values passed to library functions shall be checked</div></div><p>TBrun may be used to perform the necessary checks.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.12' name='rule_misra-c%3A2012_d.4.12'><div class='rule'><div class='id'>D.4.12<br/><span>Required</span></div></div></a><div class='headline'>Dynamic memory allocation shall not be used</div></div><p>The analysis is configured to check for malloc, calloc, realloc and free.  Other functions may be added to cvals.dat in a similar manner.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_d.4.13' name='rule_misra-c%3A2012_d.4.13'><div class='rule'><div class='id'>D.4.13<br/><span>Advisory</span></div></div></a><div class='headline'>Functions which are designed to provide operations on a resource should be called in an appropriate sequence</div></div><p>Some checks are performed by other MISRA guidelines. For example the use of close after open.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.1.1' name='rule_misra-c%3A2012_r.1.1'><div class='rule'><div class='id'>R.1.1<br/><span>Required</span></div></div></a><div class='headline'>The program shall contain no violations of the standard C syntax and constraints, and shall not exceed the implementation's translation limits</div></div><p>The analysis should be performed after compilation by the user's compiler. The standards mapped to this rule protect from the following constraint errors, which have been known to go undetected by some compilers.</p>
<table><tr><th>    Standard                       </th><td> C99 Section Reference </td></tr>
<tr><td> <a href='standards.htm#standard_s21'>21 S</a>      </td><td> 6.5.2.2 </td></tr>
<tr><td> <a href='standards.htm#standard_s145'>145 S</a>  </td><td> 6.10 </td></tr>
<tr><td> <a href='standards.htm#standard_s323'>323 S</a>  </td><td> 6.8.4.2 </td></tr>
<tr><td> <a href='standards.htm#standard_s345'>345 S</a>  </td><td> 6.5.7, 6.5.10-12 </td></tr>
<tr><td> <a href='standards.htm#standard_s404'>404 S</a>  </td><td> 6.7.8 </td></tr>
<tr><td> <a href='standards.htm#standard_s481'>481 S</a>  </td><td> 6.7.2.1 </td></tr>
<tr><td> <a href='standards.htm#standard_s580'>580 S</a>  </td><td> 6.10.3 </td></tr>
<tr><td> <a href='standards.htm#standard_s615'>615 S</a>  </td><td> 6.5.15 </td></tr>
</table>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>21&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s21'>Number of parameters does not match.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>145&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s145'>#if has invalid expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>323&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s323'>Switch has more than one default case.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>345&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s345'>Bit operator with floating point operand.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>404&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s404'>Array initialisation has too many items.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_399'>399</a> = 1</td>    </tr>
    <tr>    <td class='from'>481&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s481'>Array with no bounds in struct.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>580&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s580'>Macro redefinition without using #undef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>615&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s615'>Conditional operator has incompatible types.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.1.2' name='rule_misra-c%3A2012_r.1.2'><div class='rule'><div class='id'>R.1.2<br/><span>Advisory</span></div></div></a><div class='headline'>Language extensions should not be used</div></div><p>Single line comments are permitted if using C99. <a href='standards.htm#standard_s110'>110 S</a>  and <a href='standards.htm#standard_s632'>632 S</a> can be switched off in the creport.dat file by removing references to MISRA C:2012 or by  filtering using TbVision.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>110&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s110'>Use of single line comment //.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>143&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s143'>Curly brackets used in expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>293&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s293'>Non ANSI/ISO construct used.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>632&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s632'>Use of // comment in pre-processor directive or macro defn.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.1.3' name='rule_misra-c%3A2012_r.1.3'><div class='rule'><div class='id'>R.1.3<br/><span>Required</span></div></div></a><div class='headline'>There shall be no occurrence of undefined or critical unspecified behaviour</div></div><p>The mappings in this rule refer to the undefined features that are not covered by more specific rule.</p>
<table><tr><td> C90_4 </td><td> </td><td> 608 S </td></tr>
<tr><td> C90_11 </td><td> </td><td> 176 S </td></tr>
<tr><td> C90_13 </td><td> </td><td> 450 S </td></tr>
<tr><td> C90_49 </td><td> </td><td> 324 S </td></tr>
<tr><td> C99_2 </td><td> </td><td> 412 S, 5 Q </td></tr>
<tr><td> C99_4 </td><td> </td><td> 118 S </td></tr>
<tr><td> C99_5 </td><td> </td><td> 113 S </td></tr>
<tr><td> C99_20 </td><td> </td><td> 64 S, 65 S </td></tr>
<tr><td> C99_23 </td><td> </td><td> 576 S </td></tr>
<tr><td> C99_36 </td><td> </td><td> 21 S </td></tr>
<tr><td> C99_56 </td><td> </td><td> 465 S, 482 S, 497 S </td></tr>
<tr><td> C99_57 </td><td> </td><td> 296 S </td></tr>
<tr><td> C99_58 </td><td> </td><td> 497 S </td></tr>
<tr><td> C99_61 </td><td> </td><td> 582 S, 587 S </td></tr>
<tr><td> C99_73 </td><td> </td><td> 576 S </td></tr>
<tr><td> C99_84 </td><td> </td><td> 335 S, 336 S </td></tr>
<tr><td> C99_89 </td><td> </td><td> 573 S </td></tr>
<tr><td> C99_94 </td><td> </td><td> 71 X </td></tr>
<tr><td> C99_124 </td><td> </td><td> 89 D </td></tr>
<tr><td> C99_125 </td><td> </td><td> 87 D </td></tr>
<tr><td> C99_136 </td><td> </td><td> 44 S </td></tr>
<tr><td> C99_141 </td><td> </td><td> 84 D </td></tr>
<tr><td> C99_142 </td><td> </td><td> 590 S </td></tr>
<tr><td> C99_143 </td><td> </td><td> 84 D </td></tr>
<tr><td> C99_145 </td><td> </td><td> 486 S, 589 S </td></tr>
<tr><td> C99_162 </td><td> </td><td> 83 D </td></tr>
<tr><td> C99_163 </td><td> </td><td> 84 D </td></tr>
<tr><td> C99_166 </td><td> </td><td> 82 D </td></tr>
<tr><td> C99_180 </td><td> </td><td> 487 S, 489 S, 66 X, 70 X, 71 X </td></tr>
</table>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>82&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d82'>fsetpos values not generated by fgetpos.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>83&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d83'>Potentially repeated call to ungetc.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>84&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d84'>No fseek or flush before I/O.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>87&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d87'>Illegal shared object in signal handler.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>89&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d89'>Illegal use of raise in signal handler.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>5&nbsp;Q</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_q5'>File does not end with new line.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>21&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s21'>Number of parameters does not match.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>64&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s64'>Void procedure used in expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_218'>218</a> = 1</td>    </tr>
    <tr>    <td class='from'>65&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s65'>Void variable passed as parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>113&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s113'>Non standard character   in source.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_408'>408</a> = 1</td>    </tr>
    <tr>    <td class='from'>118&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s118'>main must be int (void) or int (int,char*[]).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>176&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s176'>Non standard escape sequence    in source.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>296&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s296'>Function declared at block scope.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>324&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s324'>Macro call has wrong number of parameters.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>335&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s335'>Operator defined contains illegal items.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>336&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s336'>#if expansion contains define operator.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>412&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s412'>Undefined behaviour, \ before E-O-F.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>450&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s450'>Wide string and string concatenated.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>465&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s465'>Struct/union not completely specified.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>482&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s482'>Incomplete structure referenced.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>486&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s486'>Incorrect number of formats in output function.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>487&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s487'>Insufficient space allocated.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>489&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s489'>Insufficient space for operation.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>497&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s497'>Type is incomplete in translation unit.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>573&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s573'>Macro concatenation of uni char names.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>576&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s576'>Function pointer is of wrong type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>582&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s582'>const object reassigned.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>587&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s587'>Const local variable not immediately initialised.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>589&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s589'>Format is not appropriate type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>590&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s590'>Mode fault in fopen.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>608&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s608'>Use of explicitly undefined language feature.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>66&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x66'>Insufficient array space at call.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>70&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x70'>Array has insufficient space.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>71&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x71'>Insufficient space for copy.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.2.1' name='rule_misra-c%3A2012_r.2.1'><div class='rule'><div class='id'>R.2.1<br/><span>Required</span></div></div></a><div class='headline'>A project shall not contain unreachable code</div></div><p>This MISRA rule is undecidable. The analysis will detect code that is never reached regardless of the input values. This includes not reaching the end of a function if an infinite loop is detected.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>28&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d28'>Potentially infinite loop found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>76&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d76'>Procedure is not called or referenced in code analysed.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>1&nbsp;J</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_j1'>Unreachable Code found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>3&nbsp;J</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_j3'>All internal linkage calls unreachable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>35&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s35'>Static procedure is not explicitly called in code analysed.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.2.2' name='rule_misra-c%3A2012_r.2.2'><div class='rule'><div class='id'>R.2.2<br/><span>Required</span></div></div></a><div class='headline'>There shall be no dead code</div></div><p>This MISRA rule is undecidable.
The analysis highlights all DD anomalies, which includes variables that are re-assigned down only one path. The MISRA rule only applies to variables that are never used before re-assignment.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>8&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d8'>DD data flow anomalies found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>65&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d65'>Void function has no side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>105&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d105'>DU anomaly dead code, variable value is unused on all paths.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>57&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s57'>Statement with no side effect.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.2.3' name='rule_misra-c%3A2012_r.2.3'><div class='rule'><div class='id'>R.2.3<br/><span>Advisory</span></div></div></a><div class='headline'>A project should not contain unused type declarations</div></div><p>The analysis highlights unused types in each translation unit. The user must then manually check whether this message is issued for all translation units and hence whether the type is not used in the project.
By default, the analysis is configured to not check types declared in header files. This can be altered as described in the documentation for <a href='standards.htm#standard_s413'>413 S</a>.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>413&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s413'>User type declared but not used in code analysed.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_284'>284</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.2.4' name='rule_misra-c%3A2012_r.2.4'><div class='rule'><div class='id'>R.2.4<br/><span>Advisory</span></div></div></a><div class='headline'>A project should not contain unused tag declarations</div></div><p>The analysis permits the presence of a tag if the associated type is used.
The analysis highlights unused tags in each translation unit. The user must then manually check whether this message is issued for all translation units and hence whether the tag is not used in the project.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>413&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s413'>User type declared but not used in code analysed.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_284'>284</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.2.5' name='rule_misra-c%3A2012_r.2.5'><div class='rule'><div class='id'>R.2.5<br/><span>Advisory</span></div></div></a><div class='headline'>A project should not contain unused macro declarations</div></div><p>The analysis highlights unused macros in each translation unit. The user must then manually check whether this message is issued for all translation units and hence whether the macro is not used in the project.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>628&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s628'>Macro not used in translation unit.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.2.6' name='rule_misra-c%3A2012_r.2.6'><div class='rule'><div class='id'>R.2.6<br/><span>Advisory</span></div></div></a><div class='headline'>A function should not contain unused label declarations</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>610&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s610'>Label is unused.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.2.7' name='rule_misra-c%3A2012_r.2.7'><div class='rule'><div class='id'>R.2.7<br/><span>Advisory</span></div></div></a><div class='headline'>There should be no unused parameters in functions</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>1&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d1'>Unused procedure parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>15&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d15'>Unused procedural parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.3.1' name='rule_misra-c%3A2012_r.3.1'><div class='rule'><div class='id'>R.3.1<br/><span>Required</span></div></div></a><div class='headline'>The character sequences /* and // shall not be used within a comment</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>119&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s119'>Nested comment found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_413'>413</a> = 0 (Default), <a href='standard_flags.htm#flag_434'>434</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.3.2' name='rule_misra-c%3A2012_r.3.2'><div class='rule'><div class='id'>R.3.2<br/><span>Required</span></div></div></a><div class='headline'>Line-splicing shall not be used in // comments</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>611&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s611'>Line splice used in // comment.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_402'>402</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.4.1' name='rule_misra-c%3A2012_r.4.1'><div class='rule'><div class='id'>R.4.1<br/><span>Required</span></div></div></a><div class='headline'>Octal and hexadecimal escape sequences shall be terminated</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>176&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s176'>Non standard escape sequence    in source.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.4.2' name='rule_misra-c%3A2012_r.4.2'><div class='rule'><div class='id'>R.4.2<br/><span>Advisory</span></div></div></a><div class='headline'>Trigraphs should not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>81&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s81'>Use of trigraph.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.5.1' name='rule_misra-c%3A2012_r.5.1'><div class='rule'><div class='id'>R.5.1<br/><span>Required</span></div></div></a><div class='headline'>External identifiers shall be distinct</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>17&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d17'>Identifier not unique within *** characters.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>61&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x61'>Identifier match in *** chars.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.5.2' name='rule_misra-c%3A2012_r.5.2'><div class='rule'><div class='id'>R.5.2<br/><span>Required</span></div></div></a><div class='headline'>Identifiers declared in the same scope and name space shall be distinct</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>17&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d17'>Identifier not unique within *** characters.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>61&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x61'>Identifier match in *** chars.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.5.3' name='rule_misra-c%3A2012_r.5.3'><div class='rule'><div class='id'>R.5.3<br/><span>Required</span></div></div></a><div class='headline'>An identifier declared in an inner scope shall not hide an identifier declared in an outer scope</div></div><p>This rule overlaps with the rules 5.6, 5.7, 5.8 and 5.9. Where a  standard could be mapped to more than one rule, it is only mapped to the more specific rule.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>17&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d17'>Identifier not unique within *** characters.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>18&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d18'>Identifier name reused.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>92&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s92'>Duplicate use of a name in an enumeration.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>128&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s128'>Parameter has same name as global variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>131&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s131'>Name reused in inner scope.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>61&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x61'>Identifier match in *** chars.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.5.4' name='rule_misra-c%3A2012_r.5.4'><div class='rule'><div class='id'>R.5.4<br/><span>Required</span></div></div></a><div class='headline'>Macro identifiers shall be distinct</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>384&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s384'>Identifier matches macro name in 31 chars.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>622&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s622'>Macro parameters are not unique within limits.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>61&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x61'>Identifier match in *** chars.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.5.5' name='rule_misra-c%3A2012_r.5.5'><div class='rule'><div class='id'>R.5.5<br/><span>Required</span></div></div></a><div class='headline'>Identifiers shall be distinct from macro names</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>383&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s383'>Identifier name matches macro name.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>384&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s384'>Identifier matches macro name in 31 chars.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>12&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x12'>Identifier reuse: tag vs macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>21&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x21'>Identifier reuse: typedef vs macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>34&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x34'>Identifier reuse: proc vs macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>37&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x37'>Identifier reuse: persistent var vs macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>47&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x47'>Identifier reuse: component vs macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>48&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x48'>Identifier reuse: label vs macro (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>50&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x50'>Identifier reuse: var vs macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>53&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x53'>Identifier reuse: proc param vs macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>57&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x57'>Identifier reuse: macro vs enum constant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.5.6' name='rule_misra-c%3A2012_r.5.6'><div class='rule'><div class='id'>R.5.6<br/><span>Required</span></div></div></a><div class='headline'>A typedef name shall be a unique identifier</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>112&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s112'>Typedef name redeclared.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_417'>417</a> = 1</td>    </tr>
    <tr>    <td class='from'>374&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s374'>Name conflict with typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
    <tr>    <td class='from'>11&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x11'>Identifier reuse: tag vs typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>16&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x16'>Identifier reuse: typedef vs variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>17&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x17'>Identifier reuse: typedef vs label (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>18&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x18'>Identifier reuse: typedef vs typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>19&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x19'>Identifier reuse: typedef vs procedure parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>20&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x20'>Identifier reuse: persistent var vs typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>22&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x22'>Identifier reuse: typedef vs component.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>23&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x23'>Identifier reuse: typedef vs enum constant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>24&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x24'>Identifier reuse: typedef vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.5.7' name='rule_misra-c%3A2012_r.5.7'><div class='rule'><div class='id'>R.5.7<br/><span>Required</span></div></div></a><div class='headline'>A tag name shall be a unique identifier</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>325&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s325'>Inconsistent use of tag.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>4&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x4'>Identifier reuse: struct/union tag repeated.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>5&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x5'>Identifier reuse: struct vs union.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>6&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x6'>Identifier reuse: struct/union tag vs enum tag.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>7&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x7'>Identifier reuse: tag vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>8&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x8'>Identifier reuse: tag vs procedure parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>9&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x9'>Identifier reuse: tag vs variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>10&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x10'>Identifier reuse: tag vs label (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>11&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x11'>Identifier reuse: tag vs typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>13&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x13'>Identifier reuse: tag vs component.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>14&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x14'>Identifier reuse: tag vs enum constant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>15&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x15'>Identifier reuse: persistent var vs tag.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.5.8' name='rule_misra-c%3A2012_r.5.8'><div class='rule'><div class='id'>R.5.8<br/><span>Required</span></div></div></a><div class='headline'>Identifiers that define objects or functions with external linkage shall be unique</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>1&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s1'>Procedure name reused.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>7&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x7'>Identifier reuse: tag vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>15&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x15'>Identifier reuse: persistent var vs tag.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>20&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x20'>Identifier reuse: persistent var vs typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>24&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x24'>Identifier reuse: typedef vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>25&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x25'>Identifier reuse: procedure vs procedure param.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>26&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x26'>Identifier reuse: persistent var vs label (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>27&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x27'>Identifier reuse: persist var vs persist var.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>28&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x28'>Identifier reuse: persistent var vs var.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>29&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x29'>Identifier reuse: persistent var vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>30&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x30'>Identifier reuse: persistent var vs proc param.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>31&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x31'>Identifier reuse: procedure vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>32&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x32'>Identifier reuse: procedure vs var.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>33&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x33'>Identifier reuse: procedure vs label (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>35&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x35'>Identifier reuse: proc vs component.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>36&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x36'>Identifier reuse: proc vs enum constant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>38&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x38'>Identifier reuse: persistent var vs component.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>39&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x39'>Identifier reuse: persistent var vs enum constant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.5.9' name='rule_misra-c%3A2012_r.5.9'><div class='rule'><div class='id'>R.5.9<br/><span>Advisory</span></div></div></a><div class='headline'>Identifiers that define objects or functions with internal linkage should be unique</div></div><p>The analysis highlights all re-use of identifiers with static storage duration. Users will have to manually confirm that the re-use is not against a permitted locally declared static identifier.  Such identifiers are defined as having no linkage.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>1&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s1'>Procedure name reused.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>7&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x7'>Identifier reuse: tag vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>15&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x15'>Identifier reuse: persistent var vs tag.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>20&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x20'>Identifier reuse: persistent var vs typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>24&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x24'>Identifier reuse: typedef vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>25&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x25'>Identifier reuse: procedure vs procedure param.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>26&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x26'>Identifier reuse: persistent var vs label (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>27&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x27'>Identifier reuse: persist var vs persist var.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>28&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x28'>Identifier reuse: persistent var vs var.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>29&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x29'>Identifier reuse: persistent var vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>30&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x30'>Identifier reuse: persistent var vs proc param.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>31&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x31'>Identifier reuse: procedure vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>32&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x32'>Identifier reuse: procedure vs var.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>33&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x33'>Identifier reuse: procedure vs label (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>35&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x35'>Identifier reuse: proc vs component.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>36&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x36'>Identifier reuse: proc vs enum constant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>38&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x38'>Identifier reuse: persistent var vs component.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>39&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x39'>Identifier reuse: persistent var vs enum constant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.6.1' name='rule_misra-c%3A2012_r.6.1'><div class='rule'><div class='id'>R.6.1<br/><span>Required</span></div></div></a><div class='headline'>Bit-fields shall only be declared with an appropriate type</div></div><p><a href='standards.htm#standard_s73'>73 S</a> should be used when running with C90 and  <a href='standards.htm#standard_s520'>520 S</a> when running with C99. The choice of standard is determined by the setting of modifier 350.  By default, the C99 setting is used.
C99 permits the use of other bit-field types, but they are implementation dependent.  The analysis highlights the use of such types.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>73&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s73'>Bit field not signed or unsigned int.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>520&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s520'>Bit field is not bool or explicit integral.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 0 (Default), <a href='standard_flags.htm#flag_350'>350</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.6.2' name='rule_misra-c%3A2012_r.6.2'><div class='rule'><div class='id'>R.6.2<br/><span>Required</span></div></div></a><div class='headline'>Single-bit named bit fields shall not be of a signed type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>72&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s72'>Signed bit field less than 2 bits wide.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_416'>416</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.7.1' name='rule_misra-c%3A2012_r.7.1'><div class='rule'><div class='id'>R.7.1<br/><span>Required</span></div></div></a><div class='headline'>Octal constants shall not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>83&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s83'>Octal number found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.7.2' name='rule_misra-c%3A2012_r.7.2'><div class='rule'><div class='id'>R.7.2<br/><span>Required</span></div></div></a><div class='headline'>A &quot;u&quot; or &quot;U&quot; suffix shall be applied to all integer constants that are represented in an unsigned type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>331&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s331'>Literal value requires a U suffix.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_309'>309</a> = 0 (Default), <a href='standard_flags.htm#flag_358'>358</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>550&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s550'>Unsuffixed hex or octal is unsigned, add U.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.7.3' name='rule_misra-c%3A2012_r.7.3'><div class='rule'><div class='id'>R.7.3<br/><span>Required</span></div></div></a><div class='headline'>The lowercase character 'l' shall not be used in a literal suffix</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>252&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s252'>Lower case suffix to literal number.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_418'>418</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.7.4' name='rule_misra-c%3A2012_r.7.4'><div class='rule'><div class='id'>R.7.4<br/><span>Required</span></div></div></a><div class='headline'>A string literal shall not be assigned to an object unless the object's type is &quot;pointer to const-qualified char&quot;</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>157&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s157'>Modification of string literal.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_438'>438</a> = 1</td>    </tr>
    <tr>    <td class='from'>623&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s623'>String assigned to non const object.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.1' name='rule_misra-c%3A2012_r.8.1'><div class='rule'><div class='id'>R.8.1<br/><span>Required</span></div></div></a><div class='headline'>Types shall be explicitly specified</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>20&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s20'>Parameter not declared explicitly.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>135&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s135'>Parameter list is KR.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>326&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s326'>Declaration is missing type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.2' name='rule_misra-c%3A2012_r.8.2'><div class='rule'><div class='id'>R.8.2<br/><span>Required</span></div></div></a><div class='headline'>Function types shall be in prototype form with named parameters</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>37&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s37'>Procedure parameter has a type but no identifier.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>63&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s63'>Empty parameter list to procedure/function.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>135&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s135'>Parameter list is KR.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.3' name='rule_misra-c%3A2012_r.8.3'><div class='rule'><div class='id'>R.8.3<br/><span>Required</span></div></div></a><div class='headline'>All declarations of an object or function shall use the same names and type qualifiers</div></div><p>The analysis does not currently include a check on type qualifiers when comparing function declarations.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>36&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d36'>Prototype and definition name mismatch.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>63&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x63'>Function prototype/defn param type mismatch (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.4' name='rule_misra-c%3A2012_r.8.4'><div class='rule'><div class='id'>R.8.4<br/><span>Required</span></div></div></a><div class='headline'>A compatible declaration shall be visible when an object or function with external linkage is defined</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>36&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d36'>Prototype and definition name mismatch.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>106&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d106'>No prototype for non-static function.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>102&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s102'>Function and prototype return inconsistent (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>103&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s103'>Function and prototype param inconsistent (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>1&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x1'>Declaration types do not match across a system.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>62&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x62'>Function prototype/defn return type mismatch (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>63&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x63'>Function prototype/defn param type mismatch (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.5' name='rule_misra-c%3A2012_r.8.5'><div class='rule'><div class='id'>R.8.5<br/><span>Required</span></div></div></a><div class='headline'>An external object or function shall be declared once in one and only one file</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>60&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d60'>External object should be declared only once.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>110&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d110'>More than one prototype for same function.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>172&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s172'>Variable declared multiply.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_297'>297</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.6' name='rule_misra-c%3A2012_r.8.6'><div class='rule'><div class='id'>R.8.6<br/><span>Required</span></div></div></a><div class='headline'>An identifier with external linkage shall have exactly one external definition</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>26&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d26'>Variable should be defined once in only one file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>33&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d33'>No real declaration for external variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>34&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d34'>Procedure name re-used in different files.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>63&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d63'>No definition in system for prototyped procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.7' name='rule_misra-c%3A2012_r.8.7'><div class='rule'><div class='id'>R.8.7<br/><span>Advisory</span></div></div></a><div class='headline'>Functions and objects should not be defined with external linkage if they are referenced in only one translation unit</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>27&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d27'>Variable should be declared static.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>61&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d61'>Procedure should be declared static.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.8' name='rule_misra-c%3A2012_r.8.8'><div class='rule'><div class='id'>R.8.8<br/><span>Required</span></div></div></a><div class='headline'>The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>27&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d27'>Variable should be declared static.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>61&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d61'>Procedure should be declared static.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>461&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s461'>Identifier with ambiguous linkage.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>553&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s553'>Function and proto should both be static.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>575&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s575'>Linkage differs from previous declaration.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.9' name='rule_misra-c%3A2012_r.8.9'><div class='rule'><div class='id'>R.8.9<br/><span>Advisory</span></div></div></a><div class='headline'>An object should be defined at block scope if its identifier only appears in a single function</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>25&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d25'>Scope of variable could be reduced.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.10' name='rule_misra-c%3A2012_r.8.10'><div class='rule'><div class='id'>R.8.10<br/><span>Required</span></div></div></a><div class='headline'>An inline function shall be declared with the static storage class</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>612&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s612'>inline function should be declared static.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.11' name='rule_misra-c%3A2012_r.8.11'><div class='rule'><div class='id'>R.8.11<br/><span>Required</span></div></div></a><div class='headline'>When an array with external linkage is declared, its size should be explicitly specified</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>127&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s127'>Array has no bounds specified.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_285'>285</a> = 0 (Default), <a href='standard_flags.htm#flag_286'>286</a> = 1, <a href='standard_flags.htm#flag_426'>426</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.12' name='rule_misra-c%3A2012_r.8.12'><div class='rule'><div class='id'>R.8.12<br/><span>Required</span></div></div></a><div class='headline'>Within an enumerator list, the value of an implicitly-specified enumeration constant shall be unique</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>630&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s630'>Duplicated enumeration value.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.13' name='rule_misra-c%3A2012_r.8.13'><div class='rule'><div class='id'>R.8.13<br/><span>Advisory</span></div></div></a><div class='headline'>A pointer should point to a const-qualified type whenever possible</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>62&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d62'>Pointer parameter should be declared const.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.8.14' name='rule_misra-c%3A2012_r.8.14'><div class='rule'><div class='id'>R.8.14<br/><span>Required</span></div></div></a><div class='headline'>The restrict type qualifier shall not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>613&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s613'>Use of restrict keyword.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_350'>350</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.9.1' name='rule_misra-c%3A2012_r.9.1'><div class='rule'><div class='id'>R.9.1<br/><span>Mandatory</span></div></div></a><div class='headline'>The value of an object with automatic storage duration shall not be read before it has been set</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>53&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d53'>Attempt to use uninitialised pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>69&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d69'>UR anomaly, variable used before assignment.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>631&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s631'>Declaration not reachable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.9.2' name='rule_misra-c%3A2012_r.9.2'><div class='rule'><div class='id'>R.9.2<br/><span>Required</span></div></div></a><div class='headline'>The initializer for an aggregate or union shall be enclosed in braces</div></div><p>The analysis highlights all arrays that are not fully initialised or are initialised with {0}.  The user must then check manually whether the MISRA rule is satisfied or not.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>105&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s105'>Initialisation brace { } fault.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>627&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s627'>Initialiser both positional and designational.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.9.3' name='rule_misra-c%3A2012_r.9.3'><div class='rule'><div class='id'>R.9.3<br/><span>Required</span></div></div></a><div class='headline'>Arrays shall not be partially initialized</div></div><p>The analysis highlights all arrays that are not fully initialised or are initialised using {0}. The user must then check manually whether the MISRA rule is satisfied or not.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>397&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s397'>Array initialisation has insufficient items.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_415'>415</a> = 1</td>    </tr>
    <tr>    <td class='from'>627&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s627'>Initialiser both positional and designational.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.9.4' name='rule_misra-c%3A2012_r.9.4'><div class='rule'><div class='id'>R.9.4<br/><span>Required</span></div></div></a><div class='headline'>An element of an object shall not be initialised more than once</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>620&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s620'>Initialisation designator duplicated.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>627&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s627'>Initialiser both positional and designational.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.9.5' name='rule_misra-c%3A2012_r.9.5'><div class='rule'><div class='id'>R.9.5<br/><span>Required</span></div></div></a><div class='headline'>Where designated initialisers are used to initialize an array object the size of the array shall be specified explicitly</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>127&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s127'>Array has no bounds specified.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_285'>285</a> = 0 (Default), <a href='standard_flags.htm#flag_286'>286</a> = 1, <a href='standard_flags.htm#flag_426'>426</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.10.1' name='rule_misra-c%3A2012_r.10.1'><div class='rule'><div class='id'>R.10.1<br/><span>Required</span></div></div></a><div class='headline'>Operands shall not be of an inappropriate essential type</div></div><p>Note: The analysis may issue only one violation, even if multiple rules from section 10 are violated.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>50&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s50'>Use of shift operator on signed type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>52&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s52'>Unsigned expression negated.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>93&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s93'>Value is not of appropriate type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1, <a href='standard_flags.htm#flag_372'>372</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>96&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s96'>Use of mixed mode arithmetic.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : 267 = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>114&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s114'>Expression is not Boolean.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_386'>386</a> = 1 (Default)</td>    </tr>
    <tr>    <td class='from'>120&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s120'>Use of bit operator on signed type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>123&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s123'>Use of underlying enum representation value.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>136&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s136'>Bit operator with boolean operand.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>249&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s249'>Operation not appropriate to boolean type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>329&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s329'>Operation not appropriate to plain char.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_391'>391</a> = 1</td>    </tr>
    <tr>    <td class='from'>345&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s345'>Bit operator with floating point operand.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>389&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s389'>Bool value incremented/decremented.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>403&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s403'>Negative (or potentially negative) shift.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>433&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s433'>Type conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1, <a href='standard_flags.htm#flag_441'>441</a> = 1</td>    </tr>
    <tr>    <td class='from'>506&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s506'>Use of boolean with relational operator.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.10.2' name='rule_misra-c%3A2012_r.10.2'><div class='rule'><div class='id'>R.10.2<br/><span>Required</span></div></div></a><div class='headline'>Expressions of essentially character type shall not be used inappropriately in addition and subtraction operations</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>96&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s96'>Use of mixed mode arithmetic.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : 267 = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>329&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s329'>Operation not appropriate to plain char.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_391'>391</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.10.3' name='rule_misra-c%3A2012_r.10.3'><div class='rule'><div class='id'>R.10.3<br/><span>Required</span></div></div></a><div class='headline'>The value of an expression shall not be assigned to an object with a narrower essential type or of a different essential type category</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>93&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s93'>Value is not of appropriate type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1, <a href='standard_flags.htm#flag_372'>372</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>96&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s96'>Use of mixed mode arithmetic.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : 267 = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>101&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s101'>Function return type inconsistent.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_374'>374</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>104&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s104'>Struct field initialisation incorrect.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>123&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s123'>Use of underlying enum representation value.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>276&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s276'>Case is not part of switch enumeration.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>330&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s330'>Implicit conversion of underlying type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
    <tr>    <td class='from'>331&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s331'>Literal value requires a U suffix.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_309'>309</a> = 0 (Default), <a href='standard_flags.htm#flag_358'>358</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>411&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s411'>Inappropriate value assigned to enum.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>431&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s431'>Char used instead of (un)signed char.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>432&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s432'>Inappropriate type - should be plain char.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>433&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s433'>Type conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1, <a href='standard_flags.htm#flag_441'>441</a> = 1</td>    </tr>
    <tr>    <td class='from'>434&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s434'>Signed/unsigned conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_358'>358</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>435&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s435'>Float/integer conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
    <tr>    <td class='from'>445&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s445'>Narrower float conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
    <tr>    <td class='from'>446&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s446'>Narrower int conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
    <tr>    <td class='from'>458&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s458'>Implicit conversion: actual to formal param.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>488&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s488'>Value outside range of underlying type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.10.4' name='rule_misra-c%3A2012_r.10.4'><div class='rule'><div class='id'>R.10.4<br/><span>Required</span></div></div></a><div class='headline'>Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>93&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s93'>Value is not of appropriate type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1, <a href='standard_flags.htm#flag_372'>372</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>96&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s96'>Use of mixed mode arithmetic.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : 267 = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>107&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s107'>Type mismatch in ternary expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>123&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s123'>Use of underlying enum representation value.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>330&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s330'>Implicit conversion of underlying type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
    <tr>    <td class='from'>331&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s331'>Literal value requires a U suffix.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_309'>309</a> = 0 (Default), <a href='standard_flags.htm#flag_358'>358</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>433&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s433'>Type conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1, <a href='standard_flags.htm#flag_441'>441</a> = 1</td>    </tr>
    <tr>    <td class='from'>434&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s434'>Signed/unsigned conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_358'>358</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>435&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s435'>Float/integer conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
    <tr>    <td class='from'>488&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s488'>Value outside range of underlying type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.10.5' name='rule_misra-c%3A2012_r.10.5'><div class='rule'><div class='id'>R.10.5<br/><span>Advisory</span></div></div></a><div class='headline'>The value of an expression should not be cast to an inappropriate essential type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>93&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s93'>Value is not of appropriate type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1, <a href='standard_flags.htm#flag_372'>372</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.10.6' name='rule_misra-c%3A2012_r.10.6'><div class='rule'><div class='id'>R.10.6<br/><span>Required</span></div></div></a><div class='headline'>The value of a composite expression shall not be assigned to an object with wider essential type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>451&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s451'>No cast for widening complex float expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
    <tr>    <td class='from'>452&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s452'>No cast for widening complex int expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.10.7' name='rule_misra-c%3A2012_r.10.7'><div class='rule'><div class='id'>R.10.7<br/><span>Required</span></div></div></a><div class='headline'>If a composite expression is used as one operand of an operator in which the usual arithmetic conversions are performed then the other operand shall not have wider essential type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>451&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s451'>No cast for widening complex float expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
    <tr>    <td class='from'>452&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s452'>No cast for widening complex int expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.10.8' name='rule_misra-c%3A2012_r.10.8'><div class='rule'><div class='id'>R.10.8<br/><span>Required</span></div></div></a><div class='headline'>The value of a composite expression shall not be cast to a different essential type category or a wider essential type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>332&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s332'>Widening cast on complex integer expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
    <tr>    <td class='from'>333&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s333'>Widening cast on complex float expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
    <tr>    <td class='from'>441&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s441'>Float cast to non-float.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_323'>323</a> = 1, <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>442&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s442'>Signed integral type cast to unsigned.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_323'>323</a> = 1, <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>443&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s443'>Unsigned integral type cast to signed.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_323'>323</a> = 1, <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>444&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s444'>Integral type cast to non-integral.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_323'>323</a> = 1, <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.11.1' name='rule_misra-c%3A2012_r.11.1'><div class='rule'><div class='id'>R.11.1<br/><span>Required</span></div></div></a><div class='headline'>Conversions shall not be performed between a pointer to a function and any other type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>93&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s93'>Value is not of appropriate type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1, <a href='standard_flags.htm#flag_372'>372</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>94&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s94'>Casting operation on a pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_396'>396</a> = 1, <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default), <a href='standard_flags.htm#flag_439'>439</a> = 1, <a href='standard_flags.htm#flag_440'>440</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>95&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s95'>Casting operation to a pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_381'>381</a> = 0 (Default), <a href='standard_flags.htm#flag_396'>396</a> = 0 (Default), <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default), <a href='standard_flags.htm#flag_440'>440</a> = 1</td>    </tr>
    <tr>    <td class='from'>440&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s440'>Cast from integral type to pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>606&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s606'>Cast involving function pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_398'>398</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.11.2' name='rule_misra-c%3A2012_r.11.2'><div class='rule'><div class='id'>R.11.2<br/><span>Required</span></div></div></a><div class='headline'>Conversions shall not be performed between a pointer to incomplete and any other type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>94&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s94'>Casting operation on a pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_396'>396</a> = 1, <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default), <a href='standard_flags.htm#flag_439'>439</a> = 1, <a href='standard_flags.htm#flag_440'>440</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>95&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s95'>Casting operation to a pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_381'>381</a> = 0 (Default), <a href='standard_flags.htm#flag_396'>396</a> = 0 (Default), <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default), <a href='standard_flags.htm#flag_440'>440</a> = 1</td>    </tr>
    <tr>    <td class='from'>439&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s439'>Cast from pointer to integral type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>440&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s440'>Cast from integral type to pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>554&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s554'>Cast to an unrelated type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.11.3' name='rule_misra-c%3A2012_r.11.3'><div class='rule'><div class='id'>R.11.3<br/><span>Required</span></div></div></a><div class='headline'>A cast shall not be performed between a pointer to object type and a pointer to a different object type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>94&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s94'>Casting operation on a pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_396'>396</a> = 1, <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default), <a href='standard_flags.htm#flag_439'>439</a> = 1, <a href='standard_flags.htm#flag_440'>440</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>95&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s95'>Casting operation to a pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_381'>381</a> = 0 (Default), <a href='standard_flags.htm#flag_396'>396</a> = 0 (Default), <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default), <a href='standard_flags.htm#flag_440'>440</a> = 1</td>    </tr>
    <tr>    <td class='from'>554&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s554'>Cast to an unrelated type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.11.4' name='rule_misra-c%3A2012_r.11.4'><div class='rule'><div class='id'>R.11.4<br/><span>Advisory</span></div></div></a><div class='headline'>A conversion should not be performed between a pointer to object and an integer type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>439&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s439'>Cast from pointer to integral type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>440&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s440'>Cast from integral type to pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.11.5' name='rule_misra-c%3A2012_r.11.5'><div class='rule'><div class='id'>R.11.5<br/><span>Advisory</span></div></div></a><div class='headline'>A conversion should not be performed from pointer to void into pointer to object</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>95&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s95'>Casting operation to a pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_381'>381</a> = 0 (Default), <a href='standard_flags.htm#flag_396'>396</a> = 0 (Default), <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default), <a href='standard_flags.htm#flag_440'>440</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.11.6' name='rule_misra-c%3A2012_r.11.6'><div class='rule'><div class='id'>R.11.6<br/><span>Required</span></div></div></a><div class='headline'>A cast shall not be performed between pointer to void and an arithmetic type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>439&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s439'>Cast from pointer to integral type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>440&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s440'>Cast from integral type to pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>635&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s635'>Cast from pointer to float type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>636&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s636'>Cast from float type to pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.11.7' name='rule_misra-c%3A2012_r.11.7'><div class='rule'><div class='id'>R.11.7<br/><span>Required</span></div></div></a><div class='headline'>A cast shall not be performed between pointer to object and a non-integer arithmetic type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>94&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s94'>Casting operation on a pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_396'>396</a> = 1, <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default), <a href='standard_flags.htm#flag_439'>439</a> = 1, <a href='standard_flags.htm#flag_440'>440</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>95&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s95'>Casting operation to a pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_381'>381</a> = 0 (Default), <a href='standard_flags.htm#flag_396'>396</a> = 0 (Default), <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default), <a href='standard_flags.htm#flag_440'>440</a> = 1</td>    </tr>
    <tr>    <td class='from'>439&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s439'>Cast from pointer to integral type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>440&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s440'>Cast from integral type to pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.11.8' name='rule_misra-c%3A2012_r.11.8'><div class='rule'><div class='id'>R.11.8<br/><span>Required</span></div></div></a><div class='headline'>A cast shall not remove any const or volatile qualification from the type pointed to by a pointer</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>203&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s203'>Cast on a constant value.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_390'>390</a> = 1</td>    </tr>
    <tr>    <td class='from'>344&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s344'>Cast on volatile value.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_395'>395</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.11.9' name='rule_misra-c%3A2012_r.11.9'><div class='rule'><div class='id'>R.11.9<br/><span>Required</span></div></div></a><div class='headline'>The macro NULL shall be the only permitted form of integer null pointer constant</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>531&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s531'>Literal zero used in pointer context.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.12.1' name='rule_misra-c%3A2012_r.12.1'><div class='rule'><div class='id'>R.12.1<br/><span>Advisory</span></div></div></a><div class='headline'>The precedence of operators within expressions should be made explicit</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>49&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s49'>Logical conjunctions need brackets.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_206'>206</a> = 1</td>    </tr>
    <tr>    <td class='from'>361&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s361'>Expression needs brackets.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_119'>119</a> = 0 (Default), <a href='standard_flags.htm#flag_264'>264</a> = 0 (Default), <a href='standard_flags.htm#flag_414'>414</a> = 1, <a href='standard_flags.htm#flag_420'>420</a> = 1, <a href='standard_flags.htm#flag_421'>421</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.12.2' name='rule_misra-c%3A2012_r.12.2'><div class='rule'><div class='id'>R.12.2<br/><span>Required</span></div></div></a><div class='headline'>The right hand operand of a shift operator shall lie in the range zero to one less than the width in bits of the essential type of the left hand operand</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>51&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s51'>Shifting value too far.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>403&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s403'>Negative (or potentially negative) shift.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.12.3' name='rule_misra-c%3A2012_r.12.3'><div class='rule'><div class='id'>R.12.3<br/><span>Advisory</span></div></div></a><div class='headline'>The comma operator should not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>53&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s53'>Use of comma operator.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_263'>263</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.12.4' name='rule_misra-c%3A2012_r.12.4'><div class='rule'><div class='id'>R.12.4<br/><span>Advisory</span></div></div></a><div class='headline'>Evaluation of constant expressions should not lead to unsigned integer wrap-around</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>493&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s493'>Numeric overflow.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>494&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s494'>Numeric underflow.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.13.1' name='rule_misra-c%3A2012_r.13.1'><div class='rule'><div class='id'>R.13.1<br/><span>Required</span></div></div></a><div class='headline'>Initialiser lists shall not contain persistent side effects</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>35&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d35'>Expression has side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>1&nbsp;Q</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_q1'>Call has execution order dependant side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>9&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s9'>Assignment operation in expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_259'>259</a> = 0 (Default), <a href='standard_flags.htm#flag_266'>266</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>30&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s30'>Deprecated usage of ++ or -- operators found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_122'>122</a> = 1</td>    </tr>
    <tr>    <td class='from'>132&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s132'>Assignment operator in boolean expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : 247 = 1</td>    </tr>
    <tr>    <td class='from'>134&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s134'>Volatile variable in complex expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.13.2' name='rule_misra-c%3A2012_r.13.2'><div class='rule'><div class='id'>R.13.2<br/><span>Required</span></div></div></a><div class='headline'>The value of an expression and its persistent side effects shall be the same under all permitted evaluation orders</div></div><p>This MISRA rule is undecidable. In particular the mappings of <a href='standards.htm#standard_s9'>9 S</a>  and <a href='standards.htm#standard_d22'>22 D</a> should be treated as informational messages, for which further investigation should occur manually.  For example, it should be checked that any functions with global side-effects are not called twice in the same expression.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>22&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d22'>Function has global variable side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>35&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d35'>Expression has side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>72&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d72'>Potential side effect problem in expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>74&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d74'>Potential side effect from repeated function call.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>1&nbsp;Q</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_q1'>Call has execution order dependant side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>9&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s9'>Assignment operation in expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_259'>259</a> = 0 (Default), <a href='standard_flags.htm#flag_266'>266</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>30&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s30'>Deprecated usage of ++ or -- operators found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_122'>122</a> = 1</td>    </tr>
    <tr>    <td class='from'>134&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s134'>Volatile variable in complex expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.13.3' name='rule_misra-c%3A2012_r.13.3'><div class='rule'><div class='id'>R.13.3<br/><span>Advisory</span></div></div></a><div class='headline'>A full expression containing an increment (++) or decrement (--) operator should have no other potential side effects other than that caused by the increment or decrement operator</div></div><p>The analysis highlights all uses of ++ and  in expressions when combined with  other arithmetic operators.  This is a stricter check than required by the MISRA C:2012 rule.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>30&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s30'>Deprecated usage of ++ or -- operators found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_122'>122</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.13.4' name='rule_misra-c%3A2012_r.13.4'><div class='rule'><div class='id'>R.13.4<br/><span>Advisory</span></div></div></a><div class='headline'>The result of an assignment operator should not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>9&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s9'>Assignment operation in expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_259'>259</a> = 0 (Default), <a href='standard_flags.htm#flag_266'>266</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>132&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s132'>Assignment operator in boolean expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : 247 = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.13.5' name='rule_misra-c%3A2012_r.13.5'><div class='rule'><div class='id'>R.13.5<br/><span>Required</span></div></div></a><div class='headline'>The right hand operand of a logical &amp;&amp; or || operator shall not contain persistent side effects</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>35&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d35'>Expression has side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>1&nbsp;Q</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_q1'>Call has execution order dependant side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>406&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s406'>Use of ++ or -- on RHS of &amp;&amp; or || operator.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>408&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s408'>Volatile variable accessed on RHS of &amp;&amp; or ||.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.13.6' name='rule_misra-c%3A2012_r.13.6'><div class='rule'><div class='id'>R.13.6<br/><span>Mandatory</span></div></div></a><div class='headline'>The operand of the sizeof operator shall not contain any expression which has potential side effects</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>54&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s54'>Sizeof operator with side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.14.1' name='rule_misra-c%3A2012_r.14.1'><div class='rule'><div class='id'>R.14.1<br/><span>Required</span></div></div></a><div class='headline'>A loop counter shall not have essentially floating type</div></div><p>The determination of a loop counter as defined in the MSIRA document is statically undecidable. The analysis definition of loop counter is restricted to for loops that satisfy rule 14.2.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>39&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s39'>Unsuitable type for loop variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.14.2' name='rule_misra-c%3A2012_r.14.2'><div class='rule'><div class='id'>R.14.2<br/><span>Required</span></div></div></a><div class='headline'>A for loop shall be well-formed</div></div><p>This MISRA rule is undecidable. The analysis highlights all uses of function calls in the second clause.  The user must then manually check that such calls do not have persistent side-effects. The analysis definition of a loop counter is stricter than that of MISRA and does not permit the use of structure members are loop counters.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>55&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d55'>Modification of loop counter in loop body.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>270&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s270'>For loop initialisation is not simple.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_249'>249</a> = 1</td>    </tr>
    <tr>    <td class='from'>271&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s271'>For loop incrementation is not simple.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>429&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s429'>Empty middle expression in for loop.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>430&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s430'>Inconsistent usage of loop control variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>581&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s581'>Loop conditions are independent.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.14.3' name='rule_misra-c%3A2012_r.14.3'><div class='rule'><div class='id'>R.14.3<br/><span>Required</span></div></div></a><div class='headline'>Controlling expressions shall not be invariant</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>139&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s139'>Construct leads to infeasible code.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>140&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s140'>Infeasible loop condition found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.14.4' name='rule_misra-c%3A2012_r.14.4'><div class='rule'><div class='id'>R.14.4<br/><span>Required</span></div></div></a><div class='headline'>The controlling expression of an if statement and the controlling expression of an iteration-statement shall have essentially Boolean type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>114&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s114'>Expression is not Boolean.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_386'>386</a> = 1 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.15.1' name='rule_misra-c%3A2012_r.15.1'><div class='rule'><div class='id'>R.15.1<br/><span>Advisory</span></div></div></a><div class='headline'>The goto statement should not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>13&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s13'>goto detected.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.15.2' name='rule_misra-c%3A2012_r.15.2'><div class='rule'><div class='id'>R.15.2<br/><span>Required</span></div></div></a><div class='headline'>The goto statement shall jump to a label declared later in the same function</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>509&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s509'>goto label is backwards.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.15.3' name='rule_misra-c%3A2012_r.15.3'><div class='rule'><div class='id'>R.15.3<br/><span>Required</span></div></div></a><div class='headline'>Any label referenced by a goto statement shall be declared in the same block, or in any block enclosing the goto statement</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>511&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s511'>Jump into nested block.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.15.4' name='rule_misra-c%3A2012_r.15.4'><div class='rule'><div class='id'>R.15.4<br/><span>Advisory</span></div></div></a><div class='headline'>There should be no more than one break or goto statement used to terminate any iteration statement</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>409&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s409'>More than one break or goto statement in loop.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.15.5' name='rule_misra-c%3A2012_r.15.5'><div class='rule'><div class='id'>R.15.5<br/><span>Advisory</span></div></div></a><div class='headline'>A function should have a single point of exit at the end</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>7&nbsp;C</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_c7'>Procedure has more than one exit point.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.15.6' name='rule_misra-c%3A2012_r.15.6'><div class='rule'><div class='id'>R.15.6<br/><span>Required</span></div></div></a><div class='headline'>The body of an iteration-statement or a selection-statement shall be a compound statement</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>11&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s11'>No brackets to loop body (added by Testbed).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>12&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s12'>No brackets to then/else (added by Testbed).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : tbend F</td>    </tr>
    <tr>    <td class='from'>428&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s428'>No {} for switch (added by Testbed).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.15.7' name='rule_misra-c%3A2012_r.15.7'><div class='rule'><div class='id'>R.15.7<br/><span>Required</span></div></div></a><div class='headline'>All if . . else if constructs shall be terminated with an else statement</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>59&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s59'>Else alternative missing in if.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : tbend = &lt;Default&gt;</td>    </tr>
    <tr>    <td class='from'>477&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s477'>Empty else clause following else if.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.16.1' name='rule_misra-c%3A2012_r.16.1'><div class='rule'><div class='id'>R.16.1<br/><span>Required</span></div></div></a><div class='headline'>All switch statements shall be well-formed</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>385&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s385'>MISRA switch statement syntax violation.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.16.2' name='rule_misra-c%3A2012_r.16.2'><div class='rule'><div class='id'>R.16.2<br/><span>Required</span></div></div></a><div class='headline'>A switch label shall only be used when the most closely-enclosing compound statement is the body of a switch statement</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>245&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s245'>Case statement in nested block.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.16.3' name='rule_misra-c%3A2012_r.16.3'><div class='rule'><div class='id'>R.16.3<br/><span>Required</span></div></div></a><div class='headline'>An unconditional break statement shall terminate every switch-clause</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>62&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s62'>Switch case not terminated with break.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_283'>283</a> = 0 (Default), <a href='standard_flags.htm#flag_384'>384</a> = c++ : 0, java : 1 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.16.4' name='rule_misra-c%3A2012_r.16.4'><div class='rule'><div class='id'>R.16.4<br/><span>Required</span></div></div></a><div class='headline'>Every switch statement shall have a default label</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>48&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s48'>No default case in switch statement.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_252'>252</a> = 0 (Default), <a href='standard_flags.htm#flag_233'>233</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>410&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s410'>Switch empty default has no comment.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.16.5' name='rule_misra-c%3A2012_r.16.5'><div class='rule'><div class='id'>R.16.5<br/><span>Required</span></div></div></a><div class='headline'>A default label shall appear as either the first or the last switch label of a switch statement</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>322&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s322'>Default is not last case of switch.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_419'>419</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.16.6' name='rule_misra-c%3A2012_r.16.6'><div class='rule'><div class='id'>R.16.6<br/><span>Required</span></div></div></a><div class='headline'>Every switch statement shall have at least two switch-clauses</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>60&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s60'>Empty switch statement.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>61&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s61'>Switch contains default only.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_437'>437</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.16.7' name='rule_misra-c%3A2012_r.16.7'><div class='rule'><div class='id'>R.16.7<br/><span>Required</span></div></div></a><div class='headline'>A switch-expression shall not have essentially Boolean type</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>121&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s121'>Use of boolean expression in switch.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.17.1' name='rule_misra-c%3A2012_r.17.1'><div class='rule'><div class='id'>R.17.1<br/><span>Required</span></div></div></a><div class='headline'>The features of &lt;stdarg.h&gt; shall not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.17.2' name='rule_misra-c%3A2012_r.17.2'><div class='rule'><div class='id'>R.17.2<br/><span>Required</span></div></div></a><div class='headline'>Functions shall not call themselves, either directly or indirectly</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>6&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d6'>Recursion in procedure calls found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>1&nbsp;U</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_u1'>Inter-file recursion found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.17.3' name='rule_misra-c%3A2012_r.17.3'><div class='rule'><div class='id'>R.17.3<br/><span>Mandatory</span></div></div></a><div class='headline'>A function shall not be declared implicitly</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>496&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s496'>Function call with no prior declaration.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.17.4' name='rule_misra-c%3A2012_r.17.4'><div class='rule'><div class='id'>R.17.4<br/><span>Mandatory</span></div></div></a><div class='headline'>All exit paths from a function with non-void return type shall have an explicit return statement with an expression</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>2&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d2'>Function does not return a value on all paths.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>36&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s36'>Function has no return statement.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>66&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s66'>Function with empty return expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.17.5' name='rule_misra-c%3A2012_r.17.5'><div class='rule'><div class='id'>R.17.5<br/><span>Advisory</span></div></div></a><div class='headline'>The function argument corresponding to a parameter declared to have an array type shall have an appropriate number of elements</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>64&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x64'>Array bound exceeded at call.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.17.6' name='rule_misra-c%3A2012_r.17.6'><div class='rule'><div class='id'>R.17.6<br/><span>Mandatory</span></div></div></a><div class='headline'>The declaration of an array parameter shall not contain the static keyword between the [ ]</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>614&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s614'>Use of static keyword in array parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_350'>350</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.17.7' name='rule_misra-c%3A2012_r.17.7'><div class='rule'><div class='id'>R.17.7<br/><span>Required</span></div></div></a><div class='headline'>The value returned by a function having non-void return type shall be used</div></div><p><a href='standards.htm#standard_s382'>382 S</a> will also be output when a function result is used in an operation that it-self is not used.  This violates rule 2.2.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>91&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d91'>Function return value potentially unused.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>382&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s382'>(void) missing for discarded return value.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_383'>383</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.17.8' name='rule_misra-c%3A2012_r.17.8'><div class='rule'><div class='id'>R.17.8<br/><span>Advisory</span></div></div></a><div class='headline'>A function parameter should not be modified</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>14&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d14'>Attempt to change parameter passed by value.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>149&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s149'>Reference parameter to procedure is reassigned.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.18.1' name='rule_misra-c%3A2012_r.18.1'><div class='rule'><div class='id'>R.18.1<br/><span>Required</span></div></div></a><div class='headline'>A pointer resulting from arithmetic on a pointer operand shall address an element of the same array as that pointer operand</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>47&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s47'>Array bound exceeded.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>436&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s436'>Declaration does not specify an array.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_400'>400</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>567&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s567'>Pointer arithmetic is not on array.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_436'>436</a> = 1</td>    </tr>
    <tr>    <td class='from'>64&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x64'>Array bound exceeded at call.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>68&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x68'>Parameter indexing array too big at call.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>69&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x69'>Global array bound exceeded at use.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>72&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x72'>Parameter indexing array too small at call.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.18.2' name='rule_misra-c%3A2012_r.18.2'><div class='rule'><div class='id'>R.18.2<br/><span>Required</span></div></div></a><div class='headline'>Subtraction between pointers shall only be applied to pointers that address elements of the same array</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>438&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s438'>Pointer subtraction not addressing one array.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.18.3' name='rule_misra-c%3A2012_r.18.3'><div class='rule'><div class='id'>R.18.3<br/><span>Required</span></div></div></a><div class='headline'>The relational operators &gt;, &gt;=, &lt; and &lt;= shall not be applied to objects of pointer type except where they point into the same object</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>437&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s437'>&lt; &gt; &lt;= &gt;= used on different object pointers.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.18.4' name='rule_misra-c%3A2012_r.18.4'><div class='rule'><div class='id'>R.18.4<br/><span>Advisory</span></div></div></a><div class='headline'>The +, -, += and -= operators should not be applied to an expression of pointer type</div></div><p>The analysis highlights all uses of arithmetic on pointers.  The user must then manually check for the permitted uses of ++ and pointer subtraction.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>87&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s87'>Use of pointer arithmetic.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : tbend = &lt;Default&gt;, <a href='standard_flags.htm#flag_266'>266</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>567&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s567'>Pointer arithmetic is not on array.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_436'>436</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.18.5' name='rule_misra-c%3A2012_r.18.5'><div class='rule'><div class='id'>R.18.5<br/><span>Advisory</span></div></div></a><div class='headline'>Declarations should contain no more than two levels of pointer nesting</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>80&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s80'>Pointer indirection exceeds 2 levels.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.18.6' name='rule_misra-c%3A2012_r.18.6'><div class='rule'><div class='id'>R.18.6<br/><span>Required</span></div></div></a><div class='headline'>The address of an object with automatic storage shall not be copied to another object that persists after the first object has ceased to exist</div></div><p>In general, it is not possible to determine statically whether a pointer contains the address of an object that has lifetime greater than the current scope. The analysis highlights the assignment of all pointers to a wider scope. More details can be found in the documentation for <a href='standards.htm#standard_s71'>71 S</a>.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>42&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d42'>Local pointer returned in function result.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>77&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d77'>Local structure returned in function result.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>71&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s71'>Pointer assignment to wider scope.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_222'>222</a> = 1</td>    </tr>
    <tr>    <td class='from'>565&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s565'>Assignment to wider scope.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.18.7' name='rule_misra-c%3A2012_r.18.7'><div class='rule'><div class='id'>R.18.7<br/><span>Required</span></div></div></a><div class='headline'>Flexible array members shall not be declared</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>481&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s481'>Array with no bounds in struct.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.18.8' name='rule_misra-c%3A2012_r.18.8'><div class='rule'><div class='id'>R.18.8<br/><span>Required</span></div></div></a><div class='headline'>Variable-length array types shall not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>621&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s621'>Variable-length array declared.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.19.1' name='rule_misra-c%3A2012_r.19.1'><div class='rule'><div class='id'>R.19.1<br/><span>Mandatory</span></div></div></a><div class='headline'>An object shall not be assigned or copied to an overlapping object</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>480&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s480'>String function params access same variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>545&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s545'>Assignment of overlapping storage.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.19.2' name='rule_misra-c%3A2012_r.19.2'><div class='rule'><div class='id'>R.19.2<br/><span>Advisory</span></div></div></a><div class='headline'>The union keyword should not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>74&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s74'>Union declared.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.1' name='rule_misra-c%3A2012_r.20.1'><div class='rule'><div class='id'>R.20.1<br/><span>Advisory</span></div></div></a><div class='headline'>#include directives should only be preceded by preprocessor directives or comments</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>75&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s75'>Executable code before an included file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>338&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s338'>#include preceded by non preproc directives.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.2' name='rule_misra-c%3A2012_r.20.2'><div class='rule'><div class='id'>R.20.2<br/><span>Required</span></div></div></a><div class='headline'>The ', &quot; or \ characters and the /* or // character sequences shall not occur in a header file name</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>100&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s100'>#include filename is non conformant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_120'>120</a> = '\&#44; (Default), <a href='standard_flags.htm#flag_331'>331</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.3' name='rule_misra-c%3A2012_r.20.3'><div class='rule'><div class='id'>R.20.3<br/><span>Required</span></div></div></a><div class='headline'>The #include directive shall be followed by either a &lt;filename&gt; or &quot;filename&quot; sequence</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>427&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s427'>Filename in #include not in &lt; &gt; or &quot; &quot;.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.4' name='rule_misra-c%3A2012_r.20.4'><div class='rule'><div class='id'>R.20.4<br/><span>Required</span></div></div></a><div class='headline'>A macro shall not be defined with the same name as a keyword</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>86&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s86'>Attempt to define reserved word.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>580&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s580'>Macro redefinition without using #undef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>626&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s626'>#define of keyword.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_391'>391</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.5' name='rule_misra-c%3A2012_r.20.5'><div class='rule'><div class='id'>R.20.5<br/><span>Advisory</span></div></div></a><div class='headline'>#undef should not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>68&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s68'>#undef used.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>426&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s426'>#undef used in a block.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.6' name='rule_misra-c%3A2012_r.20.6'><div class='rule'><div class='id'>R.20.6<br/><span>Required</span></div></div></a><div class='headline'>Tokens that look like a preprocessing directive shall not occur within a macro argument</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>341&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s341'>Preprocessor construct as macro parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.7' name='rule_misra-c%3A2012_r.20.7'><div class='rule'><div class='id'>R.20.7<br/><span>Required</span></div></div></a><div class='headline'>Expressions resulting from the expansion of macro parameters shall be enclosed in parentheses</div></div><p>The analysis highlights all uses of macro parameters that are not enclosed in parenthesis. The user must then manually check whether adding parenthesis would produce a constraint error.  In particular,  <a href='standards.htm#standard_s361'>361 S</a> highlights those macros that when expanded could have order of precedence issues.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>78&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s78'>Macro parameter not in brackets.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>361&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s361'>Expression needs brackets.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_119'>119</a> = 0 (Default), <a href='standard_flags.htm#flag_264'>264</a> = 0 (Default), <a href='standard_flags.htm#flag_414'>414</a> = 1, <a href='standard_flags.htm#flag_420'>420</a> = 1, <a href='standard_flags.htm#flag_421'>421</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.8' name='rule_misra-c%3A2012_r.20.8'><div class='rule'><div class='id'>R.20.8<br/><span>Required</span></div></div></a><div class='headline'>The controlling expression of a #if or #elif preprocessing directive shall evaluate to 0 or 1</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>616&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s616'>Preprocessor result not 0 or 1.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.9' name='rule_misra-c%3A2012_r.20.9'><div class='rule'><div class='id'>R.20.9<br/><span>Required</span></div></div></a><div class='headline'>All identifiers used in the controlling expression of #if or #elif preprocessing directives shall be #define'd before evaluation</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>337&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s337'>Undefined macro variable in #if.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.10' name='rule_misra-c%3A2012_r.20.10'><div class='rule'><div class='id'>R.20.10<br/><span>Advisory</span></div></div></a><div class='headline'>The # and ## preprocessor operators should not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>125&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s125'>Use of ## or # in a macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.11' name='rule_misra-c%3A2012_r.20.11'><div class='rule'><div class='id'>R.20.11<br/><span>Required</span></div></div></a><div class='headline'>A macro parameter immediately following a # operator shall not immediately be followed by a ## operator</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>76&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s76'>More than one of # or ## in a macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>637&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s637'># operand followed by ##.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.12' name='rule_misra-c%3A2012_r.20.12'><div class='rule'><div class='id'>R.20.12<br/><span>Required</span></div></div></a><div class='headline'>A macro parameter used as an operand to the # or ## operators, which is itself subject to further macro replacement, shall only be used as an operand to these operators</div></div><p>The analysis highlights occurrences of ## or #.  However, the user must manually confirm that the macro parameter used as the operand to ## or # is not used elsewhere in the macro.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>125&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s125'>Use of ## or # in a macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.13' name='rule_misra-c%3A2012_r.20.13'><div class='rule'><div class='id'>R.20.13<br/><span>Required</span></div></div></a><div class='headline'>A line whose first token is # shall be a valid preprocessing directive</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>147&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s147'>Spurious characters after preprocessor directive.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>342&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s342'>Extra chars after preprocessor directive.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.20.14' name='rule_misra-c%3A2012_r.20.14'><div class='rule'><div class='id'>R.20.14<br/><span>Required</span></div></div></a><div class='headline'>All #else, #elif and #endif preprocessor directives shall reside in the same file as the #if, #ifdef or #ifndef directive to which they are related</div></div><p>These standards are currently not enabled by default. Please read the documentation on these standards for how to enable them.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>126&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s126'>A #if has no #endif in the same file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>343&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s343'>#else has no #if, etc in the same file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.21.1' name='rule_misra-c%3A2012_r.21.1'><div class='rule'><div class='id'>R.21.1<br/><span>Required</span></div></div></a><div class='headline'>#define and #undef shall not be used on a reserved identifier or reserved macro name</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>86&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s86'>Attempt to define reserved word.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>156&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s156'>Use of 'defined' keyword in macro body.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>219&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s219'>User name starts with underscore.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_412'>412</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.21.2' name='rule_misra-c%3A2012_r.21.2'><div class='rule'><div class='id'>R.21.2<br/><span>Required</span></div></div></a><div class='headline'>A reserved identifier or macro name shall not be declared</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>218&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s218'>Name is used in standard libraries.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>219&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s219'>User name starts with underscore.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_412'>412</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.21.3' name='rule_misra-c%3A2012_r.21.3'><div class='rule'><div class='id'>R.21.3<br/><span>Required</span></div></div></a><div class='headline'>The memory allocation and deallocation functions of &lt;stdlib.h&gt; shall not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.21.4' name='rule_misra-c%3A2012_r.21.4'><div class='rule'><div class='id'>R.21.4<br/><span>Required</span></div></div></a><div class='headline'>The standard header file &lt;setjmp.h&gt; shall not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>43&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s43'>Use of setjmp/longjmp.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.21.5' name='rule_misra-c%3A2012_r.21.5'><div class='rule'><div class='id'>R.21.5<br/><span>Required</span></div></div></a><div class='headline'>The standard header file &lt;signal.h&gt; shall not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>130&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s130'>Included file is not permitted.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.21.6' name='rule_misra-c%3A2012_r.21.6'><div class='rule'><div class='id'>R.21.6<br/><span>Required</span></div></div></a><div class='headline'>The Standard Library input/output routines shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>130&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s130'>Included file is not permitted.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.21.7' name='rule_misra-c%3A2012_r.21.7'><div class='rule'><div class='id'>R.21.7<br/><span>Required</span></div></div></a><div class='headline'>The atof, atoi, atol and atoll functions of &lt;stdlib.h&gt; shall not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.21.8' name='rule_misra-c%3A2012_r.21.8'><div class='rule'><div class='id'>R.21.8<br/><span>Required</span></div></div></a><div class='headline'>The library functions abort, exit, getenv and system of &lt;stdlib.h&gt; shall not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>122&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s122'>Use of abort, exit, etc.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.21.9' name='rule_misra-c%3A2012_r.21.9'><div class='rule'><div class='id'>R.21.9<br/><span>Required</span></div></div></a><div class='headline'>The library functions bsearch and qsort of &lt;stdlib.h&gt; shall not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.21.10' name='rule_misra-c%3A2012_r.21.10'><div class='rule'><div class='id'>R.21.10<br/><span>Required</span></div></div></a><div class='headline'>The Standard Library time and date routines shall not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>130&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s130'>Included file is not permitted.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.21.11' name='rule_misra-c%3A2012_r.21.11'><div class='rule'><div class='id'>R.21.11<br/><span>Required</span></div></div></a><div class='headline'>The standard header file &lt;tgmath.h&gt; shall not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>130&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s130'>Included file is not permitted.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.21.12' name='rule_misra-c%3A2012_r.21.12'><div class='rule'><div class='id'>R.21.12<br/><span>Advisory</span></div></div></a><div class='headline'>The exception handling features of &lt;fenv.h&gt; should not be used</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.22.1' name='rule_misra-c%3A2012_r.22.1'><div class='rule'><div class='id'>R.22.1<br/><span>Required</span></div></div></a><div class='headline'>All resources obtained dynamically by means of Standard Library functions shall be explicitly released</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>49&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d49'>File pointer not closed on exit.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>50&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d50'>Memory not freed after last reference.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>75&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d75'>Attempt to open file pointer more than once.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.22.2' name='rule_misra-c%3A2012_r.22.2'><div class='rule'><div class='id'>R.22.2<br/><span>Mandatory</span></div></div></a><div class='headline'>A block of memory shall only be freed if it was allocated by means of a Standard Library function</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>51&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d51'>Attempt to read from freed memory.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>407&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s407'>free used on string.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>483&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s483'>free parameter is not heap item.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>484&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s484'>Attempt to use already freed object.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.22.3' name='rule_misra-c%3A2012_r.22.3'><div class='rule'><div class='id'>R.22.3<br/><span>Required</span></div></div></a><div class='headline'>The same file shall not be open for read and write access at the same time on different streams</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>103&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d103'>File opened both read and write.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.22.4' name='rule_misra-c%3A2012_r.22.4'><div class='rule'><div class='id'>R.22.4<br/><span>Mandatory</span></div></div></a><div class='headline'>There shall be no attempt to write to a stream which has been opened as read-only</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>98&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d98'>Attempt to write to file opened read only.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.22.5' name='rule_misra-c%3A2012_r.22.5'><div class='rule'><div class='id'>R.22.5<br/><span>Mandatory</span></div></div></a><div class='headline'>A pointer to a FILE object shall not be dereferenced</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>591&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s591'>Inappropriate use of file pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%3A2012_r.22.6' name='rule_misra-c%3A2012_r.22.6'><div class='rule'><div class='id'>R.22.6<br/><span>Mandatory</span></div></div></a><div class='headline'>The value of a pointer to a FILE shall not be used after the associated stream has been closed</div></div><p>This MISRA rule is undecidable.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>48&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d48'>Attempt to write to unopened file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>113&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d113'>File closed more than once.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
    </div><!-- body-content -->
    <div class='footer'><p>     &copy; Copyright 2014 LDRA Ltd. All rights reserved.<br />     <span>Version 9.4.4, generated on 25th April 2014 at 08:31:23</span>    </p></div>
  </div><!-- body -->
</body>
</html>
