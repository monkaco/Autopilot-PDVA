<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'
'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>
<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en' dir='ltr'>
<head>
  <!-- Force (well, try) IE8 to use IE8 standards mode -->
  <meta http-equiv='X-UA-Compatible' content='IE=8' />
  <meta http-equiv='Content-Type' content='text/html' />
  <title>MISRA-C++:2008 Standards Model for C++</title>
  <meta name='generator' content='LDRA Standards Tool' />
  <meta name='date' content='2014-04-25_08-31-23' />
  <style>

* {
    padding : 0em;
    margin  : 0em;
}

body {
    padding     : 0px;
    margin      : 0px;
    background  : #ffffff;
    font-family : Verdana, sans-serif;
    font-size   : 100%; /* Forces font sizes to work in all browsers (i.e. IE) */
}

div.nav {
    width : 100%;
}

div.floating-menu {
    position    : fixed;
    width       : 100%;
    margin-left : 1em;
    margin-top  : 1.5em;
    font-size   : 1em;
    z-index     : 20; /* Ensure popup is over page title */
}

div.nav div.page_title {
    top            : 0px;
    left           : 0px;
    width          : 100%;
    height         : 1em;
    font-size      : 200%;
    font-weight    : bold;
    text-align     : center;
    padding-top    : 0.25em;
    padding-bottom : 0.25em;
    color          : #5f4970;
    border-bottom  : 2px solid #eb6c00;
    z-index        : 10; /* Ensure page title is over page body */
}

div.nav div.page_title span.registered {
    font-size      : 50%;
    vertical-align : top;
}

.floating-menu .title:hover {
    color        : #000000;
    background   : #ccc0da;
}

.floating-menu ul {
    font-family   : Arial, Helvetica, sans-serif;
    margin  : 0em;
    padding : 0em;
}

.floating-menu li.sep {
  border-top : 0.125em solid #eb6c00;
}

.floating-menu li {
  position          : relative;
/*   width             : 8em; --- move to :hover to fix IE7 stuck hover */
  width             : 8em;
  list-style        : none;
  border-left       : 0.25em solid #eb6c00;
  border-bottom     : 1px solid #ccc0da;
  vertical-align    : bottom; /* Fix IE5-Win */
}

.floating-menu ul a,
.floating-menu ul li {
  display           : block;
  text-decoration   : none;
  text-align        : center;
  color             : #ccc0da;
  background        : #5f4970;
  vertical-align    : bottom; /* Fix IE5-Win */
}

.floating-menu ul ul {
/*  Rest of styling in hover to fix IE hover bug */
    display : none;
}

/* Menu item hover effects */
.floating-menu a:hover,
.floating-menu li:hover {
    color           : #5f4970;
    background      : #ccc0da;
    width           : 8em;
}

.floating-menu ul.l-1 li:hover ul.l-2 {
    position    : absolute;
    left        : -0.25em;
    top         : 0px;
    display     : block;

    /* These give tracking error bands around popup items.
     * This doesn't work for IE7 without a background image.
     */
    padding             : 1.5em 1.5em 1.5em 0em;
    background-image    : url(ie7/transparent-bg.gif);
    background-repeat   : repeat;
}

.floating-menu ul.l-2 li:hover ul.l-3,
.floating-menu ul.l-3 li:hover ul.l-4,
.floating-menu ul.l-4 li:hover ul.l-5 {
    position    : absolute;
    left        : 7.75em;   /* Just inside the right edge of the parent */
    top         : -1.5em;   /* Compensate for tracking guard band at top */
    display     : block;

    /* These give tracking error bands around popup items.
     * This doesn't work for IE7 without a background image.
     */
    padding             : 1.5em 1.5em 1.5em 0em;
    background-image    : url(ie7/transparent-bg.gif);
    background-repeat   : repeat;
}

.floating-menu ul.h-menu li {
    display         : inline;
    float           : left;
    border-right    : 0px; /* Turn off right border. */
}

.floating-menu li div.standard-range {
    margin : 0 auto;
    width  : 100%;
}

li div.right-align-standard {
    width      : 40%;
    text-align : right;
    display    : inline-block;
}
li div.center {
    width      : 20%;
    display    : inline-block;
    text-align : center;
}
li div.left-align-standard {
    width      : 40%;
    display    : inline-block;
    text-align : left;
}
.floating-menu ul.h-standards li,
.floating-menu ul.h-standards a {
    width : 3.5em;
}

.floating-menu ul.h-standards div.standard {
}
.floating-menu ul.h-standards li.unused-standard:hover,
.floating-menu ul.h-standards li.unused-standard {
    color      : #837093;
    background : #5f4970;
}
.floating-menu ul.h-standards li.standard div,
.floating-menu ul.h-standards li.unused-standard div {
    width      : 80%;
    text-align : right;
    display    : inline-block;
}
.floating-menu ul.h-keywords {
    width : 43.75em; /* 5 * ( 8.5em + 0.25em ) */
}

.floating-menu ul.h-models {
    width : 43.75em; /* 5 * ( 8.5em + 0.25em ) */
}

.floating-menu ul.h-models li,
.floating-menu ul.h-models a {
    width : 8.5em;
}

div.body {
    background : #ffffff;
    position   : absolute;
    top        : 3em;
    bottom     : 0em;
    left       : 0em;
    right      : 0em;
}

div.body * {
    padding : 0em;
    margin  : 0.5em 0em 0em 0em;
    border  : none;
}

div.body div {
    margin-top : 0em;
}

div.body-content {
    background  : #ffffff;
    border-left : 2px solid #eb6c00;
}

div.body_block {
    margin-left     : 10px;
    margin-right    : 10px;
    margin-bottom   : 0em;
    margin-top      : 0.5em;
    padding-top     : 0.25em;
    padding-bottom  : 1.5em;
    border-bottom   : 1px solid #eb6c00;
    font-size       : 80%;
}

.body_block .block_title {
    color         : #5f4970;
    font-size     : 135%;
    margin-bottom : 0.5em;
}

thead .block_title {
    margin-left : -1.25em;
}

.body_block .block_title div.standard {
    font-family : Arial, Helvetica, sans-serif;
    margin-left : -7em;
    width       : 6.25em;
    float       : left;
    font-size   : 115%;
    text-align  : right;
}

.body_block .block_title div.rule {
    font-family : Arial, Helvetica, sans-serif;
    font-size   : 110%;
    margin-left : -8.75em;
    width       : 7.75em;
    float       : left;
}

.body_block .block_title div.rule div {
    text-align : right;
}

.body_block .block_title div.rule span {
    font-size  : 80%;
    font-style : italic;
}

div.body_block .title {
    color         : #5f4970;
    text-align    : left;
    font-weight   : bold;
    margin-top    : 0.75em;
    margin-bottom : 0.5em;
}

div.body_block ul,
div.body_block ol {
    margin-left : 2em;
}

div.footer {
    text-align     : center;
    padding-bottom : 1em;
}

div.footer span {
    font-size : 75%;
}

pre {
    font-family : 'Courier New', monospace;
    font-size   : 85%; /* Forces font sizes to work in all browsers (i.e. IE) */
}

pre .kw1, pre .kw2, pre .kw3, pre .kw4, pre .kw5 {
    color:#0000ff;
}

pre .coMULTI, pre .co0, pre .co1, pre .co2, pre .co3 {
    color:#008000;
}

pre .es0, pre .es1, pre .es2, pre .es3, pre .es4, pre .es5, pre .esHARD, pre .nu0, pre .nu1, pre .nu2, pre .nu3, pre .nu4, pre .nu5, pre .nu6, pre .nu7, pre .nu8, pre .nu9, pre .nu10, pre .nu11, pre .nu12, pre .nu13, pre .nu14, pre .nu15, pre .nu16, pre .nu17, pre .nu18, pre .nu19, pre .st0 {
    color:#8080ff;
}

pre .br0 {
    color:#ff8080;
}

pre .me1, pre .me2 {
    color:#c00000;
}

pre .sy0, pre .sy1, pre .sy2, pre .sy3, pre .sy4 {
    color:#888888;
}

div.xref {
    margin-top  : 6pt;
    margin-left : 20px;
}

div.xref td {
    color          : #5f4970;
    vertical-align : top;
}

div.xref td.from {
    text-align : right;
}

div.xref td.level,
div.xref td.target {
    padding-left:1em;
}

div.body-content a {
    text-decoration : none;
    color           : #eb6c00;
}

div.body-content a:hover {
    text-decoration : underline;
}

@media screen {
    div.nav div.page_title {
        position : fixed;
    }
    div.body-content {
        margin-left : 10em;
    }
    div.body {
        overflow : auto;
    }
}
@media print {
    div.nav div.page_title {
        position  : relative;
        font-size : 150%;
    }
    div.floating-menu,
    div.noprint {
        display : none;
    }
    div.body {
        overflow : visible;
    }
}
@media print {
    div.body-content {
        margin-left : 10em;
    }
}

  </style>
</head>
<body>
  <!--[if lt IE 8]>
  <script src='ie7/IE8.js'></script>
  <![endif]-->
  <div class='nav'>
    <div class='floating-menu'>
  <ul class='l-1'>
    <li style='z-index:10000'>Menu
      <ul class='l-2'>
       <li style='z-index:9999;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         S Standards
    <ul class='l-3'>
      <li style='z-index:10000;'>
        <div class='standard-range'><div class='right-align-standard'>1&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>100&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s1'><div>1&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s2'><div>2&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s3'><div>3&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s4'><div>4&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s5'><div>5&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s6'><div>6&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s7'><div>7&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s8'><div>8&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s9'><div>9&nbsp;S</div></a></li>
      <li class='unused-standard'><div>10&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s11'><div>11&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s12'><div>12&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s13'><div>13&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s14'><div>14&nbsp;S</div></a></li>
      <li class='unused-standard'><div>15&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s16'><div>16&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s17'><div>17&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s18'><div>18&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s19'><div>19&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s20'><div>20&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s21'><div>21&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s22'><div>22&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s23'><div>23&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s24'><div>24&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s25'><div>25&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s26'><div>26&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s27'><div>27&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s28'><div>28&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s29'><div>29&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s30'><div>30&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s31'><div>31&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s32'><div>32&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s33'><div>33&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s34'><div>34&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s35'><div>35&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s36'><div>36&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s37'><div>37&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s38'><div>38&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s39'><div>39&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s40'><div>40&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s41'><div>41&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s42'><div>42&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s43'><div>43&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s44'><div>44&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s45'><div>45&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s46'><div>46&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s47'><div>47&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s48'><div>48&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s49'><div>49&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s50'><div>50&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s51'><div>51&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s52'><div>52&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s53'><div>53&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s54'><div>54&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s55'><div>55&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s56'><div>56&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s57'><div>57&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s58'><div>58&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s59'><div>59&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s60'><div>60&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s61'><div>61&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s62'><div>62&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s63'><div>63&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s64'><div>64&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s65'><div>65&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s66'><div>66&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s67'><div>67&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s68'><div>68&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s69'><div>69&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s70'><div>70&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s71'><div>71&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s72'><div>72&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s73'><div>73&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s74'><div>74&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s75'><div>75&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s76'><div>76&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s77'><div>77&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s78'><div>78&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s79'><div>79&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s80'><div>80&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s81'><div>81&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s82'><div>82&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s83'><div>83&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s84'><div>84&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s85'><div>85&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s86'><div>86&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s87'><div>87&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s88'><div>88&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s89'><div>89&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s90'><div>90&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s91'><div>91&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s92'><div>92&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s93'><div>93&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s94'><div>94&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s95'><div>95&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s96'><div>96&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s97'><div>97&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s98'><div>98&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s99'><div>99&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s100'><div>100&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9999;'>
        <div class='standard-range'><div class='right-align-standard'>101&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>200&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s101'><div>101&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s102'><div>102&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s103'><div>103&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s104'><div>104&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s105'><div>105&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s106'><div>106&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s107'><div>107&nbsp;S</div></a></li>
      <li class='unused-standard'><div>108&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s109'><div>109&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s110'><div>110&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s111'><div>111&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s112'><div>112&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s113'><div>113&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s114'><div>114&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s115'><div>115&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s116'><div>116&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s117'><div>117&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s118'><div>118&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s119'><div>119&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s120'><div>120&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s121'><div>121&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s122'><div>122&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s123'><div>123&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s124'><div>124&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s125'><div>125&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s126'><div>126&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s127'><div>127&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s128'><div>128&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s129'><div>129&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s130'><div>130&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s131'><div>131&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s132'><div>132&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s133'><div>133&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s134'><div>134&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s135'><div>135&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s136'><div>136&nbsp;S</div></a></li>
      <li class='unused-standard'><div>137&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s138'><div>138&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s139'><div>139&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s140'><div>140&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s141'><div>141&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s142'><div>142&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s143'><div>143&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s144'><div>144&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s145'><div>145&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s146'><div>146&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s147'><div>147&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s148'><div>148&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s149'><div>149&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s150'><div>150&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s151'><div>151&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s152'><div>152&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s153'><div>153&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s154'><div>154&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s155'><div>155&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s156'><div>156&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s157'><div>157&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s158'><div>158&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s159'><div>159&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s160'><div>160&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s161'><div>161&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s162'><div>162&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s163'><div>163&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s164'><div>164&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s165'><div>165&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s166'><div>166&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s167'><div>167&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s168'><div>168&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s169'><div>169&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s170'><div>170&nbsp;S</div></a></li>
      <li class='unused-standard'><div>171&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s172'><div>172&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s173'><div>173&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s174'><div>174&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s175'><div>175&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s176'><div>176&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s177'><div>177&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s178'><div>178&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s179'><div>179&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s180'><div>180&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s181'><div>181&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s182'><div>182&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s183'><div>183&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s184'><div>184&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s185'><div>185&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s186'><div>186&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s187'><div>187&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s188'><div>188&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s189'><div>189&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s190'><div>190&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s191'><div>191&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s192'><div>192&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s193'><div>193&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s194'><div>194&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s195'><div>195&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s196'><div>196&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s197'><div>197&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s198'><div>198&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s199'><div>199&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s200'><div>200&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9998;'>
        <div class='standard-range'><div class='right-align-standard'>201&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>300&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s201'><div>201&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s202'><div>202&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s203'><div>203&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s204'><div>204&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s205'><div>205&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s206'><div>206&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s207'><div>207&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s208'><div>208&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s209'><div>209&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s210'><div>210&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s211'><div>211&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s212'><div>212&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s213'><div>213&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s214'><div>214&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s215'><div>215&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s216'><div>216&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s217'><div>217&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s218'><div>218&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s219'><div>219&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s220'><div>220&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s221'><div>221&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s222'><div>222&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s223'><div>223&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s224'><div>224&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s225'><div>225&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s226'><div>226&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s227'><div>227&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s228'><div>228&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s229'><div>229&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s230'><div>230&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s231'><div>231&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s232'><div>232&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s233'><div>233&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s234'><div>234&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s235'><div>235&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s236'><div>236&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s237'><div>237&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s238'><div>238&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s239'><div>239&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s240'><div>240&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s241'><div>241&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s242'><div>242&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s243'><div>243&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s244'><div>244&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s245'><div>245&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s246'><div>246&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s247'><div>247&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s248'><div>248&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s249'><div>249&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s250'><div>250&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s251'><div>251&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s252'><div>252&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s253'><div>253&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s254'><div>254&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s255'><div>255&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s256'><div>256&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s257'><div>257&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s258'><div>258&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s259'><div>259&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s260'><div>260&nbsp;S</div></a></li>
      <li class='unused-standard'><div>261&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s262'><div>262&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s263'><div>263&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s264'><div>264&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s265'><div>265&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s266'><div>266&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s267'><div>267&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s268'><div>268&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s269'><div>269&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s270'><div>270&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s271'><div>271&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s272'><div>272&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s273'><div>273&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s274'><div>274&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s275'><div>275&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s276'><div>276&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s277'><div>277&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s278'><div>278&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s279'><div>279&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s280'><div>280&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s281'><div>281&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s282'><div>282&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s283'><div>283&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s284'><div>284&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s285'><div>285&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s286'><div>286&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s287'><div>287&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s288'><div>288&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s289'><div>289&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s290'><div>290&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s291'><div>291&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s292'><div>292&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s293'><div>293&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s294'><div>294&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s295'><div>295&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s296'><div>296&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s297'><div>297&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s298'><div>298&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s299'><div>299&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s300'><div>300&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9997;'>
        <div class='standard-range'><div class='right-align-standard'>301&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>400&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s301'><div>301&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s302'><div>302&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s303'><div>303&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s304'><div>304&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s305'><div>305&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s306'><div>306&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s307'><div>307&nbsp;S</div></a></li>
      <li class='unused-standard'><div>308&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s309'><div>309&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s310'><div>310&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s311'><div>311&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s312'><div>312&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s313'><div>313&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s314'><div>314&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s315'><div>315&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s316'><div>316&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s317'><div>317&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s318'><div>318&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s319'><div>319&nbsp;S</div></a></li>
      <li class='unused-standard'><div>320&nbsp;S</div></li>
      <li class='unused-standard'><div>321&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s322'><div>322&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s323'><div>323&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s324'><div>324&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s325'><div>325&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s326'><div>326&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s327'><div>327&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s328'><div>328&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s329'><div>329&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s330'><div>330&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s331'><div>331&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s332'><div>332&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s333'><div>333&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s334'><div>334&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s335'><div>335&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s336'><div>336&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s337'><div>337&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s338'><div>338&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s339'><div>339&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s340'><div>340&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s341'><div>341&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s342'><div>342&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s343'><div>343&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s344'><div>344&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s345'><div>345&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s346'><div>346&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s347'><div>347&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s348'><div>348&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s349'><div>349&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s350'><div>350&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s351'><div>351&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s352'><div>352&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s353'><div>353&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s354'><div>354&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s355'><div>355&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s356'><div>356&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s357'><div>357&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s358'><div>358&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s359'><div>359&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s360'><div>360&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s361'><div>361&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s362'><div>362&nbsp;S</div></a></li>
      <li class='unused-standard'><div>363&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s364'><div>364&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s365'><div>365&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s366'><div>366&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s367'><div>367&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s368'><div>368&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s369'><div>369&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s370'><div>370&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s371'><div>371&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s372'><div>372&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s373'><div>373&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s374'><div>374&nbsp;S</div></a></li>
      <li class='unused-standard'><div>375&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s376'><div>376&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s377'><div>377&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s378'><div>378&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s379'><div>379&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s380'><div>380&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s381'><div>381&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s382'><div>382&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s383'><div>383&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s384'><div>384&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s385'><div>385&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s386'><div>386&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s387'><div>387&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s388'><div>388&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s389'><div>389&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s390'><div>390&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s391'><div>391&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s392'><div>392&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s393'><div>393&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s394'><div>394&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s395'><div>395&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s396'><div>396&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s397'><div>397&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s398'><div>398&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s399'><div>399&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s400'><div>400&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9996;'>
        <div class='standard-range'><div class='right-align-standard'>401&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>500&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s401'><div>401&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s402'><div>402&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s403'><div>403&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s404'><div>404&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s405'><div>405&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s406'><div>406&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s407'><div>407&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s408'><div>408&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s409'><div>409&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s410'><div>410&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s411'><div>411&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s412'><div>412&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s413'><div>413&nbsp;S</div></a></li>
      <li class='unused-standard'><div>414&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s415'><div>415&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s416'><div>416&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s417'><div>417&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s418'><div>418&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s419'><div>419&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s420'><div>420&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s421'><div>421&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s422'><div>422&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s423'><div>423&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s424'><div>424&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s425'><div>425&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s426'><div>426&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s427'><div>427&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s428'><div>428&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s429'><div>429&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s430'><div>430&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s431'><div>431&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s432'><div>432&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s433'><div>433&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s434'><div>434&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s435'><div>435&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s436'><div>436&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s437'><div>437&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s438'><div>438&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s439'><div>439&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s440'><div>440&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s441'><div>441&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s442'><div>442&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s443'><div>443&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s444'><div>444&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s445'><div>445&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s446'><div>446&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s447'><div>447&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s448'><div>448&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s449'><div>449&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s450'><div>450&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s451'><div>451&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s452'><div>452&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s453'><div>453&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s454'><div>454&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s455'><div>455&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s456'><div>456&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s457'><div>457&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s458'><div>458&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s459'><div>459&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s460'><div>460&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s461'><div>461&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s462'><div>462&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s463'><div>463&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s464'><div>464&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s465'><div>465&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s466'><div>466&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s467'><div>467&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s468'><div>468&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s469'><div>469&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s470'><div>470&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s471'><div>471&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s472'><div>472&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s473'><div>473&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s474'><div>474&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s475'><div>475&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s476'><div>476&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s477'><div>477&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s478'><div>478&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s479'><div>479&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s480'><div>480&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s481'><div>481&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s482'><div>482&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s483'><div>483&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s484'><div>484&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s485'><div>485&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s486'><div>486&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s487'><div>487&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s488'><div>488&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s489'><div>489&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s490'><div>490&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s491'><div>491&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s492'><div>492&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s493'><div>493&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s494'><div>494&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s495'><div>495&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s496'><div>496&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s497'><div>497&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s498'><div>498&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s499'><div>499&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s500'><div>500&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9995;'>
        <div class='standard-range'><div class='right-align-standard'>501&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>600&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s501'><div>501&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s502'><div>502&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s503'><div>503&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s504'><div>504&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s505'><div>505&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s506'><div>506&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s507'><div>507&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s508'><div>508&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s509'><div>509&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s510'><div>510&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s511'><div>511&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s512'><div>512&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s513'><div>513&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s514'><div>514&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s515'><div>515&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s516'><div>516&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s517'><div>517&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s518'><div>518&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s519'><div>519&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s520'><div>520&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s521'><div>521&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s522'><div>522&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s523'><div>523&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s524'><div>524&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s525'><div>525&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s526'><div>526&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s527'><div>527&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s528'><div>528&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s529'><div>529&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s530'><div>530&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s531'><div>531&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s532'><div>532&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s533'><div>533&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s534'><div>534&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s535'><div>535&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s536'><div>536&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s537'><div>537&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s538'><div>538&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s539'><div>539&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s540'><div>540&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s541'><div>541&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s542'><div>542&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s543'><div>543&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s544'><div>544&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s545'><div>545&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s546'><div>546&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s547'><div>547&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s548'><div>548&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s549'><div>549&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s550'><div>550&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s551'><div>551&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s552'><div>552&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s553'><div>553&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s554'><div>554&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s555'><div>555&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s556'><div>556&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s557'><div>557&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s558'><div>558&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s559'><div>559&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s560'><div>560&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s561'><div>561&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s562'><div>562&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s563'><div>563&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s564'><div>564&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s565'><div>565&nbsp;S</div></a></li>
      <li class='unused-standard'><div>566&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s567'><div>567&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s568'><div>568&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s569'><div>569&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s570'><div>570&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s571'><div>571&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s572'><div>572&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s573'><div>573&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s574'><div>574&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s575'><div>575&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s576'><div>576&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s577'><div>577&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s578'><div>578&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s579'><div>579&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s580'><div>580&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s581'><div>581&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s582'><div>582&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s583'><div>583&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s584'><div>584&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s585'><div>585&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s586'><div>586&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s587'><div>587&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s588'><div>588&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s589'><div>589&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s590'><div>590&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s591'><div>591&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s592'><div>592&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s593'><div>593&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s594'><div>594&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s595'><div>595&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s596'><div>596&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s597'><div>597&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s598'><div>598&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s599'><div>599&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s600'><div>600&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9994;'>
        <div class='standard-range'><div class='right-align-standard'>601&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>639&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s601'><div>601&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s602'><div>602&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s603'><div>603&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s604'><div>604&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s605'><div>605&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s606'><div>606&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s607'><div>607&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s608'><div>608&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s609'><div>609&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s610'><div>610&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s611'><div>611&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s612'><div>612&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s613'><div>613&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s614'><div>614&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s615'><div>615&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s616'><div>616&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s617'><div>617&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s618'><div>618&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s619'><div>619&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s620'><div>620&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s621'><div>621&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s622'><div>622&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s623'><div>623&nbsp;S</div></a></li>
      <li class='unused-standard'><div>624&nbsp;S</div></li>
      <li class='unused-standard'><div>625&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s626'><div>626&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s627'><div>627&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s628'><div>628&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s629'><div>629&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s630'><div>630&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s631'><div>631&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s632'><div>632&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s633'><div>633&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s634'><div>634&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s635'><div>635&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s636'><div>636&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s637'><div>637&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s638'><div>638&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s639'><div>639&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9998;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         C Standards
    <ul class='l-3 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_c1'><div>1&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c2'><div>2&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c3'><div>3&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c4'><div>4&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c5'><div>5&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c6'><div>6&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c7'><div>7&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c8'><div>8&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c9'><div>9&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c10'><div>10&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c11'><div>11&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c12'><div>12&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c13'><div>13&nbsp;C</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9997;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         D Standards
    <ul class='l-3'>
      <li style='z-index:10000;'>
        <div class='standard-range'><div class='right-align-standard'>1&nbsp;D</div><div class='center'>to</div><div class='left-align-standard'>100&nbsp;D</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_d1'><div>1&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d2'><div>2&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d3'><div>3&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d4'><div>4&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d5'><div>5&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d6'><div>6&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d7'><div>7&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d8'><div>8&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d9'><div>9&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d10'><div>10&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d11'><div>11&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d12'><div>12&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d13'><div>13&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d14'><div>14&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d15'><div>15&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d16'><div>16&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d17'><div>17&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d18'><div>18&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d19'><div>19&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d20'><div>20&nbsp;D</div></a></li>
      <li class='unused-standard'><div>21&nbsp;D</div></li>
      <li class='standard'><a href='standards.htm#standard_d22'><div>22&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d23'><div>23&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d24'><div>24&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d25'><div>25&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d26'><div>26&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d27'><div>27&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d28'><div>28&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d29'><div>29&nbsp;D</div></a></li>
      <li class='unused-standard'><div>30&nbsp;D</div></li>
      <li class='unused-standard'><div>31&nbsp;D</div></li>
      <li class='unused-standard'><div>32&nbsp;D</div></li>
      <li class='standard'><a href='standards.htm#standard_d33'><div>33&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d34'><div>34&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d35'><div>35&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d36'><div>36&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d37'><div>37&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d38'><div>38&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d39'><div>39&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d40'><div>40&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d41'><div>41&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d42'><div>42&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d43'><div>43&nbsp;D</div></a></li>
      <li class='unused-standard'><div>44&nbsp;D</div></li>
      <li class='standard'><a href='standards.htm#standard_d45'><div>45&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d46'><div>46&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d47'><div>47&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d48'><div>48&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d49'><div>49&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d50'><div>50&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d51'><div>51&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d52'><div>52&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d53'><div>53&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d54'><div>54&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d55'><div>55&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d56'><div>56&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d57'><div>57&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d58'><div>58&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d59'><div>59&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d60'><div>60&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d61'><div>61&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d62'><div>62&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d63'><div>63&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d64'><div>64&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d65'><div>65&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d66'><div>66&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d67'><div>67&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d68'><div>68&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d69'><div>69&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d70'><div>70&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d71'><div>71&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d72'><div>72&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d73'><div>73&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d74'><div>74&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d75'><div>75&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d76'><div>76&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d77'><div>77&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d78'><div>78&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d79'><div>79&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d80'><div>80&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d81'><div>81&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d82'><div>82&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d83'><div>83&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d84'><div>84&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d85'><div>85&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d86'><div>86&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d87'><div>87&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d88'><div>88&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d89'><div>89&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d90'><div>90&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d91'><div>91&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d92'><div>92&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d93'><div>93&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d94'><div>94&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d95'><div>95&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d96'><div>96&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d97'><div>97&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d98'><div>98&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d99'><div>99&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d100'><div>100&nbsp;D</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9999;'>
        <div class='standard-range'><div class='right-align-standard'>101&nbsp;D</div><div class='center'>to</div><div class='left-align-standard'>113&nbsp;D</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_d101'><div>101&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d102'><div>102&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d103'><div>103&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d104'><div>104&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d105'><div>105&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d106'><div>106&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d107'><div>107&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d108'><div>108&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d109'><div>109&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d110'><div>110&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d111'><div>111&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d112'><div>112&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d113'><div>113&nbsp;D</div></a></li>
    </ul> <!-- l-4 -->
      </li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9996;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         X Standards
    <ul class='l-3 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_x1'><div>1&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x2'><div>2&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x3'><div>3&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x4'><div>4&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x5'><div>5&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x6'><div>6&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x7'><div>7&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x8'><div>8&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x9'><div>9&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x10'><div>10&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x11'><div>11&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x12'><div>12&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x13'><div>13&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x14'><div>14&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x15'><div>15&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x16'><div>16&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x17'><div>17&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x18'><div>18&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x19'><div>19&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x20'><div>20&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x21'><div>21&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x22'><div>22&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x23'><div>23&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x24'><div>24&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x25'><div>25&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x26'><div>26&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x27'><div>27&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x28'><div>28&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x29'><div>29&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x30'><div>30&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x31'><div>31&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x32'><div>32&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x33'><div>33&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x34'><div>34&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x35'><div>35&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x36'><div>36&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x37'><div>37&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x38'><div>38&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x39'><div>39&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x40'><div>40&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x41'><div>41&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x42'><div>42&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x43'><div>43&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x44'><div>44&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x45'><div>45&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x46'><div>46&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x47'><div>47&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x48'><div>48&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x49'><div>49&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x50'><div>50&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x51'><div>51&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x52'><div>52&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x53'><div>53&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x54'><div>54&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x55'><div>55&nbsp;X</div></a></li>
      <li class='unused-standard'><div>56&nbsp;X</div></li>
      <li class='standard'><a href='standards.htm#standard_x57'><div>57&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x58'><div>58&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x59'><div>59&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x60'><div>60&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x61'><div>61&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x62'><div>62&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x63'><div>63&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x64'><div>64&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x65'><div>65&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x66'><div>66&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x67'><div>67&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x68'><div>68&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x69'><div>69&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x70'><div>70&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x71'><div>71&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x72'><div>72&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x73'><div>73&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x74'><div>74&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x75'><div>75&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x76'><div>76&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x77'><div>77&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x78'><div>78&nbsp;X</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9995;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         I Standards
    <ul class='l-3 h-menu h-standards' style='width:3.75em;'>
      <li class='standard'><a href='standards.htm#standard_i1'><div>1&nbsp;I</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9994;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         Q Standards
    <ul class='l-3 h-menu h-standards' style='width:18.75em;'>
      <li class='standard'><a href='standards.htm#standard_q1'><div>1&nbsp;Q</div></a></li>
      <li class='standard'><a href='standards.htm#standard_q2'><div>2&nbsp;Q</div></a></li>
      <li class='standard'><a href='standards.htm#standard_q3'><div>3&nbsp;Q</div></a></li>
      <li class='standard'><a href='standards.htm#standard_q4'><div>4&nbsp;Q</div></a></li>
      <li class='standard'><a href='standards.htm#standard_q5'><div>5&nbsp;Q</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9993;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         U Standards
    <ul class='l-3 h-menu h-standards' style='width:11.25em;'>
      <li class='standard'><a href='standards.htm#standard_u1'><div>1&nbsp;U</div></a></li>
      <li class='standard'><a href='standards.htm#standard_u2'><div>2&nbsp;U</div></a></li>
      <li class='standard'><a href='standards.htm#standard_u3'><div>3&nbsp;U</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9992;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         J Standards
    <ul class='l-3 h-menu h-standards' style='width:11.25em;'>
      <li class='standard'><a href='standards.htm#standard_j1'><div>1&nbsp;J</div></a></li>
      <li class='standard'><a href='standards.htm#standard_j2'><div>2&nbsp;J</div></a></li>
      <li class='standard'><a href='standards.htm#standard_j3'><div>3&nbsp;J</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9991;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         Z Standards
    <ul class='l-3 h-menu h-standards' style='width:3.75em;'>
      <li class='standard'><a href='standards.htm#standard_z1'><div>1&nbsp;Z</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9990;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         H Standards
    <ul class='l-3 h-menu h-standards' style='width:30em;'>
      <li class='standard'><a href='standards.htm#standard_h1'><div>1&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h2'><div>2&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h3'><div>3&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h4'><div>4&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h5'><div>5&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h6'><div>6&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h7'><div>7&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h8'><div>8&nbsp;H</div></a></li>
    </ul> <!-- l-3 -->
       </li>
    <li class='sep' style='z-index:9999;' />
        <li style='z-index:9989;'>
          <!-- No <a> tag round content means item stays lit when in popup -->
          By Keyword
          <ul class='l-3 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_decl'>Decl</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_class'>Class</a></div>
          <ul class='l-5 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_inherit'>Inherit</a></div>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_op'>Op</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_fn'>Fn</a></div>
          <ul class='l-5 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_fnpar'>Fnpar</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9998;'>
              <div class='standard-range'><a href='keywords.htm#keyword_id'>Id</a></div>
            </li>
            <li style='z-index:9997;'>
              <div class='standard-range'><a href='keywords.htm#keyword_obj'>Obj</a></div>
            </li>
            <li style='z-index:9996;'>
              <div class='standard-range'><a href='keywords.htm#keyword_template'>Template</a></div>
            </li>
            <li style='z-index:9995;'>
              <div class='standard-range'><a href='keywords.htm#keyword_type'>Type</a></div>
          <ul class='l-5 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_struct'>Struct</a></div>
            </li>
          </ul>
            </li>
          </ul>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_exp'>Exp</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_arr'>Arr</a></div>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_conv'>Conv</a></div>
            </li>
            <li style='z-index:9998;'>
              <div class='standard-range'><a href='keywords.htm#keyword_ptr'>Ptr</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9998;'>
              <div class='standard-range'><a href='keywords.htm#keyword_file'>File</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_namespace'>Namespace</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9997;'>
              <div class='standard-range'><a href='keywords.htm#keyword_flow'>Flow</a></div>
            </li>
            <li style='z-index:9996;'>
              <div class='standard-range'><a href='keywords.htm#keyword_lib'>Lib</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_io'>Io</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9995;'>
              <div class='standard-range'><a href='keywords.htm#keyword_lit'>Lit</a></div>
            </li>
            <li style='z-index:9994;'>
              <div class='standard-range'><a href='keywords.htm#keyword_metric'>Metric</a></div>
            </li>
            <li style='z-index:9993;'>
              <div class='standard-range'><a href='keywords.htm#keyword_misc'>Misc</a></div>
            </li>
            <li style='z-index:9992;'>
              <div class='standard-range'><a href='keywords.htm#keyword_pre'>Pre</a></div>
            </li>
            <li style='z-index:9991;'>
              <div class='standard-range'><a href='keywords.htm#keyword_stmt'>Stmt</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_cond'>Cond</a></div>
          <ul class='l-5 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_if'>If</a></div>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_switch'>Switch</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_loop'>Loop</a></div>
            </li>
            <li style='z-index:9998;'>
              <div class='standard-range'><a href='keywords.htm#keyword_jmp'>Jmp</a></div>
            </li>
            <li style='z-index:9997;'>
              <div class='standard-range'><a href='keywords.htm#keyword_except'>Except</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9990;'>
              <div class='standard-range'><a href='keywords.htm#keyword_style'>Style</a></div>
            </li>
          </ul>
        </li>
        <li style='z-index:9988;'>
          <!-- No <a> tag round content means item stays lit when in popup -->
          By Classification
          <ul class='l-3 h-menu h-keywords'>
    <li><a href='classifications.htm#classification_allocation'>Allocation</a></li>
    <li><a href='classifications.htm#classification_complexity'>Complexity</a></li>
    <li><a href='classifications.htm#classification_dependability'>Dependability</a></li>
    <li><a href='classifications.htm#classification_fault'>Fault</a></li>
    <li><a href='classifications.htm#classification_maintainability'>Maintainability</a></li>
    <li><a href='classifications.htm#classification_portability'>Portability</a></li>
    <li><a href='classifications.htm#classification_style'>Style</a></li>
    <li><a href='classifications.htm#classification_testability'>Testability</a></li>
    <li><a href='classifications.htm#classification_vulnerabilities'>Vulnerabilities</a></li>
          </ul>
        </li>
    <li><a href='standard_flags.htm'>Std Modifiers</a></li>
    <li class='sep' style='z-index:9999;' />
        <li style='z-index:9987;'>
          <!-- No <a> tag round content means item stays lit when in popup -->
          Models
          <ul class='l-3 h-menu h-models'>
    <li><a href='cast_model.htm'>CAST</a></li>
    <li><a href='cert-c_model.htm'>CERT-C</a></li>
    <li><a href='cmse_model.htm'>CMSE</a></li>
    <li><a href='conform_model.htm'>CONFORM</a></li>
    <li><a href='cwe_model.htm'>CWE</a></li>
    <li><a href='customer_sample_model.htm'>Customer Sample</a></li>
    <li><a href='dera_model.htm'>DERA</a></li>
    <li><a href='eads-c_model.htm'>EADS-C</a></li>
    <li><a href='eads-cpp_model.htm'>EADS-C++</a></li>
    <li><a href='fsb582-c_model.htm'>FSB582-C</a></li>
    <li><a href='fsb582-cpp_model.htm'>FSB582-C++</a></li>
    <li><a href='gjb_model.htm'>GJB</a></li>
    <li><a href='hicpp_model.htm'>HIC++</a></li>
    <li><a href='his_model.htm'>HIS</a></li>
    <li><a href='jpl_model.htm'>JPL</a></li>
    <li><a href='jsf++_av_model.htm'>JSF++ AV</a></li>
    <li><a href='lmtcp_model.htm'>LMTCP</a></li>
    <li><a href='legacy_model.htm'>Legacy</a></li>
    <li><a href='misra-ac_model.htm'>MISRA-AC</a></li>
    <li><a href='misra-cpp_2008_model.htm'>MISRA-C++:2008</a></li>
    <li><a href='misra-c_1998_model.htm'>MISRA-C:1998</a></li>
    <li><a href='misra-c_2004_model.htm'>MISRA-C:2004</a></li>
    <li><a href='misra-c_2012_model.htm'>MISRA-C:2012</a></li>
    <li><a href='netrino_model.htm'>NETRINO</a></li>
    <li><a href='runtime_model.htm'>RUNTIME</a></li>
    <li><a href='sec-c_model.htm'>SEC-C</a></li>
    <li><a href='standard_model.htm'>Standard</a></li>
    <li><a href='tbrun_requires_model.htm'>TBrun Requires</a></li>
    <li><a href='uml_model.htm'>UML</a></li>
    <li><a href='vsos_model.htm'>VSOS</a></li>
          </ul>
        </li>
      </ul>
    </li>
  </ul><!-- l-1 -->
    </div><!-- floating-menu -->
    <div class='page_title'>MISRA-C++:2008 Standards Model for C++</div>
  </div><!-- nav -->
  <div class='body'>
    <div class='body-content'>
<div class='body_block'>
  <div class='title'>Acknowledgements</div>
  <p>Extracts from "MISRA C++:2008 Guidelines for the use of the C++ language in critical systems" &copy; MISRA</p>
  <div class='title'>Compliance Matrix</div>
  <p>A compliance matrix for the MISRA-C++:2008 standards model is available in the Microsoft Excel XML file <i>standards_info/compliance/misra-cpp_2008_compliance.xml</i>, which may be found relative to the LDRA tool suite installation directory.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-1-1' name='rule_misra-c%2B%2B%3A2008_0-1-1'><div class='rule'><div class='id'>0-1-1<br/><span>Required</span></div></div></a><div class='headline'>A project shall not contain unreachable code.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>1&nbsp;J</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_j1'>Unreachable Code found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-1-2' name='rule_misra-c%2B%2B%3A2008_0-1-2'><div class='rule'><div class='id'>0-1-2<br/><span>Required</span></div></div></a><div class='headline'>A project shall not contain infeasible paths.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>139&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s139'>Construct leads to infeasible code.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-1-3' name='rule_misra-c%2B%2B%3A2008_0-1-3'><div class='rule'><div class='id'>0-1-3<br/><span>Required</span></div></div></a><div class='headline'>A project shall not contain unused variables.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>94&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d94'>Named variable declared but not used in code.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-1-4' name='rule_misra-c%2B%2B%3A2008_0-1-4'><div class='rule'><div class='id'>0-1-4<br/><span>Required</span></div></div></a><div class='headline'>A project shall not contain non-volatile POD variables having only one use.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>3&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x3'>Variable has only one use.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-1-5' name='rule_misra-c%2B%2B%3A2008_0-1-5'><div class='rule'><div class='id'>0-1-5<br/><span>Required</span></div></div></a><div class='headline'>A project shall not contain unused type declarations.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>413&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s413'>User type declared but not used in code analysed.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_284'>284</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-1-6' name='rule_misra-c%2B%2B%3A2008_0-1-6'><div class='rule'><div class='id'>0-1-6<br/><span>Required</span></div></div></a><div class='headline'>A project shall not contain instances of non-volatile variables being given values that are never subsequently used.</div></div><p>LDRA Associated MISRA-C++:2008 0-1-6, 0-1-9</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>70&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d70'>DU anomaly, variable value is not used.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>560&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s560'>Scope of variable could be reduced.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-1-7' name='rule_misra-c%2B%2B%3A2008_0-1-7'><div class='rule'><div class='id'>0-1-7<br/><span>Required</span></div></div></a><div class='headline'>The value returned by a function having a non-void return type that is not an overloaded operator shall always be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>382&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s382'>(void) missing for discarded return value.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_383'>383</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-1-8' name='rule_misra-c%2B%2B%3A2008_0-1-8'><div class='rule'><div class='id'>0-1-8<br/><span>Required</span></div></div></a><div class='headline'>All functions with void return type shall have external side effect(s).</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>65&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d65'>Void function has no side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-1-9' name='rule_misra-c%2B%2B%3A2008_0-1-9'><div class='rule'><div class='id'>0-1-9<br/><span>Required</span></div></div></a><div class='headline'>There shall be no dead code.</div></div><p>LDRA Associated MISRA-C++:2008 0-1-6, 0-1-9</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>70&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d70'>DU anomaly, variable value is not used.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-1-10' name='rule_misra-c%2B%2B%3A2008_0-1-10'><div class='rule'><div class='id'>0-1-10<br/><span>Required</span></div></div></a><div class='headline'>Every defined function shall be called at least once.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>76&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d76'>Procedure is not called or referenced in code analysed.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>2&nbsp;U</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_u2'>Procedure not called anywhere in system.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-1-11' name='rule_misra-c%2B%2B%3A2008_0-1-11'><div class='rule'><div class='id'>0-1-11<br/><span>Required</span></div></div></a><div class='headline'>There shall be no unused parameters (named or unnamed) in non-virtual functions.</div></div><p>LDRA Associated MISRA-C++:2008 0-1-11, 0-1-12</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>1&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d1'>Unused procedure parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>15&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d15'>Unused procedural parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-1-12' name='rule_misra-c%2B%2B%3A2008_0-1-12'><div class='rule'><div class='id'>0-1-12<br/><span>Required</span></div></div></a><div class='headline'>There shall be no unused parameters (named or unnamed) in the set of parameters for a virtual function and all the functions that override it.</div></div><p>LDRA Associated MISRA-C++:2008 0-1-11, 0-1-12</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>1&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d1'>Unused procedure parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>15&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d15'>Unused procedural parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-2-1' name='rule_misra-c%2B%2B%3A2008_0-2-1'><div class='rule'><div class='id'>0-2-1<br/><span>Required</span></div></div></a><div class='headline'>An object shall not be assigned to an overlapping object.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>480&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s480'>String function params access same variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>545&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s545'>Assignment of overlapping storage.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-3-1' name='rule_misra-c%2B%2B%3A2008_0-3-1'><div class='rule'><div class='id'>0-3-1<br/><span>Document</span></div></div></a><div class='headline'>Minimization of run-time failures shall be ensured by the use of at least one of: (a) static analysis tools/techniques; (b) dynamic analysis tools/techniques; (c) explicit coding of checks to handle run-time faults.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>43&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d43'>Divide by 0 found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>248&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s248'>Divide by zero in preprocessor directive.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-3-2' name='rule_misra-c%2B%2B%3A2008_0-3-2'><div class='rule'><div class='id'>0-3-2<br/><span>Required</span></div></div></a><div class='headline'>If a function generates error information, then that error information shall be tested.</div></div><p>Automated detection of this violation is not possible as the tool cannot determine whether a data item represents error information or not. A violation of this type, however, is likely to result in a dataflow anomaly whereby a variable is assigned a value (defined) but not subsequently used.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-4-1' name='rule_misra-c%2B%2B%3A2008_0-4-1'><div class='rule'><div class='id'>0-4-1<br/><span>Document</span></div></div></a><div class='headline'>Use of scaled-integer or fixed-point arithmetic shall be documented.</div></div><p>Document rules must be treated as Required, and apply whenever the associated feature is used within code. As the requirement is typically to document and/or adopt a particular policy it cannot be enforced by the tool.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-4-2' name='rule_misra-c%2B%2B%3A2008_0-4-2'><div class='rule'><div class='id'>0-4-2<br/><span>Document</span></div></div></a><div class='headline'>Use of floating-point arithmetic shall be documented.</div></div><p>Document rules must be treated as Required, and apply whenever the associated feature is used within code. As the requirement is typically to document and/or adopt a particular policy it cannot be enforced by the tool.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_0-4-3' name='rule_misra-c%2B%2B%3A2008_0-4-3'><div class='rule'><div class='id'>0-4-3<br/><span>Document</span></div></div></a><div class='headline'>Floating-point implementations shall comply with a defined floating-point standard.</div></div><p>Document rules must be treated as Required, and apply whenever the associated feature is used within code. As the requirement is typically to document and/or adopt a particular policy it cannot be enforced by the tool.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_1-0-1' name='rule_misra-c%2B%2B%3A2008_1-0-1'><div class='rule'><div class='id'>1-0-1<br/><span>Required</span></div></div></a><div class='headline'>All code shall conform to ISO/IEC 14882:2003 &quot;The C++ Standard Incorporating Technical Corrigendum 1&quot;.</div></div><p>The analysis assumes that the code has already been successfully compiled using a conforming compiler.The standards mapped to this rule protect from the following constraint errors, which have been known to go undetected by some compilers.</p>
<table><tr><th>    Standard                       </th><td> C++ Section Reference </td></tr>
<tr><td> <a href='standards.htm#standard_s145'>145 S</a>  </td><td> 16 </td></tr>
<tr><td> <a href='standards.htm#standard_s404'>404 S</a>  </td><td> 8.5.1 </td></tr>
<tr><td> <a href='standards.htm#standard_s481'>481 S</a>  </td><td> 9.2 </td></tr>
<tr><td> <a href='standards.htm#standard_s580'>580 S</a>  </td><td> 16.3 </td></tr>
<tr><td> <a href='standards.htm#standard_s615'>615 S</a>  </td><td> 5.16 </td></tr>
</table>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>145&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s145'>#if has invalid expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>404&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s404'>Array initialisation has too many items.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_399'>399</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>481&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s481'>Array with no bounds in struct.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>580&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s580'>Macro redefinition without using #undef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>615&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s615'>Conditional operator has incompatible types.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_1-0-2' name='rule_misra-c%2B%2B%3A2008_1-0-2'><div class='rule'><div class='id'>1-0-2<br/><span>Document</span></div></div></a><div class='headline'>Multiple compilers shall only be used if they have a common, defined interface.</div></div><p>Document rules must be treated as Required, and apply whenever the associated feature is used within code. As the requirement is typically to document and/or adopt a particular policy it cannot be enforced by the tool.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_1-0-3' name='rule_misra-c%2B%2B%3A2008_1-0-3'><div class='rule'><div class='id'>1-0-3<br/><span>Document</span></div></div></a><div class='headline'>The implementation of integer division in the chosen compiler shall be determined and documented.</div></div><p>Document rules must be treated as Required, and apply whenever the associated feature is used within code. As the requirement is typically to document and/or adopt a particular policy it cannot be enforced by the tool.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-2-1' name='rule_misra-c%2B%2B%3A2008_2-2-1'><div class='rule'><div class='id'>2-2-1<br/><span>Document</span></div></div></a><div class='headline'>The character set and the corresponding encoding shall be documented.</div></div><p>Document rules must be treated as Required, and apply whenever the associated feature is used within code. As the requirement is typically to document and/or adopt a particular policy it cannot be enforced by the tool.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-3-1' name='rule_misra-c%2B%2B%3A2008_2-3-1'><div class='rule'><div class='id'>2-3-1<br/><span>Required</span></div></div></a><div class='headline'>Trigraphs shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>81&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s81'>Use of trigraph.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-5-1' name='rule_misra-c%2B%2B%3A2008_2-5-1'><div class='rule'><div class='id'>2-5-1<br/><span>Advisory</span></div></div></a><div class='headline'>Digraphs should not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>295&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s295'>Use of digraph.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-7-1' name='rule_misra-c%2B%2B%3A2008_2-7-1'><div class='rule'><div class='id'>2-7-1<br/><span>Required</span></div></div></a><div class='headline'>The character sequence /* shall not be used within a C-style comment.</div></div><p>119 S is issued if /* appears within either a /* or a // style comment.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>119&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s119'>Nested comment found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_413'>413</a> = 1, <a href='standard_flags.htm#flag_434'>434</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-7-2' name='rule_misra-c%2B%2B%3A2008_2-7-2'><div class='rule'><div class='id'>2-7-2<br/><span>Required</span></div></div></a><div class='headline'>Sections of code shall not be &quot;commented out&quot; using C-style comments.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>302&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s302'>Comment possibly contains code.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-7-3' name='rule_misra-c%2B%2B%3A2008_2-7-3'><div class='rule'><div class='id'>2-7-3<br/><span>Advisory</span></div></div></a><div class='headline'>Sections of code should not be &quot;commented out&quot; using C++ comments.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>302&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s302'>Comment possibly contains code.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-10-1' name='rule_misra-c%2B%2B%3A2008_2-10-1'><div class='rule'><div class='id'>2-10-1<br/><span>Required</span></div></div></a><div class='headline'>Different identifiers shall be typographically unambiguous.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>217&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s217'>Names only differ by case.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>67&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x67'>Identifier is typographically ambiguous.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-10-2' name='rule_misra-c%2B%2B%3A2008_2-10-2'><div class='rule'><div class='id'>2-10-2<br/><span>Required</span></div></div></a><div class='headline'>Identifiers declared in an inner scope shall not hide an identifier declared in an outer scope.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>128&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s128'>Parameter has same name as global variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>131&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s131'>Name reused in inner scope.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-10-3' name='rule_misra-c%2B%2B%3A2008_2-10-3'><div class='rule'><div class='id'>2-10-3<br/><span>Required</span></div></div></a><div class='headline'>A typedef name (including qualification, if any) shall be a unique identifier.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>112&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s112'>Typedef name redeclared.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_417'>417</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>16&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x16'>Identifier reuse: typedef vs variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>17&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x17'>Identifier reuse: typedef vs label (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>18&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x18'>Identifier reuse: typedef vs typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>19&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x19'>Identifier reuse: typedef vs procedure parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>20&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x20'>Identifier reuse: persistent var vs typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>21&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x21'>Identifier reuse: typedef vs macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>22&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x22'>Identifier reuse: typedef vs component.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>23&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x23'>Identifier reuse: typedef vs enum constant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>24&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x24'>Identifier reuse: typedef vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-10-4' name='rule_misra-c%2B%2B%3A2008_2-10-4'><div class='rule'><div class='id'>2-10-4<br/><span>Required</span></div></div></a><div class='headline'>A class, union or enum name (including qualification, if any) shall be a unique identifier.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>552&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s552'>Class, enum, struct or union name reused.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 1</td>    </tr>
    <tr>    <td class='from'>4&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x4'>Identifier reuse: struct/union tag repeated.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>5&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x5'>Identifier reuse: struct vs union.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>6&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x6'>Identifier reuse: struct/union tag vs enum tag.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>7&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x7'>Identifier reuse: tag vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>8&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x8'>Identifier reuse: tag vs procedure parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>9&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x9'>Identifier reuse: tag vs variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>10&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x10'>Identifier reuse: tag vs label (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>11&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x11'>Identifier reuse: tag vs typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>12&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x12'>Identifier reuse: tag vs macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>13&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x13'>Identifier reuse: tag vs component.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>14&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x14'>Identifier reuse: tag vs enum constant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>15&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x15'>Identifier reuse: persistent var vs tag.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-10-5' name='rule_misra-c%2B%2B%3A2008_2-10-5'><div class='rule'><div class='id'>2-10-5<br/><span>Advisory</span></div></div></a><div class='headline'>The identifier name of a non-member object or function with static storage duration should not be reused.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>7&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x7'>Identifier reuse: tag vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>15&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x15'>Identifier reuse: persistent var vs tag.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>20&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x20'>Identifier reuse: persistent var vs typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>24&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x24'>Identifier reuse: typedef vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>25&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x25'>Identifier reuse: procedure vs procedure param.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>26&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x26'>Identifier reuse: persistent var vs label (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>27&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x27'>Identifier reuse: persist var vs persist var.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>28&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x28'>Identifier reuse: persistent var vs var.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>29&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x29'>Identifier reuse: persistent var vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>30&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x30'>Identifier reuse: persistent var vs proc param.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>32&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x32'>Identifier reuse: procedure vs var.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>33&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x33'>Identifier reuse: procedure vs label (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>34&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x34'>Identifier reuse: proc vs macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>35&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x35'>Identifier reuse: proc vs component.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>36&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x36'>Identifier reuse: proc vs enum constant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>37&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x37'>Identifier reuse: persistent var vs macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>38&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x38'>Identifier reuse: persistent var vs component.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>39&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x39'>Identifier reuse: persistent var vs enum constant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-10-6' name='rule_misra-c%2B%2B%3A2008_2-10-6'><div class='rule'><div class='id'>2-10-6<br/><span>Required</span></div></div></a><div class='headline'>If an identifier refers to a type, it shall not also refer to an object or a function in the same scope.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>9&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x9'>Identifier reuse: tag vs variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>11&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x11'>Identifier reuse: tag vs typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>24&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x24'>Identifier reuse: typedef vs procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-13-1' name='rule_misra-c%2B%2B%3A2008_2-13-1'><div class='rule'><div class='id'>2-13-1<br/><span>Required</span></div></div></a><div class='headline'>Only those escape sequences that are defined in ISO/IEC14882:2003 shall be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>176&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s176'>Non standard escape sequence    in source.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-13-2' name='rule_misra-c%2B%2B%3A2008_2-13-2'><div class='rule'><div class='id'>2-13-2<br/><span>Required</span></div></div></a><div class='headline'>Octal constants (other than zero) and octal escape sequences (other than &quot;\0&quot;) shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>83&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s83'>Octal number found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>376&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s376'>Use of octal escape sequence.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-13-3' name='rule_misra-c%2B%2B%3A2008_2-13-3'><div class='rule'><div class='id'>2-13-3<br/><span>Required</span></div></div></a><div class='headline'>A &quot;U&quot; suffix shall be applied to all octal or hexadecimal integer literals of unsigned type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>550&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s550'>Unsuffixed hex or octal is unsigned, add U.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-13-4' name='rule_misra-c%2B%2B%3A2008_2-13-4'><div class='rule'><div class='id'>2-13-4<br/><span>Required</span></div></div></a><div class='headline'>Literal suffixes shall be upper case.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>252&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s252'>Lower case suffix to literal number.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_418'>418</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_2-13-5' name='rule_misra-c%2B%2B%3A2008_2-13-5'><div class='rule'><div class='id'>2-13-5<br/><span>Required</span></div></div></a><div class='headline'>Narrow and wide string literals shall not be concatenated.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>450&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s450'>Wide string and string concatenated.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-1-1' name='rule_misra-c%2B%2B%3A2008_3-1-1'><div class='rule'><div class='id'>3-1-1<br/><span>Required</span></div></div></a><div class='headline'>It shall be possible to include any header file in multiple translation units without violating the One Definition Rule.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>286&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s286'>Functions defined in header file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_238'>238</a> = 1</td>    </tr>
    <tr>    <td class='from'>287&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s287'>Variable definition in header file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_250'>250</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-1-2' name='rule_misra-c%2B%2B%3A2008_3-1-2'><div class='rule'><div class='id'>3-1-2<br/><span>Required</span></div></div></a><div class='headline'>Functions shall not be declared at block scope.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>296&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s296'>Function declared at block scope.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-1-3' name='rule_misra-c%2B%2B%3A2008_3-1-3'><div class='rule'><div class='id'>3-1-3<br/><span>Required</span></div></div></a><div class='headline'>When an array is declared, its size shall either be stated explicitly or defined implicitly by initialization.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>127&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s127'>Array has no bounds specified.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_285'>285</a> = 0 (Default), <a href='standard_flags.htm#flag_286'>286</a> = 0 (Default), <a href='standard_flags.htm#flag_426'>426</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-2-1' name='rule_misra-c%2B%2B%3A2008_3-2-1'><div class='rule'><div class='id'>3-2-1<br/><span>Required</span></div></div></a><div class='headline'>All declarations of an object or function shall have compatible types.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>1&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x1'>Declaration types do not match across a system.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>62&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x62'>Function prototype/defn return type mismatch (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-2-2' name='rule_misra-c%2B%2B%3A2008_3-2-2'><div class='rule'><div class='id'>3-2-2<br/><span>Required</span></div></div></a><div class='headline'>The One Definition Rule shall not be violated.</div></div><p>LDRA Associated MISRA-C++:2008 3-2-2, 3-2-4</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>26&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d26'>Variable should be defined once in only one file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>34&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d34'>Procedure name re-used in different files.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>4&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x4'>Identifier reuse: struct/union tag repeated.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>18&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x18'>Identifier reuse: typedef vs typedef.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-2-3' name='rule_misra-c%2B%2B%3A2008_3-2-3'><div class='rule'><div class='id'>3-2-3<br/><span>Required</span></div></div></a><div class='headline'>A type, object or function that is used in multiple translation units shall be declared in one and only one file.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>60&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d60'>External object should be declared only once.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-2-4' name='rule_misra-c%2B%2B%3A2008_3-2-4'><div class='rule'><div class='id'>3-2-4<br/><span>Required</span></div></div></a><div class='headline'>An identifier with external linkage shall have exactly one definition.</div></div><p>LDRA Associated MISRA-C++:2008 3-2-2, 3-2-4</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>26&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d26'>Variable should be defined once in only one file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>33&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d33'>No real declaration for external variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>63&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d63'>No definition in system for prototyped procedure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-3-1' name='rule_misra-c%2B%2B%3A2008_3-3-1'><div class='rule'><div class='id'>3-3-1<br/><span>Required</span></div></div></a><div class='headline'>Objects or functions with external linkage shall be declared in a header file.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>27&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d27'>Variable should be declared static.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>61&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d61'>Procedure should be declared static.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>354&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s354'>Extern declaration is not in header file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-3-2' name='rule_misra-c%2B%2B%3A2008_3-3-2'><div class='rule'><div class='id'>3-3-2<br/><span>Required</span></div></div></a><div class='headline'>If a function has internal linkage then all re-declarations shall include the static storage class specifier.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>553&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s553'>Function and proto should both be static.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-4-1' name='rule_misra-c%2B%2B%3A2008_3-4-1'><div class='rule'><div class='id'>3-4-1<br/><span>Required</span></div></div></a><div class='headline'>An identifier declared to be an object or type shall be defined in a block that minimizes its visibility.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>25&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d25'>Scope of variable could be reduced.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>560&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s560'>Scope of variable could be reduced.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-9-1' name='rule_misra-c%2B%2B%3A2008_3-9-1'><div class='rule'><div class='id'>3-9-1<br/><span>Required</span></div></div></a><div class='headline'>The types used for an object, a function return type, or a function parameter shall be token-for-token identical in all declarations and re-declarations.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>102&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s102'>Function and prototype return inconsistent (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 1</td>    </tr>
    <tr>    <td class='from'>103&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s103'>Function and prototype param inconsistent (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 1</td>    </tr>
    <tr>    <td class='from'>2&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x2'>Ambiguous declaration of variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>62&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x62'>Function prototype/defn return type mismatch (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>63&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x63'>Function prototype/defn param type mismatch (MR).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-9-2' name='rule_misra-c%2B%2B%3A2008_3-9-2'><div class='rule'><div class='id'>3-9-2<br/><span>Advisory</span></div></div></a><div class='headline'>typedefs that indicate size and signedness should be used in place of the basic numerical types.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>90&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s90'>Basic type declaration used.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_219'>219</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_3-9-3' name='rule_misra-c%2B%2B%3A2008_3-9-3'><div class='rule'><div class='id'>3-9-3<br/><span>Required</span></div></div></a><div class='headline'>The underlying bit representations of floating-point values shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>345&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s345'>Bit operator with floating point operand.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>554&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s554'>Cast to an unrelated type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_4-5-1' name='rule_misra-c%2B%2B%3A2008_4-5-1'><div class='rule'><div class='id'>4-5-1<br/><span>Required</span></div></div></a><div class='headline'>Expressions with type bool shall not be used as operands to built-in operators other than the assignment operator =, the logical operators &amp;&amp;, ||, !, the equality operators == and !=, the unary &amp; operator, and the conditional operator.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>136&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s136'>Bit operator with boolean operand.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>506&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s506'>Use of boolean with relational operator.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_4-5-2' name='rule_misra-c%2B%2B%3A2008_4-5-2'><div class='rule'><div class='id'>4-5-2<br/><span>Required</span></div></div></a><div class='headline'>Expressions with type enum shall not be used as operands to built-in operators other than the subscript operator [ ], the assignment operator =, the equality operators == and !=, the unary &amp; operator, and the relational operators &lt;, &lt;=, &gt;, &gt;=.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>123&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s123'>Use of underlying enum representation value.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_4-5-3' name='rule_misra-c%2B%2B%3A2008_4-5-3'><div class='rule'><div class='id'>4-5-3<br/><span>Required</span></div></div></a><div class='headline'>Expressions with type (plain) char and wchar_t shall not be used as operands to built-in operators other than the assignment operator =, the equality operators == and !=, and the unary &amp; operator.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>329&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s329'>Operation not appropriate to plain char.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_391'>391</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_4-10-1' name='rule_misra-c%2B%2B%3A2008_4-10-1'><div class='rule'><div class='id'>4-10-1<br/><span>Required</span></div></div></a><div class='headline'>NULL shall not be used as an integer value.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>530&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s530'>NULL used in integer context.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_4-10-2' name='rule_misra-c%2B%2B%3A2008_4-10-2'><div class='rule'><div class='id'>4-10-2<br/><span>Required</span></div></div></a><div class='headline'>Literal zero (0) shall not be used as the null-pointer-constant.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>531&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s531'>Literal zero used in pointer context.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-1' name='rule_misra-c%2B%2B%3A2008_5-0-1'><div class='rule'><div class='id'>5-0-1<br/><span>Required</span></div></div></a><div class='headline'>The value of an expression shall be the same under any order of evaluation that the standard permits.</div></div><p>LDRA Associated MISRA-C++:2008 5-0-1, 5-2-10, 6-2-1</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>35&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d35'>Expression has side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>72&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d72'>Potential side effect problem in expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>74&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d74'>Potential side effect from repeated function call.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>1&nbsp;Q</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_q1'>Call has execution order dependant side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>9&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s9'>Assignment operation in expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_259'>259</a> = 0 (Default), <a href='standard_flags.htm#flag_266'>266</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>30&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s30'>Deprecated usage of ++ or -- operators found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_122'>122</a> = 1 (Default)</td>    </tr>
    <tr>    <td class='from'>134&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s134'>Volatile variable in complex expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-2' name='rule_misra-c%2B%2B%3A2008_5-0-2'><div class='rule'><div class='id'>5-0-2<br/><span>Advisory</span></div></div></a><div class='headline'>Limited dependence should be placed on C++ operator precedence rules in expressions.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>49&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s49'>Logical conjunctions need brackets.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_206'>206</a> = 1</td>    </tr>
    <tr>    <td class='from'>361&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s361'>Expression needs brackets.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_119'>119</a> = 0 (Default), <a href='standard_flags.htm#flag_264'>264</a> = 0 (Default), <a href='standard_flags.htm#flag_414'>414</a> = 0 (Default), <a href='standard_flags.htm#flag_420'>420</a> = 1, <a href='standard_flags.htm#flag_421'>421</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-3' name='rule_misra-c%2B%2B%3A2008_5-0-3'><div class='rule'><div class='id'>5-0-3<br/><span>Required</span></div></div></a><div class='headline'>A cvalue expression shall not be implicitly converted to a different underlying type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>452&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s452'>No cast for widening complex int expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-4' name='rule_misra-c%2B%2B%3A2008_5-0-4'><div class='rule'><div class='id'>5-0-4<br/><span>Required</span></div></div></a><div class='headline'>An implicit integral conversion shall not change the signedness of the underlying type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>96&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s96'>Use of mixed mode arithmetic.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : 267 = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>101&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s101'>Function return type inconsistent.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_374'>374</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>107&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s107'>Type mismatch in ternary expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>331&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s331'>Literal value requires a U suffix.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_309'>309</a> = 0 (Default), <a href='standard_flags.htm#flag_358'>358</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>434&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s434'>Signed/unsigned conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_358'>358</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-5' name='rule_misra-c%2B%2B%3A2008_5-0-5'><div class='rule'><div class='id'>5-0-5<br/><span>Required</span></div></div></a><div class='headline'>There shall be no implicit floating-integral conversions.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>101&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s101'>Function return type inconsistent.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_374'>374</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>107&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s107'>Type mismatch in ternary expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>435&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s435'>Float/integer conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-6' name='rule_misra-c%2B%2B%3A2008_5-0-6'><div class='rule'><div class='id'>5-0-6<br/><span>Required</span></div></div></a><div class='headline'>An implicit integral or floating-point conversion shall not reduce the size of the underlying type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>101&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s101'>Function return type inconsistent.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_374'>374</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>445&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s445'>Narrower float conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>446&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s446'>Narrower int conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-7' name='rule_misra-c%2B%2B%3A2008_5-0-7'><div class='rule'><div class='id'>5-0-7<br/><span>Required</span></div></div></a><div class='headline'>There shall be no explicit floating-integral conversions of a cvalue expression.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>507&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s507'>Explicit cast from integral to floating type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-8' name='rule_misra-c%2B%2B%3A2008_5-0-8'><div class='rule'><div class='id'>5-0-8<br/><span>Required</span></div></div></a><div class='headline'>An explicit integral or floating-point conversion shall not increase the size of the underlying type of a cvalue expression.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>332&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s332'>Widening cast on complex integer expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>333&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s333'>Widening cast on complex float expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-9' name='rule_misra-c%2B%2B%3A2008_5-0-9'><div class='rule'><div class='id'>5-0-9<br/><span>Required</span></div></div></a><div class='headline'>An explicit integral conversion shall not change the signedness of the underlying type of a cvalue expression.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>443&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s443'>Unsigned integral type cast to signed.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_323'>323</a> = 1, <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-10' name='rule_misra-c%2B%2B%3A2008_5-0-10'><div class='rule'><div class='id'>5-0-10<br/><span>Required</span></div></div></a><div class='headline'>If the bitwise operators ~ and &lt;&lt; are applied to an operand with an underlying type of unsigned char or unsigned short, the result shall be immediately cast to the underlying type of the operand.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>334&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s334'>No cast when ~ or &lt;&lt; applied to small types.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-11' name='rule_misra-c%2B%2B%3A2008_5-0-11'><div class='rule'><div class='id'>5-0-11<br/><span>Required</span></div></div></a><div class='headline'>The plain char type shall only be used for the storage and use of character values.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>431&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s431'>Char used instead of (un)signed char.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>432&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s432'>Inappropriate type - should be plain char.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>433&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s433'>Type conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default), <a href='standard_flags.htm#flag_441'>441</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-12' name='rule_misra-c%2B%2B%3A2008_5-0-12'><div class='rule'><div class='id'>5-0-12<br/><span>Required</span></div></div></a><div class='headline'>signed char and unsigned char type shall only be used for the storage and use of numeric values.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>431&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s431'>Char used instead of (un)signed char.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>432&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s432'>Inappropriate type - should be plain char.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>433&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s433'>Type conversion without cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_191'>191</a> = 0 (Default), <a href='standard_flags.htm#flag_441'>441</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-13' name='rule_misra-c%2B%2B%3A2008_5-0-13'><div class='rule'><div class='id'>5-0-13<br/><span>Required</span></div></div></a><div class='headline'>The condition of an if-statement and the condition of an iteration-statement shall have type bool.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>114&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s114'>Expression is not Boolean.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_386'>386</a> = 1 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-14' name='rule_misra-c%2B%2B%3A2008_5-0-14'><div class='rule'><div class='id'>5-0-14<br/><span>Required</span></div></div></a><div class='headline'>The first operand of a conditional-operator shall have type bool.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>114&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s114'>Expression is not Boolean.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_386'>386</a> = 1 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-15' name='rule_misra-c%2B%2B%3A2008_5-0-15'><div class='rule'><div class='id'>5-0-15<br/><span>Required</span></div></div></a><div class='headline'>Array indexing shall be the only form of pointer arithmetic.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>436&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s436'>Declaration does not specify an array.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_400'>400</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>567&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s567'>Pointer arithmetic is not on array.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_436'>436</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-16' name='rule_misra-c%2B%2B%3A2008_5-0-16'><div class='rule'><div class='id'>5-0-16<br/><span>Required</span></div></div></a><div class='headline'>A pointer operand and any pointer resulting from pointer arithmetic using that operand shall both address elements of the same array.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>47&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s47'>Array bound exceeded.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>436&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s436'>Declaration does not specify an array.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_400'>400</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-17' name='rule_misra-c%2B%2B%3A2008_5-0-17'><div class='rule'><div class='id'>5-0-17<br/><span>Required</span></div></div></a><div class='headline'>Subtraction between pointers shall only be applied to pointers that address elements of the same array.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>438&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s438'>Pointer subtraction not addressing one array.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-18' name='rule_misra-c%2B%2B%3A2008_5-0-18'><div class='rule'><div class='id'>5-0-18<br/><span>Required</span></div></div></a><div class='headline'>&gt;, &gt;=, &lt;, &lt;= shall not be applied to objects of pointer type, except where they point to the same array.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>437&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s437'>&lt; &gt; &lt;= &gt;= used on different object pointers.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-19' name='rule_misra-c%2B%2B%3A2008_5-0-19'><div class='rule'><div class='id'>5-0-19<br/><span>Required</span></div></div></a><div class='headline'>The declaration of objects shall contain no more than two levels of pointer indirection.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>80&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s80'>Pointer indirection exceeds 2 levels.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-20' name='rule_misra-c%2B%2B%3A2008_5-0-20'><div class='rule'><div class='id'>5-0-20<br/><span>Required</span></div></div></a><div class='headline'>Non-constant operands to a binary bitwise operator shall have the same underlying type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>535&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s535'>Binary bitwise op with different types.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-0-21' name='rule_misra-c%2B%2B%3A2008_5-0-21'><div class='rule'><div class='id'>5-0-21<br/><span>Required</span></div></div></a><div class='headline'>Bitwise operators shall only be applied to operands of unsigned underlying type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>120&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s120'>Use of bit operator on signed type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-2-1' name='rule_misra-c%2B%2B%3A2008_5-2-1'><div class='rule'><div class='id'>5-2-1<br/><span>Required</span></div></div></a><div class='headline'>Each operand of a logical &amp;&amp; or || shall be a postfix-expression.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>49&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s49'>Logical conjunctions need brackets.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_206'>206</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-2-2' name='rule_misra-c%2B%2B%3A2008_5-2-2'><div class='rule'><div class='id'>5-2-2<br/><span>Required</span></div></div></a><div class='headline'>A pointer to a virtual base class shall only be cast to a pointer to a derived class by means of dynamic_cast.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>448&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s448'>Base class pointer cast to derived class.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-2-3' name='rule_misra-c%2B%2B%3A2008_5-2-3'><div class='rule'><div class='id'>5-2-3<br/><span>Advisory</span></div></div></a><div class='headline'>Casts from a base class to a derived class should not be performed on polymorphic types.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>551&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s551'>Cast from base to derived for polymorphic type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-2-4' name='rule_misra-c%2B%2B%3A2008_5-2-4'><div class='rule'><div class='id'>5-2-4<br/><span>Required</span></div></div></a><div class='headline'>C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>306&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s306'>Use of C type cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-2-5' name='rule_misra-c%2B%2B%3A2008_5-2-5'><div class='rule'><div class='id'>5-2-5<br/><span>Required</span></div></div></a><div class='headline'>A cast shall not remove any const or volatile qualification from the type of a pointer or reference.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>203&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s203'>Cast on a constant value.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_390'>390</a> = 1</td>    </tr>
    <tr>    <td class='from'>242&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s242'>Use of const_cast.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>344&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s344'>Cast on volatile value.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_395'>395</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-2-6' name='rule_misra-c%2B%2B%3A2008_5-2-6'><div class='rule'><div class='id'>5-2-6<br/><span>Required</span></div></div></a><div class='headline'>A cast shall not convert a pointer to a function to any other pointer type, including a pointer to function type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>606&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s606'>Cast involving function pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_398'>398</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-2-7' name='rule_misra-c%2B%2B%3A2008_5-2-7'><div class='rule'><div class='id'>5-2-7<br/><span>Required</span></div></div></a><div class='headline'>An object with pointer type shall not be converted to an unrelated pointer type, either directly or indirectly.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>94&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s94'>Casting operation on a pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_396'>396</a> = 1, <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default), <a href='standard_flags.htm#flag_439'>439</a> = 0 (Default), <a href='standard_flags.htm#flag_440'>440</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>95&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s95'>Casting operation to a pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_381'>381</a> = 0 (Default), <a href='standard_flags.htm#flag_396'>396</a> = 0 (Default), <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default), <a href='standard_flags.htm#flag_440'>440</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>554&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s554'>Cast to an unrelated type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-2-8' name='rule_misra-c%2B%2B%3A2008_5-2-8'><div class='rule'><div class='id'>5-2-8<br/><span>Required</span></div></div></a><div class='headline'>An object with integer type or pointer to void type shall not be converted to an object with pointer type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>440&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s440'>Cast from integral type to pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>540&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s540'>Cast from pointer to void to pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-2-9' name='rule_misra-c%2B%2B%3A2008_5-2-9'><div class='rule'><div class='id'>5-2-9<br/><span>Advisory</span></div></div></a><div class='headline'>A cast should not convert a pointer type to an integral type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>439&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s439'>Cast from pointer to integral type.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_397'>397</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-2-10' name='rule_misra-c%2B%2B%3A2008_5-2-10'><div class='rule'><div class='id'>5-2-10<br/><span>Advisory</span></div></div></a><div class='headline'>The increment (++) and decrement (--) operators should not be mixed with other operators in an expression.</div></div><p>LDRA Associated MISRA-C++:2008 5-0-1, 5-2-10, 6-2-1</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>30&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s30'>Deprecated usage of ++ or -- operators found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_122'>122</a> = 1 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-2-11' name='rule_misra-c%2B%2B%3A2008_5-2-11'><div class='rule'><div class='id'>5-2-11<br/><span>Required</span></div></div></a><div class='headline'>The comma operator, &amp;&amp; operator and the || operator shall not be overloaded.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>211&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s211'>Overloaded &amp;&amp;, || or comma.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-2-12' name='rule_misra-c%2B%2B%3A2008_5-2-12'><div class='rule'><div class='id'>5-2-12<br/><span>Required</span></div></div></a><div class='headline'>An identifier with array type passed as a function argument shall not decay to a pointer.</div></div><p>Penalty <a href='standards.htm#standard_s459'>459 S</a> highlights all function arguments that are declared with an array type that is not a reference.  The user must then manually check the specification of the called function.  Penalty <a href='standards.htm#standard_s534'>534 S</a> provides a further check that a function parameter declared with a pointer type is not treated as an array by the use of array subscript.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>459&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s459'>Array passed as actual parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_443'>443</a> = 1</td>    </tr>
    <tr>    <td class='from'>534&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s534'>Array has decayed to pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-3-1' name='rule_misra-c%2B%2B%3A2008_5-3-1'><div class='rule'><div class='id'>5-3-1<br/><span>Required</span></div></div></a><div class='headline'>Each operand of the ! operator, the logical &amp;&amp; or the logical || operators shall have type bool.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>114&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s114'>Expression is not Boolean.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_386'>386</a> = 1 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-3-2' name='rule_misra-c%2B%2B%3A2008_5-3-2'><div class='rule'><div class='id'>5-3-2<br/><span>Required</span></div></div></a><div class='headline'>The unary minus operator shall not be applied to an expression whose underlying type is unsigned.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>52&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s52'>Unsigned expression negated.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-3-3' name='rule_misra-c%2B%2B%3A2008_5-3-3'><div class='rule'><div class='id'>5-3-3<br/><span>Required</span></div></div></a><div class='headline'>The unary &amp; operator shall not be overloaded.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>508&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s508'>Operator &amp; overloaded.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-3-4' name='rule_misra-c%2B%2B%3A2008_5-3-4'><div class='rule'><div class='id'>5-3-4<br/><span>Required</span></div></div></a><div class='headline'>Evaluation of the operand to the sizeof operator shall not contain side effects.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>54&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s54'>Sizeof operator with side effects.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-8-1' name='rule_misra-c%2B%2B%3A2008_5-8-1'><div class='rule'><div class='id'>5-8-1<br/><span>Required</span></div></div></a><div class='headline'>The right hand operand of a shift operator shall lie between zero and one less than the width in bits of the underlying type of the left hand operand.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>51&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s51'>Shifting value too far.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-14-1' name='rule_misra-c%2B%2B%3A2008_5-14-1'><div class='rule'><div class='id'>5-14-1<br/><span>Required</span></div></div></a><div class='headline'>The right hand operand of a logical &amp;&amp; or || operator shall not contain side effects.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>406&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s406'>Use of ++ or -- on RHS of &amp;&amp; or || operator.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-17-1' name='rule_misra-c%2B%2B%3A2008_5-17-1'><div class='rule'><div class='id'>5-17-1<br/><span>Required</span></div></div></a><div class='headline'>The semantic equivalence between a binary operator and its assignment operator form shall be preserved.</div></div><p>The semantics of overloaded operators cannot realistically be checked without human intervention.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-18-1' name='rule_misra-c%2B%2B%3A2008_5-18-1'><div class='rule'><div class='id'>5-18-1<br/><span>Required</span></div></div></a><div class='headline'>The comma operator shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>53&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s53'>Use of comma operator.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_263'>263</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_5-19-1' name='rule_misra-c%2B%2B%3A2008_5-19-1'><div class='rule'><div class='id'>5-19-1<br/><span>Advisory</span></div></div></a><div class='headline'>Evaluation of constant unsigned integer expressions should not lead to wrap-around.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>493&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s493'>Numeric overflow.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>494&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s494'>Numeric underflow.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-2-1' name='rule_misra-c%2B%2B%3A2008_6-2-1'><div class='rule'><div class='id'>6-2-1<br/><span>Required</span></div></div></a><div class='headline'>Assignment operators shall not be used in sub-expressions.</div></div><p>LDRA Associated MISRA-C++:2008 5-0-1, 5-2-10, 6-2-1</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>9&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s9'>Assignment operation in expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_259'>259</a> = 0 (Default), <a href='standard_flags.htm#flag_266'>266</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>132&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s132'>Assignment operator in boolean expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : 247 = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-2-2' name='rule_misra-c%2B%2B%3A2008_6-2-2'><div class='rule'><div class='id'>6-2-2<br/><span>Required</span></div></div></a><div class='headline'>Floating-point expressions shall not be directly or indirectly tested for equality or inequality.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>56&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s56'>Equality comparison of floating point.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_223'>223</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-2-3' name='rule_misra-c%2B%2B%3A2008_6-2-3'><div class='rule'><div class='id'>6-2-3<br/><span>Required</span></div></div></a><div class='headline'>Before preprocessing, a null statement shall only occur on a line by itself; it may be followed by a comment, provided that the first character following the null statement is a white-space character.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>58&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s58'>Null statement found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-3-1' name='rule_misra-c%2B%2B%3A2008_6-3-1'><div class='rule'><div class='id'>6-3-1<br/><span>Required</span></div></div></a><div class='headline'>The statement forming the body of a switch, while, do...while or for statement shall be a compound statement.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>11&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s11'>No brackets to loop body (added by Testbed).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-4-1' name='rule_misra-c%2B%2B%3A2008_6-4-1'><div class='rule'><div class='id'>6-4-1<br/><span>Required</span></div></div></a><div class='headline'>An if ( condition ) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>12&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s12'>No brackets to then/else (added by Testbed).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : tbend F</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-4-2' name='rule_misra-c%2B%2B%3A2008_6-4-2'><div class='rule'><div class='id'>6-4-2<br/><span>Required</span></div></div></a><div class='headline'>All if ... else if constructs shall be terminated with an else clause.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>59&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s59'>Else alternative missing in if.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : tbend = &lt;Default&gt;</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-4-3' name='rule_misra-c%2B%2B%3A2008_6-4-3'><div class='rule'><div class='id'>6-4-3<br/><span>Required</span></div></div></a><div class='headline'>A switch statement shall be a well-formed switch statement.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>385&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s385'>MISRA switch statement syntax violation.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-4-4' name='rule_misra-c%2B%2B%3A2008_6-4-4'><div class='rule'><div class='id'>6-4-4<br/><span>Required</span></div></div></a><div class='headline'>A switch-label shall only be used when the most closely-enclosing compound statement is the body of a switch statement.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>245&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s245'>Case statement in nested block.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-4-5' name='rule_misra-c%2B%2B%3A2008_6-4-5'><div class='rule'><div class='id'>6-4-5<br/><span>Required</span></div></div></a><div class='headline'>An unconditional throw or break statement shall terminate every non-empty switch-clause.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>62&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s62'>Switch case not terminated with break.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_283'>283</a> = 0 (Default), <a href='standard_flags.htm#flag_384'>384</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-4-6' name='rule_misra-c%2B%2B%3A2008_6-4-6'><div class='rule'><div class='id'>6-4-6<br/><span>Required</span></div></div></a><div class='headline'>The final clause of a switch statement shall be the default-clause.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>48&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s48'>No default case in switch statement.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_252'>252</a> = 0 (Default), <a href='standard_flags.htm#flag_233'>233</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>322&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s322'>Default is not last case of switch.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_419'>419</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-4-7' name='rule_misra-c%2B%2B%3A2008_6-4-7'><div class='rule'><div class='id'>6-4-7<br/><span>Required</span></div></div></a><div class='headline'>The condition of a switch statement shall not have bool type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>121&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s121'>Use of boolean expression in switch.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-4-8' name='rule_misra-c%2B%2B%3A2008_6-4-8'><div class='rule'><div class='id'>6-4-8<br/><span>Required</span></div></div></a><div class='headline'>Every switch statement shall have at least one case-clause.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>61&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s61'>Switch contains default only.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_437'>437</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-5-1' name='rule_misra-c%2B%2B%3A2008_6-5-1'><div class='rule'><div class='id'>6-5-1<br/><span>Required</span></div></div></a><div class='headline'>A for loop shall contain a single loop-counter which shall not have floating type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>38&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d38'>More than one control variable for loop.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-5-2' name='rule_misra-c%2B%2B%3A2008_6-5-2'><div class='rule'><div class='id'>6-5-2<br/><span>Required</span></div></div></a><div class='headline'>If loop-counter is not modified by -- or ++, then, within condition, the loop-counter shall only be used as an operand to &lt;=, &lt;, &gt; or &gt;=.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>510&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s510'>Loop counter increment and operator defect.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-5-3' name='rule_misra-c%2B%2B%3A2008_6-5-3'><div class='rule'><div class='id'>6-5-3<br/><span>Required</span></div></div></a><div class='headline'>The loop-counter shall not be modified within condition or statement.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>55&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d55'>Modification of loop counter in loop body.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>73&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d73'>Predicate variable modified in condition.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-5-4' name='rule_misra-c%2B%2B%3A2008_6-5-4'><div class='rule'><div class='id'>6-5-4<br/><span>Required</span></div></div></a><div class='headline'>The loop-counter shall be modified by one of: --, ++, -=n, or +=n; where n remains constant for the duration of the loop.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>271&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s271'>For loop incrementation is not simple.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-5-5' name='rule_misra-c%2B%2B%3A2008_6-5-5'><div class='rule'><div class='id'>6-5-5<br/><span>Required</span></div></div></a><div class='headline'>A loop-control-variable other than the loop-counter shall not be modified within condition or expression.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>537&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s537'>Extra loop control variable changed.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-5-6' name='rule_misra-c%2B%2B%3A2008_6-5-6'><div class='rule'><div class='id'>6-5-6<br/><span>Required</span></div></div></a><div class='headline'>A loop-control-variable other than the loop-counter which is modified in statement shall have type bool.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>66&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d66'>Non boolean control variable modified in loop.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>542&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s542'>Extra loop control variable is not bool.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-6-1' name='rule_misra-c%2B%2B%3A2008_6-6-1'><div class='rule'><div class='id'>6-6-1<br/><span>Required</span></div></div></a><div class='headline'>Any label referenced by a goto statement shall be declared in the same block, or in a block enclosing the goto statement.</div></div><p>LDRA Associated MISRA-C++:2008 0-1-1, 6-6-1</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>1&nbsp;J</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_j1'>Unreachable Code found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>511&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s511'>Jump into nested block.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-6-2' name='rule_misra-c%2B%2B%3A2008_6-6-2'><div class='rule'><div class='id'>6-6-2<br/><span>Required</span></div></div></a><div class='headline'>The goto statement shall jump to a label declared later in the same function body.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>509&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s509'>goto label is backwards.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-6-3' name='rule_misra-c%2B%2B%3A2008_6-6-3'><div class='rule'><div class='id'>6-6-3<br/><span>Required</span></div></div></a><div class='headline'>The continue statement shall only be used within a well-formed for loop.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>32&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s32'>Use of continue statement.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>65&nbsp;X</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_x65'>continue in ill-formed loop.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-6-4' name='rule_misra-c%2B%2B%3A2008_6-6-4'><div class='rule'><div class='id'>6-6-4<br/><span>Required</span></div></div></a><div class='headline'>For any iteration statement there shall be no more than one break or goto statement used for loop termination.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>409&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s409'>More than one break or goto statement in loop.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_6-6-5' name='rule_misra-c%2B%2B%3A2008_6-6-5'><div class='rule'><div class='id'>6-6-5<br/><span>Required</span></div></div></a><div class='headline'>A function shall have a single point of exit at the end of the function.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>7&nbsp;C</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_c7'>Procedure has more than one exit point.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-1-1' name='rule_misra-c%2B%2B%3A2008_7-1-1'><div class='rule'><div class='id'>7-1-1<br/><span>Required</span></div></div></a><div class='headline'>A variable which is not modified shall be const qualified.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>59&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d59'>Parameter should be declared const.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>78&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d78'>Global variable should be declared const.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>93&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d93'>Local variable should be declared const.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>603&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s603'>Parameter should be declared * const.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-1-2' name='rule_misra-c%2B%2B%3A2008_7-1-2'><div class='rule'><div class='id'>7-1-2<br/><span>Required</span></div></div></a><div class='headline'>A pointer or reference parameter in a function shall be declared as pointer to const or reference to const if the corresponding object is not modified.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>62&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d62'>Pointer parameter should be declared const.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-2-1' name='rule_misra-c%2B%2B%3A2008_7-2-1'><div class='rule'><div class='id'>7-2-1<br/><span>Required</span></div></div></a><div class='headline'>An expression with enum underlying type shall only have values corresponding to the enumerators of the enumeration.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>411&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s411'>Inappropriate value assigned to enum.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-3-1' name='rule_misra-c%2B%2B%3A2008_7-3-1'><div class='rule'><div class='id'>7-3-1<br/><span>Required</span></div></div></a><div class='headline'>The global namespace shall only contain main, namespace declarations and extern &quot;C&quot; declarations.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>517&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s517'>At least one declaration in global namespace.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-3-2' name='rule_misra-c%2B%2B%3A2008_7-3-2'><div class='rule'><div class='id'>7-3-2<br/><span>Required</span></div></div></a><div class='headline'>The identifier main shall not be used for a function other than the global function main.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>362&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s362'>main program in a namespace.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-3-3' name='rule_misra-c%2B%2B%3A2008_7-3-3'><div class='rule'><div class='id'>7-3-3<br/><span>Required</span></div></div></a><div class='headline'>There shall be no unnamed namespaces in header files.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>512&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s512'>Use of unnamed namespace.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-3-4' name='rule_misra-c%2B%2B%3A2008_7-3-4'><div class='rule'><div class='id'>7-3-4<br/><span>Required</span></div></div></a><div class='headline'>using-directives shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>513&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s513'>Use of using directive.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-3-5' name='rule_misra-c%2B%2B%3A2008_7-3-5'><div class='rule'><div class='id'>7-3-5<br/><span>Required</span></div></div></a><div class='headline'>Multiple declarations for an identifier in the same namespace shall not straddle a using-declaration for that identifier.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>518&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s518'>Using declaration is straddled by declarations.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-3-6' name='rule_misra-c%2B%2B%3A2008_7-3-6'><div class='rule'><div class='id'>7-3-6<br/><span>Required</span></div></div></a><div class='headline'>using-directives and using-declarations (excluding class scope or function scope using-declarations) shall not be used in header files.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>514&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s514'>Using directive or declaration in header.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-4-1' name='rule_misra-c%2B%2B%3A2008_7-4-1'><div class='rule'><div class='id'>7-4-1<br/><span>Document</span></div></div></a><div class='headline'>All usage of assembler shall be documented.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>17&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s17'>Code insert found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-4-2' name='rule_misra-c%2B%2B%3A2008_7-4-2'><div class='rule'><div class='id'>7-4-2<br/><span>Required</span></div></div></a><div class='headline'>Assembler instructions shall only be introduced using the asm declaration.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>516&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s516'>Assembler does not use asm declaration.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-4-3' name='rule_misra-c%2B%2B%3A2008_7-4-3'><div class='rule'><div class='id'>7-4-3<br/><span>Required</span></div></div></a><div class='headline'>Assembly language shall be encapsulated and isolated.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>88&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s88'>Procedure is not pure assembler.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-5-1' name='rule_misra-c%2B%2B%3A2008_7-5-1'><div class='rule'><div class='id'>7-5-1<br/><span>Required</span></div></div></a><div class='headline'>A function shall not return a reference or a pointer to an automatic variable (including parameters), defined within the function.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>42&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d42'>Local pointer returned in function result.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>564&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s564'>Reference assignment to wider scope.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-5-2' name='rule_misra-c%2B%2B%3A2008_7-5-2'><div class='rule'><div class='id'>7-5-2<br/><span>Required</span></div></div></a><div class='headline'>The address of an object with automatic storage shall not be assigned to another object that may persist after the first object has ceased to exist.</div></div><p>In general, it is not possible to determine statically whether a pointer contains the address of an object that has lifetime greater than the current scope. Testbed highlights the assignment of all pointers to a wider scope. More details can be found in the documentation for <a href='standards.htm#standard_s71'>71 S</a>.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>71&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s71'>Pointer assignment to wider scope.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_222'>222</a> = 1</td>    </tr>
    <tr>    <td class='from'>565&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s565'>Assignment to wider scope.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-5-3' name='rule_misra-c%2B%2B%3A2008_7-5-3'><div class='rule'><div class='id'>7-5-3<br/><span>Required</span></div></div></a><div class='headline'>A function shall not return a reference or a pointer to a parameter that is passed by reference or const reference.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>519&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s519'>Return of reference parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_7-5-4' name='rule_misra-c%2B%2B%3A2008_7-5-4'><div class='rule'><div class='id'>7-5-4<br/><span>Advisory</span></div></div></a><div class='headline'>Functions should not call themselves, either directly or indirectly.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>6&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d6'>Recursion in procedure calls found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>1&nbsp;U</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_u1'>Inter-file recursion found.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_8-0-1' name='rule_misra-c%2B%2B%3A2008_8-0-1'><div class='rule'><div class='id'>8-0-1<br/><span>Required</span></div></div></a><div class='headline'>An init-declarator-list or a member-declarator-list shall consist of a single init-declarator or member-declarator respectively.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>515&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s515'>More than one variable in declaration.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_8-3-1' name='rule_misra-c%2B%2B%3A2008_8-3-1'><div class='rule'><div class='id'>8-3-1<br/><span>Required</span></div></div></a><div class='headline'>Parameters in an overriding virtual function shall either use the same default arguments as the function they override, or else shall not specify any default arguments.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>364&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s364'>Inherited default parameter redefined.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_385'>385</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_8-4-1' name='rule_misra-c%2B%2B%3A2008_8-4-1'><div class='rule'><div class='id'>8-4-1<br/><span>Required</span></div></div></a><div class='headline'>Functions shall not be defined using the ellipsis notation.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>41&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s41'>Ellipsis used in procedure parameter list.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_8-4-2' name='rule_misra-c%2B%2B%3A2008_8-4-2'><div class='rule'><div class='id'>8-4-2<br/><span>Required</span></div></div></a><div class='headline'>The identifiers used for the parameters in a re-declaration of a function shall be identical to those in the declaration.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>36&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d36'>Prototype and definition name mismatch.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_8-4-3' name='rule_misra-c%2B%2B%3A2008_8-4-3'><div class='rule'><div class='id'>8-4-3<br/><span>Required</span></div></div></a><div class='headline'>All exit paths from a function with non-void return type shall have an explicit return statement with an expression.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>2&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d2'>Function does not return a value on all paths.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>36&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s36'>Function has no return statement.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>66&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s66'>Function with empty return expression.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_8-4-4' name='rule_misra-c%2B%2B%3A2008_8-4-4'><div class='rule'><div class='id'>8-4-4<br/><span>Required</span></div></div></a><div class='headline'>A function identifier shall either be used to call the function or it shall be preceded by &amp; .</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>99&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s99'>Function use is not a call.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_8-5-1' name='rule_misra-c%2B%2B%3A2008_8-5-1'><div class='rule'><div class='id'>8-5-1<br/><span>Required</span></div></div></a><div class='headline'>All variables shall have a defined value before they are used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>69&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d69'>UR anomaly, variable used before assignment.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_8-5-2' name='rule_misra-c%2B%2B%3A2008_8-5-2'><div class='rule'><div class='id'>8-5-2<br/><span>Required</span></div></div></a><div class='headline'>Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>105&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s105'>Initialisation brace { } fault.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>397&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s397'>Array initialisation has insufficient items.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_415'>415</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_8-5-3' name='rule_misra-c%2B%2B%3A2008_8-5-3'><div class='rule'><div class='id'>8-5-3<br/><span>Required</span></div></div></a><div class='headline'>In an enumerator list, the = construct shall not be used to explicitly initialize members other than the first, unless all items are explicitly initialized.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>85&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s85'>Incomplete initialisation of enumerator.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_377'>377</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_9-3-1' name='rule_misra-c%2B%2B%3A2008_9-3-1'><div class='rule'><div class='id'>9-3-1<br/><span>Required</span></div></div></a><div class='headline'>const member functions shall not return non-const pointers or references to class-data.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>392&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s392'>Class data accessible thru non const member.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_9-3-2' name='rule_misra-c%2B%2B%3A2008_9-3-2'><div class='rule'><div class='id'>9-3-2<br/><span>Required</span></div></div></a><div class='headline'>Member functions shall not return non-const handles to class-data.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>392&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s392'>Class data accessible thru non const member.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_9-3-3' name='rule_misra-c%2B%2B%3A2008_9-3-3'><div class='rule'><div class='id'>9-3-3<br/><span>Required</span></div></div></a><div class='headline'>If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>46&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d46'>Member function may be declared const.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>79&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d79'>Member function may be declared static.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_9-5-1' name='rule_misra-c%2B%2B%3A2008_9-5-1'><div class='rule'><div class='id'>9-5-1<br/><span>Required</span></div></div></a><div class='headline'>Unions shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>74&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s74'>Union declared.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_9-6-1' name='rule_misra-c%2B%2B%3A2008_9-6-1'><div class='rule'><div class='id'>9-6-1<br/><span>Document</span></div></div></a><div class='headline'>When the absolute positioning of bits representing a bit-field is required, then the behaviour and packing of bit-fields shall be documented.</div></div><p><a href='standards.htm#standard_s42'>42 S</a> and <a href='standards.htm#standard_s328'>328 S</a> highlight the use of bit-field structures. The user must than manually check whether the positioning of bits is important and document as required by the rule.</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>42&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s42'>Use of bit field in structure declaration.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>328&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s328'>Non bit field member in bitfield struct.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_9-6-2' name='rule_misra-c%2B%2B%3A2008_9-6-2'><div class='rule'><div class='id'>9-6-2<br/><span>Required</span></div></div></a><div class='headline'>Bit-fields shall be either bool type or an explicitly unsigned or signed integral type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>520&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s520'>Bit field is not bool or explicit integral.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 1, <a href='standard_flags.htm#flag_350'>350</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_9-6-3' name='rule_misra-c%2B%2B%3A2008_9-6-3'><div class='rule'><div class='id'>9-6-3<br/><span>Required</span></div></div></a><div class='headline'>Bit-fields shall not have enum type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>520&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s520'>Bit field is not bool or explicit integral.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 1, <a href='standard_flags.htm#flag_350'>350</a> = 0 (Default)</td>    </tr>
    <tr>    <td class='from'>536&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s536'>Enum type in bit field.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_9-6-4' name='rule_misra-c%2B%2B%3A2008_9-6-4'><div class='rule'><div class='id'>9-6-4<br/><span>Required</span></div></div></a><div class='headline'>Named bit-fields with signed integer type shall have a length of more than one bit.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>72&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s72'>Signed bit field less than 2 bits wide.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_416'>416</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_10-1-1' name='rule_misra-c%2B%2B%3A2008_10-1-1'><div class='rule'><div class='id'>10-1-1<br/><span>Advisory</span></div></div></a><div class='headline'>Classes should not be derived from virtual bases.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>521&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s521'>Class derived from virtual base class.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_10-1-2' name='rule_misra-c%2B%2B%3A2008_10-1-2'><div class='rule'><div class='id'>10-1-2<br/><span>Required</span></div></div></a><div class='headline'>A base class shall only be declared virtual if it is used in a diamond hierarchy.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>543&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s543'>Virtual base not in diamond hierarchy.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_10-1-3' name='rule_misra-c%2B%2B%3A2008_10-1-3'><div class='rule'><div class='id'>10-1-3<br/><span>Required</span></div></div></a><div class='headline'>An accessible base class shall not be both virtual and non-virtual in the same hierarchy.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>357&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s357'>Base class is mixed virtual and non virtual.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_10-2-1' name='rule_misra-c%2B%2B%3A2008_10-2-1'><div class='rule'><div class='id'>10-2-1<br/><span>Advisory</span></div></div></a><div class='headline'>All accessible entity names within a multiple inheritance hierarchy should be unique.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>555&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s555'>Base class member name not unique.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_10-3-1' name='rule_misra-c%2B%2B%3A2008_10-3-1'><div class='rule'><div class='id'>10-3-1<br/><span>Required</span></div></div></a><div class='headline'>There shall be no more than one definition of each virtual function on each path through the inheritance hierarchy.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>559&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s559'>Virtual member defined more than once.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_10-3-2' name='rule_misra-c%2B%2B%3A2008_10-3-2'><div class='rule'><div class='id'>10-3-2<br/><span>Required</span></div></div></a><div class='headline'>Each overriding virtual function shall be declared with the virtual keyword.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>214&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s214'>Member not declared virtual.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_10-3-3' name='rule_misra-c%2B%2B%3A2008_10-3-3'><div class='rule'><div class='id'>10-3-3<br/><span>Required</span></div></div></a><div class='headline'>A virtual function shall only be overridden by a pure virtual function if it is itself declared as pure virtual.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>544&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s544'>Member re-declared pure.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_11-0-1' name='rule_misra-c%2B%2B%3A2008_11-0-1'><div class='rule'><div class='id'>11-0-1<br/><span>Required</span></div></div></a><div class='headline'>Member data in non-POD class types shall be private.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>202&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s202'>Class data is not explicitly private.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_12-1-1' name='rule_misra-c%2B%2B%3A2008_12-1-1'><div class='rule'><div class='id'>12-1-1<br/><span>Required</span></div></div></a><div class='headline'>An object's dynamic type shall not be used from the body of its constructor or destructor.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>92&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d92'>C'tor/d'tor calls virtual function.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>467&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s467'>Virtual member called in ctor/dtor.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>561&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s561'>Use of dynamic type in c'tor/d'tor.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_12-1-2' name='rule_misra-c%2B%2B%3A2008_12-1-2'><div class='rule'><div class='id'>12-1-2<br/><span>Advisory</span></div></div></a><div class='headline'>All constructors of a class should explicitly call a constructor for all of its immediate base classes and all virtual base classes.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>528&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s528'>Base class constructor omitted (added by Testbed).</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_12-1-3' name='rule_misra-c%2B%2B%3A2008_12-1-3'><div class='rule'><div class='id'>12-1-3<br/><span>Required</span></div></div></a><div class='headline'>All constructors that are callable with a single argument of fundamental type shall be declared explicit.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>393&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s393'>Single parameter constructor not 'explicit'.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_12-8-1' name='rule_misra-c%2B%2B%3A2008_12-8-1'><div class='rule'><div class='id'>12-8-1<br/><span>Required</span></div></div></a><div class='headline'>A copy constructor shall only initialize its base classes and the non-static members of the class of which it is a member.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>529&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s529'>Static member initialised/assigned in constructor.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_12-8-2' name='rule_misra-c%2B%2B%3A2008_12-8-2'><div class='rule'><div class='id'>12-8-2<br/><span>Required</span></div></div></a><div class='headline'>The copy assignment operator shall be declared protected or private in an abstract class.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>522&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s522'>Public assign operator in abstract class.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_14-5-1' name='rule_misra-c%2B%2B%3A2008_14-5-1'><div class='rule'><div class='id'>14-5-1<br/><span>Required</span></div></div></a><div class='headline'>A non-member generic function shall only be declared in a namespace that is not an associated namespace.</div></div></div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_14-5-2' name='rule_misra-c%2B%2B%3A2008_14-5-2'><div class='rule'><div class='id'>14-5-2<br/><span>Required</span></div></div></a><div class='headline'>A copy constructor shall be declared when there is a template constructor with a single parameter that is a generic parameter.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>532&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s532'>No copy ctor for templated copy ctor.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_14-5-3' name='rule_misra-c%2B%2B%3A2008_14-5-3'><div class='rule'><div class='id'>14-5-3<br/><span>Required</span></div></div></a><div class='headline'>A copy assignment operator shall be declared when there is a template assignment operator with a parameter that is a generic parameter.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>533&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s533'>No assgnmt optor for templated assgmnt op.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_14-6-1' name='rule_misra-c%2B%2B%3A2008_14-6-1'><div class='rule'><div class='id'>14-6-1<br/><span>Required</span></div></div></a><div class='headline'>In a class template with a dependent base, any name that may be found in that dependent base shall be referred to using a qualified-id or this-&gt;</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>547&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s547'>Base member not qualified.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_14-6-2' name='rule_misra-c%2B%2B%3A2008_14-6-2'><div class='rule'><div class='id'>14-6-2<br/><span>Required</span></div></div></a><div class='headline'>The function chosen by overload resolution shall resolve to a function declared previously in the translation unit.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>546&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s546'>Overload resolution could be forward.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_14-7-1' name='rule_misra-c%2B%2B%3A2008_14-7-1'><div class='rule'><div class='id'>14-7-1<br/><span>Required</span></div></div></a><div class='headline'>All class templates, function templates, class template member functions and class template static members shall be instantiated at least once.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>538&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s538'>Template class/function/member not instantiated.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_14-7-2' name='rule_misra-c%2B%2B%3A2008_14-7-2'><div class='rule'><div class='id'>14-7-2<br/><span>Required</span></div></div></a><div class='headline'>For any given template specialization, an explicit instantiation of the template with the template-arguments used in the specialization shall not render the program ill-formed.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>558&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s558'>Template may lead to ill-formed program.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_14-7-3' name='rule_misra-c%2B%2B%3A2008_14-7-3'><div class='rule'><div class='id'>14-7-3<br/><span>Required</span></div></div></a><div class='headline'>All partial and explicit specializations for a template shall be declared in the same file as the declaration of their primary template.</div></div></div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_14-8-1' name='rule_misra-c%2B%2B%3A2008_14-8-1'><div class='rule'><div class='id'>14-8-1<br/><span>Required</span></div></div></a><div class='headline'>Overloaded function templates shall not be explicitly specialized.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>539&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s539'>Specialised overloaded templated function.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_14-8-2' name='rule_misra-c%2B%2B%3A2008_14-8-2'><div class='rule'><div class='id'>14-8-2<br/><span>Advisory</span></div></div></a><div class='headline'>The viable function set for a function call should either contain no function specializations, or only contain function specializations.</div></div></div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-0-1' name='rule_misra-c%2B%2B%3A2008_15-0-1'><div class='rule'><div class='id'>15-0-1<br/><span>Document</span></div></div></a><div class='headline'>Exceptions shall only be used for error handling.</div></div><p>Automated detection of this violation is not possible as the tool cannot determine whether the exception is being used for error handling or not.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-0-2' name='rule_misra-c%2B%2B%3A2008_15-0-2'><div class='rule'><div class='id'>15-0-2<br/><span>Advisory</span></div></div></a><div class='headline'>An exception object should not have pointer type.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>523&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s523'>Exception type is pointer.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-0-3' name='rule_misra-c%2B%2B%3A2008_15-0-3'><div class='rule'><div class='id'>15-0-3<br/><span>Required</span></div></div></a><div class='headline'>Control shall not be transferred into a try or catch block using a goto or a switch statement.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>524&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s524'>Jump into try or catch statement.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_331'>331</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-1-1' name='rule_misra-c%2B%2B%3A2008_15-1-1'><div class='rule'><div class='id'>15-1-1<br/><span>Required</span></div></div></a><div class='headline'>The assignment-expression of a throw statement shall not itself cause an exception to be thrown.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>557&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s557'>Function call can generate throw exception.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-1-2' name='rule_misra-c%2B%2B%3A2008_15-1-2'><div class='rule'><div class='id'>15-1-2<br/><span>Required</span></div></div></a><div class='headline'>NULL shall not be thrown explicitly.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>525&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s525'>throw with explicit NULL.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-1-3' name='rule_misra-c%2B%2B%3A2008_15-1-3'><div class='rule'><div class='id'>15-1-3<br/><span>Required</span></div></div></a><div class='headline'>An empty throw (throw;) shall only be used in the compound-statement of a catch handler.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>526&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s526'>Empty throw is not in catch statement.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-3-1' name='rule_misra-c%2B%2B%3A2008_15-3-1'><div class='rule'><div class='id'>15-3-1<br/><span>Required</span></div></div></a><div class='headline'>Exceptions shall be raised only after start-up and before termination of the program.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>557&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s557'>Function call can generate throw exception.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-3-2' name='rule_misra-c%2B%2B%3A2008_15-3-2'><div class='rule'><div class='id'>15-3-2<br/><span>Advisory</span></div></div></a><div class='headline'>There should be at least one exception handler to catch all otherwise unhandled exceptions</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>527&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s527'>No master exception handler.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-3-3' name='rule_misra-c%2B%2B%3A2008_15-3-3'><div class='rule'><div class='id'>15-3-3<br/><span>Required</span></div></div></a><div class='headline'>Handlers of a function-try-block implementation of a class constructor or destructor shall not reference non-static members from this class or its bases.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>549&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s549'>Catch in c'tor/d'tor references nonstatic member.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-3-4' name='rule_misra-c%2B%2B%3A2008_15-3-4'><div class='rule'><div class='id'>15-3-4<br/><span>Required</span></div></div></a><div class='headline'>Each exception explicitly thrown in the code shall have a handler of a compatible type in all call paths that could lead to that point.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>56&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d56'>Throw found with no catch in scope.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>71&nbsp;D</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_d71'>No matching catch for throw in called function.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-3-5' name='rule_misra-c%2B%2B%3A2008_15-3-5'><div class='rule'><div class='id'>15-3-5<br/><span>Required</span></div></div></a><div class='headline'>A class type exception shall always be caught by reference.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>455&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s455'>Catch is not by reference.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-3-6' name='rule_misra-c%2B%2B%3A2008_15-3-6'><div class='rule'><div class='id'>15-3-6<br/><span>Required</span></div></div></a><div class='headline'>Where multiple handlers are provided in a single try-catch statement or function-try-block for a derived class and some or all of its bases, the handlers shall be ordered most-derived to base class.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>556&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s556'>Wrong order of catches for derived class.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-3-7' name='rule_misra-c%2B%2B%3A2008_15-3-7'><div class='rule'><div class='id'>15-3-7<br/><span>Required</span></div></div></a><div class='headline'>Where multiple handlers are provided in a single try-catch statement or function-try-block, any ellipsis (catch-all) handler shall occur last.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>541&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s541'>Catch-all is not last catch.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-4-1' name='rule_misra-c%2B%2B%3A2008_15-4-1'><div class='rule'><div class='id'>15-4-1<br/><span>Required</span></div></div></a><div class='headline'>If a function is declared with an exception-specification, then all declarations of the same function (in other translation units) shall be declared with the same set of type-ids.</div></div></div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-5-1' name='rule_misra-c%2B%2B%3A2008_15-5-1'><div class='rule'><div class='id'>15-5-1<br/><span>Required</span></div></div></a><div class='headline'>A class destructor shall not exit with an exception.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>453&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s453'>Throw found in destructor.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-5-2' name='rule_misra-c%2B%2B%3A2008_15-5-2'><div class='rule'><div class='id'>15-5-2<br/><span>Required</span></div></div></a><div class='headline'>Where a function's declaration includes an exception-specification, the function shall only be capable of throwing exceptions of the indicated type(s).</div></div></div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_15-5-3' name='rule_misra-c%2B%2B%3A2008_15-5-3'><div class='rule'><div class='id'>15-5-3<br/><span>Required</span></div></div></a><div class='headline'>The terminate() function shall not be called implicitly.</div></div><p>This rule requires that the try..throw..catch mechanism does not result in an implicit call to the terminate() function as the stack unwinds. However, if rules 15-03-01, 15-03-02, 15-03-04, and 15-05-01 have been adhered to then this situation cannot arise.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-0-1' name='rule_misra-c%2B%2B%3A2008_16-0-1'><div class='rule'><div class='id'>16-0-1<br/><span>Required</span></div></div></a><div class='headline'>#include directives in a file shall only be preceded by other preprocessor directives or comments.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>75&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s75'>Executable code before an included file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>338&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s338'>#include preceded by non preproc directives.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-0-2' name='rule_misra-c%2B%2B%3A2008_16-0-2'><div class='rule'><div class='id'>16-0-2<br/><span>Required</span></div></div></a><div class='headline'>Macros shall only be #define'd or #undef'd in the global namespace.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>67&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s67'>#define used in a block.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>426&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s426'>#undef used in a block.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-0-3' name='rule_misra-c%2B%2B%3A2008_16-0-3'><div class='rule'><div class='id'>16-0-3<br/><span>Required</span></div></div></a><div class='headline'>#undef shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>68&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s68'>#undef used.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-0-4' name='rule_misra-c%2B%2B%3A2008_16-0-4'><div class='rule'><div class='id'>16-0-4<br/><span>Required</span></div></div></a><div class='headline'>Function-like macros shall not be defined.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>340&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s340'>Use of function like macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-0-5' name='rule_misra-c%2B%2B%3A2008_16-0-5'><div class='rule'><div class='id'>16-0-5<br/><span>Required</span></div></div></a><div class='headline'>Arguments to a function-like macro shall not contain tokens that look like preprocessing directives.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>341&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s341'>Preprocessor construct as macro parameter.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-0-6' name='rule_misra-c%2B%2B%3A2008_16-0-6'><div class='rule'><div class='id'>16-0-6<br/><span>Required</span></div></div></a><div class='headline'>In the definition of a function-like macro, each instance of a parameter shall be enclosed in parentheses, unless it is used as the operand of # or ##.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>78&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s78'>Macro parameter not in brackets.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-0-7' name='rule_misra-c%2B%2B%3A2008_16-0-7'><div class='rule'><div class='id'>16-0-7<br/><span>Required</span></div></div></a><div class='headline'>Undefined macro identifiers shall not be used in #if or #elif preprocessor directives, except as operands to the defined operator.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>337&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s337'>Undefined macro variable in #if.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-0-8' name='rule_misra-c%2B%2B%3A2008_16-0-8'><div class='rule'><div class='id'>16-0-8<br/><span>Required</span></div></div></a><div class='headline'>If the # token appears as the first token on a line, then it shall be immediately followed by a preprocessing token.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>147&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s147'>Spurious characters after preprocessor directive.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>342&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s342'>Extra chars after preprocessor directive.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-1-1' name='rule_misra-c%2B%2B%3A2008_16-1-1'><div class='rule'><div class='id'>16-1-1<br/><span>Required</span></div></div></a><div class='headline'>The defined preprocessor operator shall only be used in one of the two standard forms.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>335&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s335'>Operator defined contains illegal items.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>336&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s336'>#if expansion contains define operator.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-1-2' name='rule_misra-c%2B%2B%3A2008_16-1-2'><div class='rule'><div class='id'>16-1-2<br/><span>Required</span></div></div></a><div class='headline'>All #else, #elif and #endif preprocessor directives shall reside in the same file as the #if or #ifdef directive to which they are related.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>126&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s126'>A #if has no #endif in the same file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>343&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s343'>#else has no #if, etc in the same file.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-2-1' name='rule_misra-c%2B%2B%3A2008_16-2-1'><div class='rule'><div class='id'>16-2-1<br/><span>Required</span></div></div></a><div class='headline'>The pre-processor shall only be used for file inclusion and include guards.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>255&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s255'>Found #if, #ifdef, #else, #elif .</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>307&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s307'>Use of #line, #error preprocessor directives.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>340&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s340'>Use of function like macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-2-2' name='rule_misra-c%2B%2B%3A2008_16-2-2'><div class='rule'><div class='id'>16-2-2<br/><span>Required</span></div></div></a><div class='headline'>C++ macros shall only be used for include guards, type qualifiers, or storage class specifiers.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>79&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s79'>Macro contains unacceptable items.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_298'>298</a> = 0 (Default)</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-2-3' name='rule_misra-c%2B%2B%3A2008_16-2-3'><div class='rule'><div class='id'>16-2-3<br/><span>Required</span></div></div></a><div class='headline'>Include guards shall be provided.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>243&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s243'>Included file not protected with #define.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-2-4' name='rule_misra-c%2B%2B%3A2008_16-2-4'><div class='rule'><div class='id'>16-2-4<br/><span>Required</span></div></div></a><div class='headline'>The ', &quot;, /* or // characters shall not occur in a header file name.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>100&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s100'>#include filename is non conformant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_120'>120</a> = '\&#44; (Default), <a href='standard_flags.htm#flag_331'>331</a> = 1</td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-2-5' name='rule_misra-c%2B%2B%3A2008_16-2-5'><div class='rule'><div class='id'>16-2-5<br/><span>Advisory</span></div></div></a><div class='headline'>The \ character should not occur in a header file name.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>100&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s100'>#include filename is non conformant.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'>Modifiers : <a href='standard_flags.htm#flag_120'>120</a> = '\&#44; (Default), <a href='standard_flags.htm#flag_331'>331</a> = 1</td>    </tr>
    <tr>    <td class='from'>339&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s339'>#include directive with illegal items.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-2-6' name='rule_misra-c%2B%2B%3A2008_16-2-6'><div class='rule'><div class='id'>16-2-6<br/><span>Required</span></div></div></a><div class='headline'>The #include directive shall be followed by either a &lt;filename&gt; or &quot;filename&quot; sequence.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>292&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s292'>No space between #include and filename.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>339&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s339'>#include directive with illegal items.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>427&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s427'>Filename in #include not in &lt; &gt; or &quot; &quot;.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-3-1' name='rule_misra-c%2B%2B%3A2008_16-3-1'><div class='rule'><div class='id'>16-3-1<br/><span>Required</span></div></div></a><div class='headline'>There shall be at most one occurrence of the # or ## operators in a single macro definition.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>76&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s76'>More than one of # or ## in a macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-3-2' name='rule_misra-c%2B%2B%3A2008_16-3-2'><div class='rule'><div class='id'>16-3-2<br/><span>Advisory</span></div></div></a><div class='headline'>The # and ## operators should not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>125&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s125'>Use of ## or # in a macro.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_16-6-1' name='rule_misra-c%2B%2B%3A2008_16-6-1'><div class='rule'><div class='id'>16-6-1<br/><span>Document</span></div></div></a><div class='headline'>All uses of the #pragma directive shall be documented.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>69&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s69'>#pragma used.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_17-0-1' name='rule_misra-c%2B%2B%3A2008_17-0-1'><div class='rule'><div class='id'>17-0-1<br/><span>Required</span></div></div></a><div class='headline'>Reserved identifiers, macros and functions in the standard library shall not be defined, redefined or undefined.</div></div><p>LDRA Associated MISRA-C++:2008 17-0-1, 18-0-2, 18-2-1, 18-4-1, 19-3-1</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>68&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s68'>#undef used.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>86&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s86'>Attempt to define reserved word.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
    <tr>    <td class='from'>156&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s156'>Use of 'defined' keyword in macro body.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_17-0-2' name='rule_misra-c%2B%2B%3A2008_17-0-2'><div class='rule'><div class='id'>17-0-2<br/><span>Required</span></div></div></a><div class='headline'>The names of standard library macros and objects shall not be reused.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>218&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s218'>Name is used in standard libraries.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_17-0-3' name='rule_misra-c%2B%2B%3A2008_17-0-3'><div class='rule'><div class='id'>17-0-3<br/><span>Required</span></div></div></a><div class='headline'>The names of standard library functions shall not be overridden.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>218&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s218'>Name is used in standard libraries.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_17-0-4' name='rule_misra-c%2B%2B%3A2008_17-0-4'><div class='rule'><div class='id'>17-0-4<br/><span>Document</span></div></div></a><div class='headline'>All library code shall conform to MISRA C++.</div></div><p>Document rules must be treated as Required, and apply whenever the associated feature is used within code. As the requirement is typically to document and/or adopt a particular policy it cannot be enforced by the tool.
Where possible, an analysis should be perform on library code.</p>
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_17-0-5' name='rule_misra-c%2B%2B%3A2008_17-0-5'><div class='rule'><div class='id'>17-0-5<br/><span>Required</span></div></div></a><div class='headline'>The setjmp macro and the longjmp function shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>43&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s43'>Use of setjmp/longjmp.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_18-0-1' name='rule_misra-c%2B%2B%3A2008_18-0-1'><div class='rule'><div class='id'>18-0-1<br/><span>Required</span></div></div></a><div class='headline'>The C library shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>130&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s130'>Included file is not permitted.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_18-0-2' name='rule_misra-c%2B%2B%3A2008_18-0-2'><div class='rule'><div class='id'>18-0-2<br/><span>Required</span></div></div></a><div class='headline'>The library functions atof, atoi and atol from library &lt;cstdlib&gt; shall not be used.</div></div><p>LDRA Associated MISRA-C++:2008 17-0-1, 18-0-2, 18-2-1, 18-4-1, 19-3-1</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_18-0-3' name='rule_misra-c%2B%2B%3A2008_18-0-3'><div class='rule'><div class='id'>18-0-3<br/><span>Required</span></div></div></a><div class='headline'>The library functions abort, exit, getenv and system from library &lt;cstdlib&gt; shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>122&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s122'>Use of abort, exit, etc.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_18-0-4' name='rule_misra-c%2B%2B%3A2008_18-0-4'><div class='rule'><div class='id'>18-0-4<br/><span>Required</span></div></div></a><div class='headline'>The time handling functions of library &lt;ctime&gt; shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>130&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s130'>Included file is not permitted.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_18-0-5' name='rule_misra-c%2B%2B%3A2008_18-0-5'><div class='rule'><div class='id'>18-0-5<br/><span>Required</span></div></div></a><div class='headline'>The unbounded functions of library &lt;cstring&gt; shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>130&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s130'>Included file is not permitted.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_18-2-1' name='rule_misra-c%2B%2B%3A2008_18-2-1'><div class='rule'><div class='id'>18-2-1<br/><span>Required</span></div></div></a><div class='headline'>The macro offsetof shall not be used.</div></div><p>LDRA Associated MISRA-C++:2008 17-0-1, 18-0-2, 18-2-1, 18-4-1, 19-3-1</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_18-4-1' name='rule_misra-c%2B%2B%3A2008_18-4-1'><div class='rule'><div class='id'>18-4-1<br/><span>Required</span></div></div></a><div class='headline'>Dynamic heap memory allocation shall not be used.</div></div><p>LDRA Associated MISRA-C++:2008 17-0-1, 18-0-2, 18-2-1, 18-4-1, 19-3-1</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_18-7-1' name='rule_misra-c%2B%2B%3A2008_18-7-1'><div class='rule'><div class='id'>18-7-1<br/><span>Required</span></div></div></a><div class='headline'>The signal handling facilities of &lt;csignal&gt; shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>130&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s130'>Included file is not permitted.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_19-3-1' name='rule_misra-c%2B%2B%3A2008_19-3-1'><div class='rule'><div class='id'>19-3-1<br/><span>Required</span></div></div></a><div class='headline'>The error indicator errno shall not be used.</div></div><p>LDRA Associated MISRA-C++:2008 17-0-1, 18-0-2, 18-2-1, 18-4-1, 19-3-1</p>
<div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>44&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='block_title'><a id='rule_misra-c%2B%2B%3A2008_27-0-1' name='rule_misra-c%2B%2B%3A2008_27-0-1'><div class='rule'><div class='id'>27-0-1<br/><span>Required</span></div></div></a><div class='headline'>The stream input/output library &lt;cstdio&gt; shall not be used.</div></div><div class='title'>Mapped standards</div>
<div class='xref'>
  <table>
    <tr>    <td class='from'>130&nbsp;S</td>    <td class='seperator'>:</td>    <td class='target'><a href='standards.htm#standard_s130'>Included file is not permitted.</a></td>    <td class='seperator'>&nbsp;</td>    <td class='modifier'></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
    </div><!-- body-content -->
    <div class='footer'><p>     &copy; Copyright 2014 LDRA Ltd. All rights reserved.<br />     <span>Version 9.4.4, generated on 25th April 2014 at 08:31:23</span>    </p></div>
  </div><!-- body -->
</body>
</html>
