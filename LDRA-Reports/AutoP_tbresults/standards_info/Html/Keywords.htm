<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'
'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>
<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en' dir='ltr'>
<head>
  <!-- Force (well, try) IE8 to use IE8 standards mode -->
  <meta http-equiv='X-UA-Compatible' content='IE=8' />
  <meta http-equiv='Content-Type' content='text/html' />
  <title>LDRA Standards for C / C++ by Keyword</title>
  <meta name='generator' content='LDRA Standards Tool' />
  <meta name='date' content='2014-04-25_08-31-23' />
  <style>

* {
    padding : 0em;
    margin  : 0em;
}

body {
    padding     : 0px;
    margin      : 0px;
    background  : #ffffff;
    font-family : Verdana, sans-serif;
    font-size   : 100%; /* Forces font sizes to work in all browsers (i.e. IE) */
}

div.nav {
    width : 100%;
}

div.floating-menu {
    position    : fixed;
    width       : 100%;
    margin-left : 1em;
    margin-top  : 1.5em;
    font-size   : 1em;
    z-index     : 20; /* Ensure popup is over page title */
}

div.nav div.page_title {
    top            : 0px;
    left           : 0px;
    width          : 100%;
    height         : 1em;
    font-size      : 200%;
    font-weight    : bold;
    text-align     : center;
    padding-top    : 0.25em;
    padding-bottom : 0.25em;
    color          : #5f4970;
    border-bottom  : 2px solid #eb6c00;
    z-index        : 10; /* Ensure page title is over page body */
}

div.nav div.page_title span.registered {
    font-size      : 50%;
    vertical-align : top;
}

.floating-menu .title:hover {
    color        : #000000;
    background   : #ccc0da;
}

.floating-menu ul {
    font-family   : Arial, Helvetica, sans-serif;
    margin  : 0em;
    padding : 0em;
}

.floating-menu li.sep {
  border-top : 0.125em solid #eb6c00;
}

.floating-menu li {
  position          : relative;
/*   width             : 8em; --- move to :hover to fix IE7 stuck hover */
  width             : 8em;
  list-style        : none;
  border-left       : 0.25em solid #eb6c00;
  border-bottom     : 1px solid #ccc0da;
  vertical-align    : bottom; /* Fix IE5-Win */
}

.floating-menu ul a,
.floating-menu ul li {
  display           : block;
  text-decoration   : none;
  text-align        : center;
  color             : #ccc0da;
  background        : #5f4970;
  vertical-align    : bottom; /* Fix IE5-Win */
}

.floating-menu ul ul {
/*  Rest of styling in hover to fix IE hover bug */
    display : none;
}

/* Menu item hover effects */
.floating-menu a:hover,
.floating-menu li:hover {
    color           : #5f4970;
    background      : #ccc0da;
    width           : 8em;
}

.floating-menu ul.l-1 li:hover ul.l-2 {
    position    : absolute;
    left        : -0.25em;
    top         : 0px;
    display     : block;

    /* These give tracking error bands around popup items.
     * This doesn't work for IE7 without a background image.
     */
    padding             : 1.5em 1.5em 1.5em 0em;
    background-image    : url(ie7/transparent-bg.gif);
    background-repeat   : repeat;
}

.floating-menu ul.l-2 li:hover ul.l-3,
.floating-menu ul.l-3 li:hover ul.l-4,
.floating-menu ul.l-4 li:hover ul.l-5 {
    position    : absolute;
    left        : 7.75em;   /* Just inside the right edge of the parent */
    top         : -1.5em;   /* Compensate for tracking guard band at top */
    display     : block;

    /* These give tracking error bands around popup items.
     * This doesn't work for IE7 without a background image.
     */
    padding             : 1.5em 1.5em 1.5em 0em;
    background-image    : url(ie7/transparent-bg.gif);
    background-repeat   : repeat;
}

.floating-menu ul.h-menu li {
    display         : inline;
    float           : left;
    border-right    : 0px; /* Turn off right border. */
}

.floating-menu li div.standard-range {
    margin : 0 auto;
    width  : 100%;
}

li div.right-align-standard {
    width      : 40%;
    text-align : right;
    display    : inline-block;
}
li div.center {
    width      : 20%;
    display    : inline-block;
    text-align : center;
}
li div.left-align-standard {
    width      : 40%;
    display    : inline-block;
    text-align : left;
}
.floating-menu ul.h-standards li,
.floating-menu ul.h-standards a {
    width : 3.5em;
}

.floating-menu ul.h-standards div.standard {
}
.floating-menu ul.h-standards li.unused-standard:hover,
.floating-menu ul.h-standards li.unused-standard {
    color      : #837093;
    background : #5f4970;
}
.floating-menu ul.h-standards li.standard div,
.floating-menu ul.h-standards li.unused-standard div {
    width      : 80%;
    text-align : right;
    display    : inline-block;
}
.floating-menu ul.h-keywords {
    width : 43.75em; /* 5 * ( 8.5em + 0.25em ) */
}

.floating-menu ul.h-models {
    width : 43.75em; /* 5 * ( 8.5em + 0.25em ) */
}

.floating-menu ul.h-models li,
.floating-menu ul.h-models a {
    width : 8.5em;
}

div.body {
    background : #ffffff;
    position   : absolute;
    top        : 3em;
    bottom     : 0em;
    left       : 0em;
    right      : 0em;
}

div.body * {
    padding : 0em;
    margin  : 0.5em 0em 0em 0em;
    border  : none;
}

div.body div {
    margin-top : 0em;
}

div.body-content {
    background  : #ffffff;
    border-left : 2px solid #eb6c00;
}

div.body_block {
    margin-left     : 10px;
    margin-right    : 10px;
    margin-bottom   : 0em;
    margin-top      : 0.5em;
    padding-top     : 0.25em;
    padding-bottom  : 1.5em;
    border-bottom   : 1px solid #eb6c00;
    font-size       : 80%;
}

.body_block .block_title {
    color         : #5f4970;
    font-size     : 135%;
    margin-bottom : 0.5em;
}

thead .block_title {
    margin-left : -1.25em;
}

.body_block .block_title div.standard {
    font-family : Arial, Helvetica, sans-serif;
    margin-left : -7em;
    width       : 6.25em;
    float       : left;
    font-size   : 115%;
    text-align  : right;
}

.body_block .block_title div.rule {
    font-family : Arial, Helvetica, sans-serif;
    font-size   : 110%;
    margin-left : -8.75em;
    width       : 7.75em;
    float       : left;
}

.body_block .block_title div.rule div {
    text-align : right;
}

.body_block .block_title div.rule span {
    font-size  : 80%;
    font-style : italic;
}

div.body_block .title {
    color         : #5f4970;
    text-align    : left;
    font-weight   : bold;
    margin-top    : 0.75em;
    margin-bottom : 0.5em;
}

div.body_block ul,
div.body_block ol {
    margin-left : 2em;
}

div.footer {
    text-align     : center;
    padding-bottom : 1em;
}

div.footer span {
    font-size : 75%;
}

pre {
    font-family : 'Courier New', monospace;
    font-size   : 85%; /* Forces font sizes to work in all browsers (i.e. IE) */
}

pre .kw1, pre .kw2, pre .kw3, pre .kw4, pre .kw5 {
    color:#0000ff;
}

pre .coMULTI, pre .co0, pre .co1, pre .co2, pre .co3 {
    color:#008000;
}

pre .es0, pre .es1, pre .es2, pre .es3, pre .es4, pre .es5, pre .esHARD, pre .nu0, pre .nu1, pre .nu2, pre .nu3, pre .nu4, pre .nu5, pre .nu6, pre .nu7, pre .nu8, pre .nu9, pre .nu10, pre .nu11, pre .nu12, pre .nu13, pre .nu14, pre .nu15, pre .nu16, pre .nu17, pre .nu18, pre .nu19, pre .st0 {
    color:#8080ff;
}

pre .br0 {
    color:#ff8080;
}

pre .me1, pre .me2 {
    color:#c00000;
}

pre .sy0, pre .sy1, pre .sy2, pre .sy3, pre .sy4 {
    color:#888888;
}

div.xref {
    margin-top  : 6pt;
    margin-left : 20px;
}

div.xref td {
    color          : #5f4970;
    vertical-align : top;
}

div.xref td.from {
    text-align : right;
}

div.xref td.level,
div.xref td.target {
    padding-left:1em;
}

div.body-content a {
    text-decoration : none;
    color           : #eb6c00;
}

div.body-content a:hover {
    text-decoration : underline;
}

@media screen {
    div.nav div.page_title {
        position : fixed;
    }
    div.body-content {
        margin-left : 10em;
    }
    div.body {
        overflow : auto;
    }
}
@media print {
    div.nav div.page_title {
        position  : relative;
        font-size : 150%;
    }
    div.floating-menu,
    div.noprint {
        display : none;
    }
    div.body {
        overflow : visible;
    }
}
@media print {
    div.body-content {
        margin-left : 0em;
        border-left : 0em;
    }
}

  </style>
</head>
<body>
  <!--[if lt IE 8]>
  <script src='ie7/IE8.js'></script>
  <![endif]-->
  <div class='nav'>
    <div class='floating-menu'>
  <ul class='l-1'>
    <li style='z-index:10000'>Menu
      <ul class='l-2'>
       <li style='z-index:9999;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         S Standards
    <ul class='l-3'>
      <li style='z-index:10000;'>
        <div class='standard-range'><div class='right-align-standard'>1&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>100&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s1'><div>1&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s2'><div>2&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s3'><div>3&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s4'><div>4&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s5'><div>5&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s6'><div>6&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s7'><div>7&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s8'><div>8&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s9'><div>9&nbsp;S</div></a></li>
      <li class='unused-standard'><div>10&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s11'><div>11&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s12'><div>12&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s13'><div>13&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s14'><div>14&nbsp;S</div></a></li>
      <li class='unused-standard'><div>15&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s16'><div>16&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s17'><div>17&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s18'><div>18&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s19'><div>19&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s20'><div>20&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s21'><div>21&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s22'><div>22&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s23'><div>23&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s24'><div>24&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s25'><div>25&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s26'><div>26&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s27'><div>27&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s28'><div>28&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s29'><div>29&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s30'><div>30&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s31'><div>31&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s32'><div>32&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s33'><div>33&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s34'><div>34&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s35'><div>35&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s36'><div>36&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s37'><div>37&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s38'><div>38&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s39'><div>39&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s40'><div>40&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s41'><div>41&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s42'><div>42&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s43'><div>43&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s44'><div>44&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s45'><div>45&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s46'><div>46&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s47'><div>47&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s48'><div>48&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s49'><div>49&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s50'><div>50&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s51'><div>51&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s52'><div>52&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s53'><div>53&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s54'><div>54&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s55'><div>55&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s56'><div>56&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s57'><div>57&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s58'><div>58&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s59'><div>59&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s60'><div>60&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s61'><div>61&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s62'><div>62&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s63'><div>63&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s64'><div>64&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s65'><div>65&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s66'><div>66&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s67'><div>67&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s68'><div>68&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s69'><div>69&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s70'><div>70&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s71'><div>71&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s72'><div>72&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s73'><div>73&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s74'><div>74&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s75'><div>75&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s76'><div>76&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s77'><div>77&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s78'><div>78&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s79'><div>79&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s80'><div>80&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s81'><div>81&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s82'><div>82&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s83'><div>83&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s84'><div>84&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s85'><div>85&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s86'><div>86&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s87'><div>87&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s88'><div>88&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s89'><div>89&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s90'><div>90&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s91'><div>91&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s92'><div>92&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s93'><div>93&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s94'><div>94&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s95'><div>95&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s96'><div>96&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s97'><div>97&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s98'><div>98&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s99'><div>99&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s100'><div>100&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9999;'>
        <div class='standard-range'><div class='right-align-standard'>101&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>200&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s101'><div>101&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s102'><div>102&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s103'><div>103&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s104'><div>104&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s105'><div>105&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s106'><div>106&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s107'><div>107&nbsp;S</div></a></li>
      <li class='unused-standard'><div>108&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s109'><div>109&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s110'><div>110&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s111'><div>111&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s112'><div>112&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s113'><div>113&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s114'><div>114&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s115'><div>115&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s116'><div>116&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s117'><div>117&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s118'><div>118&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s119'><div>119&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s120'><div>120&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s121'><div>121&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s122'><div>122&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s123'><div>123&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s124'><div>124&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s125'><div>125&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s126'><div>126&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s127'><div>127&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s128'><div>128&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s129'><div>129&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s130'><div>130&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s131'><div>131&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s132'><div>132&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s133'><div>133&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s134'><div>134&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s135'><div>135&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s136'><div>136&nbsp;S</div></a></li>
      <li class='unused-standard'><div>137&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s138'><div>138&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s139'><div>139&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s140'><div>140&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s141'><div>141&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s142'><div>142&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s143'><div>143&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s144'><div>144&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s145'><div>145&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s146'><div>146&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s147'><div>147&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s148'><div>148&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s149'><div>149&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s150'><div>150&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s151'><div>151&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s152'><div>152&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s153'><div>153&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s154'><div>154&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s155'><div>155&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s156'><div>156&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s157'><div>157&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s158'><div>158&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s159'><div>159&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s160'><div>160&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s161'><div>161&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s162'><div>162&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s163'><div>163&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s164'><div>164&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s165'><div>165&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s166'><div>166&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s167'><div>167&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s168'><div>168&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s169'><div>169&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s170'><div>170&nbsp;S</div></a></li>
      <li class='unused-standard'><div>171&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s172'><div>172&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s173'><div>173&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s174'><div>174&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s175'><div>175&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s176'><div>176&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s177'><div>177&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s178'><div>178&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s179'><div>179&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s180'><div>180&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s181'><div>181&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s182'><div>182&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s183'><div>183&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s184'><div>184&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s185'><div>185&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s186'><div>186&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s187'><div>187&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s188'><div>188&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s189'><div>189&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s190'><div>190&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s191'><div>191&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s192'><div>192&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s193'><div>193&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s194'><div>194&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s195'><div>195&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s196'><div>196&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s197'><div>197&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s198'><div>198&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s199'><div>199&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s200'><div>200&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9998;'>
        <div class='standard-range'><div class='right-align-standard'>201&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>300&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s201'><div>201&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s202'><div>202&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s203'><div>203&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s204'><div>204&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s205'><div>205&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s206'><div>206&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s207'><div>207&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s208'><div>208&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s209'><div>209&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s210'><div>210&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s211'><div>211&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s212'><div>212&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s213'><div>213&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s214'><div>214&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s215'><div>215&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s216'><div>216&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s217'><div>217&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s218'><div>218&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s219'><div>219&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s220'><div>220&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s221'><div>221&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s222'><div>222&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s223'><div>223&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s224'><div>224&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s225'><div>225&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s226'><div>226&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s227'><div>227&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s228'><div>228&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s229'><div>229&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s230'><div>230&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s231'><div>231&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s232'><div>232&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s233'><div>233&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s234'><div>234&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s235'><div>235&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s236'><div>236&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s237'><div>237&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s238'><div>238&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s239'><div>239&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s240'><div>240&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s241'><div>241&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s242'><div>242&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s243'><div>243&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s244'><div>244&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s245'><div>245&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s246'><div>246&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s247'><div>247&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s248'><div>248&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s249'><div>249&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s250'><div>250&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s251'><div>251&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s252'><div>252&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s253'><div>253&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s254'><div>254&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s255'><div>255&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s256'><div>256&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s257'><div>257&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s258'><div>258&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s259'><div>259&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s260'><div>260&nbsp;S</div></a></li>
      <li class='unused-standard'><div>261&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s262'><div>262&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s263'><div>263&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s264'><div>264&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s265'><div>265&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s266'><div>266&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s267'><div>267&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s268'><div>268&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s269'><div>269&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s270'><div>270&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s271'><div>271&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s272'><div>272&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s273'><div>273&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s274'><div>274&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s275'><div>275&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s276'><div>276&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s277'><div>277&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s278'><div>278&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s279'><div>279&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s280'><div>280&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s281'><div>281&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s282'><div>282&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s283'><div>283&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s284'><div>284&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s285'><div>285&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s286'><div>286&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s287'><div>287&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s288'><div>288&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s289'><div>289&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s290'><div>290&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s291'><div>291&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s292'><div>292&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s293'><div>293&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s294'><div>294&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s295'><div>295&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s296'><div>296&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s297'><div>297&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s298'><div>298&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s299'><div>299&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s300'><div>300&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9997;'>
        <div class='standard-range'><div class='right-align-standard'>301&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>400&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s301'><div>301&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s302'><div>302&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s303'><div>303&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s304'><div>304&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s305'><div>305&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s306'><div>306&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s307'><div>307&nbsp;S</div></a></li>
      <li class='unused-standard'><div>308&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s309'><div>309&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s310'><div>310&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s311'><div>311&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s312'><div>312&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s313'><div>313&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s314'><div>314&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s315'><div>315&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s316'><div>316&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s317'><div>317&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s318'><div>318&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s319'><div>319&nbsp;S</div></a></li>
      <li class='unused-standard'><div>320&nbsp;S</div></li>
      <li class='unused-standard'><div>321&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s322'><div>322&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s323'><div>323&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s324'><div>324&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s325'><div>325&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s326'><div>326&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s327'><div>327&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s328'><div>328&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s329'><div>329&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s330'><div>330&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s331'><div>331&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s332'><div>332&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s333'><div>333&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s334'><div>334&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s335'><div>335&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s336'><div>336&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s337'><div>337&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s338'><div>338&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s339'><div>339&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s340'><div>340&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s341'><div>341&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s342'><div>342&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s343'><div>343&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s344'><div>344&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s345'><div>345&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s346'><div>346&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s347'><div>347&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s348'><div>348&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s349'><div>349&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s350'><div>350&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s351'><div>351&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s352'><div>352&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s353'><div>353&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s354'><div>354&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s355'><div>355&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s356'><div>356&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s357'><div>357&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s358'><div>358&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s359'><div>359&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s360'><div>360&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s361'><div>361&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s362'><div>362&nbsp;S</div></a></li>
      <li class='unused-standard'><div>363&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s364'><div>364&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s365'><div>365&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s366'><div>366&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s367'><div>367&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s368'><div>368&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s369'><div>369&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s370'><div>370&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s371'><div>371&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s372'><div>372&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s373'><div>373&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s374'><div>374&nbsp;S</div></a></li>
      <li class='unused-standard'><div>375&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s376'><div>376&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s377'><div>377&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s378'><div>378&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s379'><div>379&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s380'><div>380&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s381'><div>381&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s382'><div>382&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s383'><div>383&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s384'><div>384&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s385'><div>385&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s386'><div>386&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s387'><div>387&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s388'><div>388&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s389'><div>389&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s390'><div>390&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s391'><div>391&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s392'><div>392&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s393'><div>393&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s394'><div>394&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s395'><div>395&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s396'><div>396&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s397'><div>397&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s398'><div>398&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s399'><div>399&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s400'><div>400&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9996;'>
        <div class='standard-range'><div class='right-align-standard'>401&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>500&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s401'><div>401&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s402'><div>402&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s403'><div>403&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s404'><div>404&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s405'><div>405&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s406'><div>406&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s407'><div>407&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s408'><div>408&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s409'><div>409&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s410'><div>410&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s411'><div>411&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s412'><div>412&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s413'><div>413&nbsp;S</div></a></li>
      <li class='unused-standard'><div>414&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s415'><div>415&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s416'><div>416&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s417'><div>417&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s418'><div>418&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s419'><div>419&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s420'><div>420&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s421'><div>421&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s422'><div>422&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s423'><div>423&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s424'><div>424&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s425'><div>425&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s426'><div>426&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s427'><div>427&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s428'><div>428&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s429'><div>429&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s430'><div>430&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s431'><div>431&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s432'><div>432&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s433'><div>433&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s434'><div>434&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s435'><div>435&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s436'><div>436&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s437'><div>437&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s438'><div>438&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s439'><div>439&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s440'><div>440&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s441'><div>441&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s442'><div>442&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s443'><div>443&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s444'><div>444&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s445'><div>445&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s446'><div>446&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s447'><div>447&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s448'><div>448&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s449'><div>449&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s450'><div>450&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s451'><div>451&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s452'><div>452&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s453'><div>453&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s454'><div>454&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s455'><div>455&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s456'><div>456&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s457'><div>457&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s458'><div>458&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s459'><div>459&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s460'><div>460&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s461'><div>461&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s462'><div>462&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s463'><div>463&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s464'><div>464&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s465'><div>465&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s466'><div>466&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s467'><div>467&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s468'><div>468&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s469'><div>469&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s470'><div>470&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s471'><div>471&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s472'><div>472&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s473'><div>473&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s474'><div>474&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s475'><div>475&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s476'><div>476&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s477'><div>477&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s478'><div>478&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s479'><div>479&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s480'><div>480&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s481'><div>481&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s482'><div>482&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s483'><div>483&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s484'><div>484&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s485'><div>485&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s486'><div>486&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s487'><div>487&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s488'><div>488&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s489'><div>489&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s490'><div>490&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s491'><div>491&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s492'><div>492&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s493'><div>493&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s494'><div>494&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s495'><div>495&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s496'><div>496&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s497'><div>497&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s498'><div>498&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s499'><div>499&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s500'><div>500&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9995;'>
        <div class='standard-range'><div class='right-align-standard'>501&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>600&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s501'><div>501&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s502'><div>502&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s503'><div>503&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s504'><div>504&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s505'><div>505&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s506'><div>506&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s507'><div>507&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s508'><div>508&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s509'><div>509&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s510'><div>510&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s511'><div>511&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s512'><div>512&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s513'><div>513&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s514'><div>514&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s515'><div>515&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s516'><div>516&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s517'><div>517&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s518'><div>518&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s519'><div>519&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s520'><div>520&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s521'><div>521&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s522'><div>522&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s523'><div>523&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s524'><div>524&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s525'><div>525&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s526'><div>526&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s527'><div>527&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s528'><div>528&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s529'><div>529&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s530'><div>530&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s531'><div>531&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s532'><div>532&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s533'><div>533&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s534'><div>534&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s535'><div>535&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s536'><div>536&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s537'><div>537&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s538'><div>538&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s539'><div>539&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s540'><div>540&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s541'><div>541&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s542'><div>542&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s543'><div>543&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s544'><div>544&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s545'><div>545&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s546'><div>546&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s547'><div>547&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s548'><div>548&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s549'><div>549&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s550'><div>550&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s551'><div>551&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s552'><div>552&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s553'><div>553&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s554'><div>554&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s555'><div>555&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s556'><div>556&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s557'><div>557&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s558'><div>558&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s559'><div>559&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s560'><div>560&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s561'><div>561&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s562'><div>562&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s563'><div>563&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s564'><div>564&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s565'><div>565&nbsp;S</div></a></li>
      <li class='unused-standard'><div>566&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s567'><div>567&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s568'><div>568&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s569'><div>569&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s570'><div>570&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s571'><div>571&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s572'><div>572&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s573'><div>573&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s574'><div>574&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s575'><div>575&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s576'><div>576&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s577'><div>577&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s578'><div>578&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s579'><div>579&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s580'><div>580&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s581'><div>581&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s582'><div>582&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s583'><div>583&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s584'><div>584&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s585'><div>585&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s586'><div>586&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s587'><div>587&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s588'><div>588&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s589'><div>589&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s590'><div>590&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s591'><div>591&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s592'><div>592&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s593'><div>593&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s594'><div>594&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s595'><div>595&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s596'><div>596&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s597'><div>597&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s598'><div>598&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s599'><div>599&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s600'><div>600&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9994;'>
        <div class='standard-range'><div class='right-align-standard'>601&nbsp;S</div><div class='center'>to</div><div class='left-align-standard'>639&nbsp;S</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_s601'><div>601&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s602'><div>602&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s603'><div>603&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s604'><div>604&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s605'><div>605&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s606'><div>606&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s607'><div>607&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s608'><div>608&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s609'><div>609&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s610'><div>610&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s611'><div>611&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s612'><div>612&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s613'><div>613&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s614'><div>614&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s615'><div>615&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s616'><div>616&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s617'><div>617&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s618'><div>618&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s619'><div>619&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s620'><div>620&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s621'><div>621&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s622'><div>622&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s623'><div>623&nbsp;S</div></a></li>
      <li class='unused-standard'><div>624&nbsp;S</div></li>
      <li class='unused-standard'><div>625&nbsp;S</div></li>
      <li class='standard'><a href='standards.htm#standard_s626'><div>626&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s627'><div>627&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s628'><div>628&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s629'><div>629&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s630'><div>630&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s631'><div>631&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s632'><div>632&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s633'><div>633&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s634'><div>634&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s635'><div>635&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s636'><div>636&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s637'><div>637&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s638'><div>638&nbsp;S</div></a></li>
      <li class='standard'><a href='standards.htm#standard_s639'><div>639&nbsp;S</div></a></li>
    </ul> <!-- l-4 -->
      </li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9998;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         C Standards
    <ul class='l-3 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_c1'><div>1&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c2'><div>2&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c3'><div>3&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c4'><div>4&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c5'><div>5&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c6'><div>6&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c7'><div>7&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c8'><div>8&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c9'><div>9&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c10'><div>10&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c11'><div>11&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c12'><div>12&nbsp;C</div></a></li>
      <li class='standard'><a href='standards.htm#standard_c13'><div>13&nbsp;C</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9997;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         D Standards
    <ul class='l-3'>
      <li style='z-index:10000;'>
        <div class='standard-range'><div class='right-align-standard'>1&nbsp;D</div><div class='center'>to</div><div class='left-align-standard'>100&nbsp;D</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_d1'><div>1&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d2'><div>2&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d3'><div>3&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d4'><div>4&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d5'><div>5&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d6'><div>6&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d7'><div>7&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d8'><div>8&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d9'><div>9&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d10'><div>10&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d11'><div>11&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d12'><div>12&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d13'><div>13&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d14'><div>14&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d15'><div>15&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d16'><div>16&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d17'><div>17&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d18'><div>18&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d19'><div>19&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d20'><div>20&nbsp;D</div></a></li>
      <li class='unused-standard'><div>21&nbsp;D</div></li>
      <li class='standard'><a href='standards.htm#standard_d22'><div>22&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d23'><div>23&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d24'><div>24&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d25'><div>25&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d26'><div>26&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d27'><div>27&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d28'><div>28&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d29'><div>29&nbsp;D</div></a></li>
      <li class='unused-standard'><div>30&nbsp;D</div></li>
      <li class='unused-standard'><div>31&nbsp;D</div></li>
      <li class='unused-standard'><div>32&nbsp;D</div></li>
      <li class='standard'><a href='standards.htm#standard_d33'><div>33&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d34'><div>34&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d35'><div>35&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d36'><div>36&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d37'><div>37&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d38'><div>38&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d39'><div>39&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d40'><div>40&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d41'><div>41&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d42'><div>42&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d43'><div>43&nbsp;D</div></a></li>
      <li class='unused-standard'><div>44&nbsp;D</div></li>
      <li class='standard'><a href='standards.htm#standard_d45'><div>45&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d46'><div>46&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d47'><div>47&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d48'><div>48&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d49'><div>49&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d50'><div>50&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d51'><div>51&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d52'><div>52&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d53'><div>53&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d54'><div>54&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d55'><div>55&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d56'><div>56&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d57'><div>57&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d58'><div>58&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d59'><div>59&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d60'><div>60&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d61'><div>61&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d62'><div>62&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d63'><div>63&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d64'><div>64&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d65'><div>65&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d66'><div>66&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d67'><div>67&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d68'><div>68&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d69'><div>69&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d70'><div>70&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d71'><div>71&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d72'><div>72&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d73'><div>73&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d74'><div>74&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d75'><div>75&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d76'><div>76&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d77'><div>77&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d78'><div>78&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d79'><div>79&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d80'><div>80&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d81'><div>81&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d82'><div>82&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d83'><div>83&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d84'><div>84&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d85'><div>85&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d86'><div>86&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d87'><div>87&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d88'><div>88&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d89'><div>89&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d90'><div>90&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d91'><div>91&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d92'><div>92&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d93'><div>93&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d94'><div>94&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d95'><div>95&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d96'><div>96&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d97'><div>97&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d98'><div>98&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d99'><div>99&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d100'><div>100&nbsp;D</div></a></li>
    </ul> <!-- l-4 -->
      </li>
      <li style='z-index:9999;'>
        <div class='standard-range'><div class='right-align-standard'>101&nbsp;D</div><div class='center'>to</div><div class='left-align-standard'>113&nbsp;D</div></div>
    <ul class='l-4 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_d101'><div>101&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d102'><div>102&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d103'><div>103&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d104'><div>104&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d105'><div>105&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d106'><div>106&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d107'><div>107&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d108'><div>108&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d109'><div>109&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d110'><div>110&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d111'><div>111&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d112'><div>112&nbsp;D</div></a></li>
      <li class='standard'><a href='standards.htm#standard_d113'><div>113&nbsp;D</div></a></li>
    </ul> <!-- l-4 -->
      </li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9996;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         X Standards
    <ul class='l-3 h-menu h-standards' style='width:37.5em;'>
      <li class='standard'><a href='standards.htm#standard_x1'><div>1&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x2'><div>2&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x3'><div>3&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x4'><div>4&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x5'><div>5&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x6'><div>6&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x7'><div>7&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x8'><div>8&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x9'><div>9&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x10'><div>10&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x11'><div>11&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x12'><div>12&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x13'><div>13&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x14'><div>14&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x15'><div>15&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x16'><div>16&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x17'><div>17&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x18'><div>18&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x19'><div>19&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x20'><div>20&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x21'><div>21&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x22'><div>22&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x23'><div>23&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x24'><div>24&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x25'><div>25&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x26'><div>26&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x27'><div>27&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x28'><div>28&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x29'><div>29&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x30'><div>30&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x31'><div>31&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x32'><div>32&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x33'><div>33&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x34'><div>34&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x35'><div>35&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x36'><div>36&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x37'><div>37&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x38'><div>38&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x39'><div>39&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x40'><div>40&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x41'><div>41&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x42'><div>42&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x43'><div>43&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x44'><div>44&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x45'><div>45&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x46'><div>46&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x47'><div>47&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x48'><div>48&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x49'><div>49&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x50'><div>50&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x51'><div>51&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x52'><div>52&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x53'><div>53&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x54'><div>54&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x55'><div>55&nbsp;X</div></a></li>
      <li class='unused-standard'><div>56&nbsp;X</div></li>
      <li class='standard'><a href='standards.htm#standard_x57'><div>57&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x58'><div>58&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x59'><div>59&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x60'><div>60&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x61'><div>61&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x62'><div>62&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x63'><div>63&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x64'><div>64&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x65'><div>65&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x66'><div>66&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x67'><div>67&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x68'><div>68&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x69'><div>69&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x70'><div>70&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x71'><div>71&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x72'><div>72&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x73'><div>73&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x74'><div>74&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x75'><div>75&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x76'><div>76&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x77'><div>77&nbsp;X</div></a></li>
      <li class='standard'><a href='standards.htm#standard_x78'><div>78&nbsp;X</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9995;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         I Standards
    <ul class='l-3 h-menu h-standards' style='width:3.75em;'>
      <li class='standard'><a href='standards.htm#standard_i1'><div>1&nbsp;I</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9994;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         Q Standards
    <ul class='l-3 h-menu h-standards' style='width:18.75em;'>
      <li class='standard'><a href='standards.htm#standard_q1'><div>1&nbsp;Q</div></a></li>
      <li class='standard'><a href='standards.htm#standard_q2'><div>2&nbsp;Q</div></a></li>
      <li class='standard'><a href='standards.htm#standard_q3'><div>3&nbsp;Q</div></a></li>
      <li class='standard'><a href='standards.htm#standard_q4'><div>4&nbsp;Q</div></a></li>
      <li class='standard'><a href='standards.htm#standard_q5'><div>5&nbsp;Q</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9993;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         U Standards
    <ul class='l-3 h-menu h-standards' style='width:11.25em;'>
      <li class='standard'><a href='standards.htm#standard_u1'><div>1&nbsp;U</div></a></li>
      <li class='standard'><a href='standards.htm#standard_u2'><div>2&nbsp;U</div></a></li>
      <li class='standard'><a href='standards.htm#standard_u3'><div>3&nbsp;U</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9992;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         J Standards
    <ul class='l-3 h-menu h-standards' style='width:11.25em;'>
      <li class='standard'><a href='standards.htm#standard_j1'><div>1&nbsp;J</div></a></li>
      <li class='standard'><a href='standards.htm#standard_j2'><div>2&nbsp;J</div></a></li>
      <li class='standard'><a href='standards.htm#standard_j3'><div>3&nbsp;J</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9991;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         Z Standards
    <ul class='l-3 h-menu h-standards' style='width:3.75em;'>
      <li class='standard'><a href='standards.htm#standard_z1'><div>1&nbsp;Z</div></a></li>
    </ul> <!-- l-3 -->
       </li>
       <li style='z-index:9990;'>
         <!-- No <a> tag round content means item stays lit when in popup -->
         H Standards
    <ul class='l-3 h-menu h-standards' style='width:30em;'>
      <li class='standard'><a href='standards.htm#standard_h1'><div>1&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h2'><div>2&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h3'><div>3&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h4'><div>4&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h5'><div>5&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h6'><div>6&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h7'><div>7&nbsp;H</div></a></li>
      <li class='standard'><a href='standards.htm#standard_h8'><div>8&nbsp;H</div></a></li>
    </ul> <!-- l-3 -->
       </li>
    <li class='sep' style='z-index:9999;' />
        <li style='z-index:9989;'>
          <!-- No <a> tag round content means item stays lit when in popup -->
          By Keyword
          <ul class='l-3 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_decl'>Decl</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_class'>Class</a></div>
          <ul class='l-5 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_inherit'>Inherit</a></div>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_op'>Op</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_fn'>Fn</a></div>
          <ul class='l-5 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_fnpar'>Fnpar</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9998;'>
              <div class='standard-range'><a href='keywords.htm#keyword_id'>Id</a></div>
            </li>
            <li style='z-index:9997;'>
              <div class='standard-range'><a href='keywords.htm#keyword_obj'>Obj</a></div>
            </li>
            <li style='z-index:9996;'>
              <div class='standard-range'><a href='keywords.htm#keyword_template'>Template</a></div>
            </li>
            <li style='z-index:9995;'>
              <div class='standard-range'><a href='keywords.htm#keyword_type'>Type</a></div>
          <ul class='l-5 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_struct'>Struct</a></div>
            </li>
          </ul>
            </li>
          </ul>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_exp'>Exp</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_arr'>Arr</a></div>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_conv'>Conv</a></div>
            </li>
            <li style='z-index:9998;'>
              <div class='standard-range'><a href='keywords.htm#keyword_ptr'>Ptr</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9998;'>
              <div class='standard-range'><a href='keywords.htm#keyword_file'>File</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_namespace'>Namespace</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9997;'>
              <div class='standard-range'><a href='keywords.htm#keyword_flow'>Flow</a></div>
            </li>
            <li style='z-index:9996;'>
              <div class='standard-range'><a href='keywords.htm#keyword_lib'>Lib</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_io'>Io</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9995;'>
              <div class='standard-range'><a href='keywords.htm#keyword_lit'>Lit</a></div>
            </li>
            <li style='z-index:9994;'>
              <div class='standard-range'><a href='keywords.htm#keyword_metric'>Metric</a></div>
            </li>
            <li style='z-index:9993;'>
              <div class='standard-range'><a href='keywords.htm#keyword_misc'>Misc</a></div>
            </li>
            <li style='z-index:9992;'>
              <div class='standard-range'><a href='keywords.htm#keyword_pre'>Pre</a></div>
            </li>
            <li style='z-index:9991;'>
              <div class='standard-range'><a href='keywords.htm#keyword_stmt'>Stmt</a></div>
          <ul class='l-4 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_cond'>Cond</a></div>
          <ul class='l-5 h-menu'>
            <li style='z-index:10000;'>
              <div class='standard-range'><a href='keywords.htm#keyword_if'>If</a></div>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_switch'>Switch</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9999;'>
              <div class='standard-range'><a href='keywords.htm#keyword_loop'>Loop</a></div>
            </li>
            <li style='z-index:9998;'>
              <div class='standard-range'><a href='keywords.htm#keyword_jmp'>Jmp</a></div>
            </li>
            <li style='z-index:9997;'>
              <div class='standard-range'><a href='keywords.htm#keyword_except'>Except</a></div>
            </li>
          </ul>
            </li>
            <li style='z-index:9990;'>
              <div class='standard-range'><a href='keywords.htm#keyword_style'>Style</a></div>
            </li>
          </ul>
        </li>
        <li style='z-index:9988;'>
          <!-- No <a> tag round content means item stays lit when in popup -->
          By Classification
          <ul class='l-3 h-menu h-keywords'>
    <li><a href='classifications.htm#classification_allocation'>Allocation</a></li>
    <li><a href='classifications.htm#classification_complexity'>Complexity</a></li>
    <li><a href='classifications.htm#classification_dependability'>Dependability</a></li>
    <li><a href='classifications.htm#classification_fault'>Fault</a></li>
    <li><a href='classifications.htm#classification_maintainability'>Maintainability</a></li>
    <li><a href='classifications.htm#classification_portability'>Portability</a></li>
    <li><a href='classifications.htm#classification_style'>Style</a></li>
    <li><a href='classifications.htm#classification_testability'>Testability</a></li>
    <li><a href='classifications.htm#classification_vulnerabilities'>Vulnerabilities</a></li>
          </ul>
        </li>
    <li><a href='standard_flags.htm'>Std Modifiers</a></li>
    <li class='sep' style='z-index:9999;' />
        <li style='z-index:9987;'>
          <!-- No <a> tag round content means item stays lit when in popup -->
          Models
          <ul class='l-3 h-menu h-models'>
    <li><a href='cast_model.htm'>CAST</a></li>
    <li><a href='cert-c_model.htm'>CERT-C</a></li>
    <li><a href='cmse_model.htm'>CMSE</a></li>
    <li><a href='conform_model.htm'>CONFORM</a></li>
    <li><a href='cwe_model.htm'>CWE</a></li>
    <li><a href='customer_sample_model.htm'>Customer Sample</a></li>
    <li><a href='dera_model.htm'>DERA</a></li>
    <li><a href='eads-c_model.htm'>EADS-C</a></li>
    <li><a href='eads-cpp_model.htm'>EADS-C++</a></li>
    <li><a href='fsb582-c_model.htm'>FSB582-C</a></li>
    <li><a href='fsb582-cpp_model.htm'>FSB582-C++</a></li>
    <li><a href='gjb_model.htm'>GJB</a></li>
    <li><a href='hicpp_model.htm'>HIC++</a></li>
    <li><a href='his_model.htm'>HIS</a></li>
    <li><a href='jpl_model.htm'>JPL</a></li>
    <li><a href='jsf++_av_model.htm'>JSF++ AV</a></li>
    <li><a href='lmtcp_model.htm'>LMTCP</a></li>
    <li><a href='legacy_model.htm'>Legacy</a></li>
    <li><a href='misra-ac_model.htm'>MISRA-AC</a></li>
    <li><a href='misra-cpp_2008_model.htm'>MISRA-C++:2008</a></li>
    <li><a href='misra-c_1998_model.htm'>MISRA-C:1998</a></li>
    <li><a href='misra-c_2004_model.htm'>MISRA-C:2004</a></li>
    <li><a href='misra-c_2012_model.htm'>MISRA-C:2012</a></li>
    <li><a href='netrino_model.htm'>NETRINO</a></li>
    <li><a href='runtime_model.htm'>RUNTIME</a></li>
    <li><a href='sec-c_model.htm'>SEC-C</a></li>
    <li><a href='standard_model.htm'>Standard</a></li>
    <li><a href='tbrun_requires_model.htm'>TBrun Requires</a></li>
    <li><a href='uml_model.htm'>UML</a></li>
    <li><a href='vsos_model.htm'>VSOS</a></li>
          </ul>
        </li>
      </ul>
    </li>
  </ul><!-- l-1 -->
    </div><!-- floating-menu -->
    <div class='page_title'>LDRA Standards for C / C++ by Keyword</div>
  </div><!-- nav -->
  <div class='body'>
    <div class='body-content'>
<div class='body_block'>
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_decl' name='keyword_decl'><div class='rule'><div class='id'>Decl</div></div></a><div class='headline'>Standards relating to declarations</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>436 S</td>      <td class='target'><a href='standards.htm#standard_s436'>Declaration does not specify an array.</a></td>    </tr>
    <tr>      <td class='from'>464 S</td>      <td class='target'><a href='standards.htm#standard_s464'>Use of auto specifier.</a></td>    </tr>
    <tr>      <td class='from'>515 S</td>      <td class='target'><a href='standards.htm#standard_s515'>More than one variable in declaration.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_class' name='keyword_class'><div class='rule'><div class='id'>Class</div></div></a><div class='headline'>Standards relating to classes</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>38 S</td>      <td class='target'><a href='standards.htm#standard_s38'>Use of static class member.</a></td>    </tr>
    <tr>      <td class='from'>162 S</td>      <td class='target'><a href='standards.htm#standard_s162'>Method defined within class declaration.</a></td>    </tr>
    <tr>      <td class='from'>165 S</td>      <td class='target'><a href='standards.htm#standard_s165'>Nested class declaration.</a></td>    </tr>
    <tr>      <td class='from'>166 S</td>      <td class='target'><a href='standards.htm#standard_s166'>Class declared in function body.</a></td>    </tr>
    <tr>      <td class='from'>167 S</td>      <td class='target'><a href='standards.htm#standard_s167'>Class variable declared in class definition.</a></td>    </tr>
    <tr>      <td class='from'>169 S</td>      <td class='target'><a href='standards.htm#standard_s169'>Use of forward reference of class member.</a></td>    </tr>
    <tr>      <td class='from'>196 S</td>      <td class='target'><a href='standards.htm#standard_s196'>Access specifier missing (added by Testbed).</a></td>    </tr>
    <tr>      <td class='from'>197 S</td>      <td class='target'><a href='standards.htm#standard_s197'>Access specifiers in invalid order.</a></td>    </tr>
    <tr>      <td class='from'>202 S</td>      <td class='target'><a href='standards.htm#standard_s202'>Class data is not explicitly private.</a></td>    </tr>
    <tr>      <td class='from'>206 S</td>      <td class='target'><a href='standards.htm#standard_s206'>Class initialiser out of order.</a></td>    </tr>
    <tr>      <td class='from'>212 S</td>      <td class='target'><a href='standards.htm#standard_s212'>Use of friend function in class.</a></td>    </tr>
    <tr>      <td class='from'>213 S</td>      <td class='target'><a href='standards.htm#standard_s213'>Use of friend class.</a></td>    </tr>
    <tr>      <td class='from'>214 S</td>      <td class='target'><a href='standards.htm#standard_s214'>Member not declared virtual.</a></td>    </tr>
    <tr>      <td class='from'>246 S</td>      <td class='target'><a href='standards.htm#standard_s246'>Class has missing access specifiers.</a></td>    </tr>
    <tr>      <td class='from'>258 S</td>      <td class='target'><a href='standards.htm#standard_s258'>More than one class in header file.</a></td>    </tr>
    <tr>      <td class='from'>262 S</td>      <td class='target'><a href='standards.htm#standard_s262'>Non virtual function redefined.</a></td>    </tr>
    <tr>      <td class='from'>282 S</td>      <td class='target'><a href='standards.htm#standard_s282'>Mutable keyword found.</a></td>    </tr>
    <tr>      <td class='from'>285 S</td>      <td class='target'><a href='standards.htm#standard_s285'>Class definition not needed in file.</a></td>    </tr>
    <tr>      <td class='from'>357 S</td>      <td class='target'><a href='standards.htm#standard_s357'>Base class is mixed virtual and non virtual.</a></td>    </tr>
    <tr>      <td class='from'>358 S</td>      <td class='target'><a href='standards.htm#standard_s358'>Class member name reused.</a></td>    </tr>
    <tr>      <td class='from'>392 S</td>      <td class='target'><a href='standards.htm#standard_s392'>Class data accessible thru non const member.</a></td>    </tr>
    <tr>      <td class='from'>393 S</td>      <td class='target'><a href='standards.htm#standard_s393'>Single parameter constructor not 'explicit'.</a></td>    </tr>
    <tr>      <td class='from'>418 S</td>      <td class='target'><a href='standards.htm#standard_s418'>Class Derivation is not public.</a></td>    </tr>
    <tr>      <td class='from'>419 S</td>      <td class='target'><a href='standards.htm#standard_s419'>Deprecated class initialisation.</a></td>    </tr>
    <tr>      <td class='from'>420 S</td>      <td class='target'><a href='standards.htm#standard_s420'>Virtual function should not be inline.</a></td>    </tr>
    <tr>      <td class='from'>468 S</td>      <td class='target'><a href='standards.htm#standard_s468'>Member function redeclared.</a></td>    </tr>
    <tr>      <td class='from'>501 S</td>      <td class='target'><a href='standards.htm#standard_s501'>Pure virtual member defined.</a></td>    </tr>
    <tr>      <td class='from'>544 S</td>      <td class='target'><a href='standards.htm#standard_s544'>Member re-declared pure.</a></td>    </tr>
    <tr>      <td class='from'>547 S</td>      <td class='target'><a href='standards.htm#standard_s547'>Base member not qualified.</a></td>    </tr>
    <tr>      <td class='from'>552 S</td>      <td class='target'><a href='standards.htm#standard_s552'>Class, enum, struct or union name reused.</a></td>    </tr>
    <tr>      <td class='from'>555 S</td>      <td class='target'><a href='standards.htm#standard_s555'>Base class member name not unique.</a></td>    </tr>
    <tr>      <td class='from'>559 S</td>      <td class='target'><a href='standards.htm#standard_s559'>Virtual member defined more than once.</a></td>    </tr>
    <tr>      <td class='from'>595 S</td>      <td class='target'><a href='standards.htm#standard_s595'>Base member with change of access.</a></td>    </tr>
    <tr>      <td class='from'>46 D</td>      <td class='target'><a href='standards.htm#standard_d46'>Member function may be declared const.</a></td>    </tr>
    <tr>      <td class='from'>79 D</td>      <td class='target'><a href='standards.htm#standard_d79'>Member function may be declared static.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_inherit' name='keyword_inherit'><div class='rule'><div class='id'>Inherit</div></div></a><div class='headline'>Standards relating to inheritance</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>28 S</td>      <td class='target'><a href='standards.htm#standard_s28'>Duplicated Base Classes in a Derived class.</a></td>    </tr>
    <tr>      <td class='from'>205 S</td>      <td class='target'><a href='standards.htm#standard_s205'>Use of multiple inheritance.</a></td>    </tr>
    <tr>      <td class='from'>211 S</td>      <td class='target'><a href='standards.htm#standard_s211'>Overloaded &amp;&amp;, || or comma.</a></td>    </tr>
    <tr>      <td class='from'>283 S</td>      <td class='target'><a href='standards.htm#standard_s283'>Multiple direct inheritance found.</a></td>    </tr>
    <tr>      <td class='from'>364 S</td>      <td class='target'><a href='standards.htm#standard_s364'>Inherited default parameter redefined.</a></td>    </tr>
    <tr>      <td class='from'>396 S</td>      <td class='target'><a href='standards.htm#standard_s396'>Possible ambiguous numeric/pointer overloads.</a></td>    </tr>
    <tr>      <td class='from'>448 S</td>      <td class='target'><a href='standards.htm#standard_s448'>Base class pointer cast to derived class.</a></td>    </tr>
    <tr>      <td class='from'>449 S</td>      <td class='target'><a href='standards.htm#standard_s449'>Derived class pointer cast to virtual base.</a></td>    </tr>
    <tr>      <td class='from'>521 S</td>      <td class='target'><a href='standards.htm#standard_s521'>Class derived from virtual base class.</a></td>    </tr>
    <tr>      <td class='from'>543 S</td>      <td class='target'><a href='standards.htm#standard_s543'>Virtual base not in diamond hierarchy.</a></td>    </tr>
    <tr>      <td class='from'>546 S</td>      <td class='target'><a href='standards.htm#standard_s546'>Overload resolution could be forward.</a></td>    </tr>
    <tr>      <td class='from'>551 S</td>      <td class='target'><a href='standards.htm#standard_s551'>Cast from base to derived for polymorphic type.</a></td>    </tr>
    <tr>      <td class='from'>601 S</td>      <td class='target'><a href='standards.htm#standard_s601'>Insufficient overridden members.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_op' name='keyword_op'><div class='rule'><div class='id'>Op</div></div></a><div class='headline'>Standards relating to operators</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>230 S</td>      <td class='target'><a href='standards.htm#standard_s230'>No copy constructor defined for class.</a></td>    </tr>
    <tr>      <td class='from'>231 S</td>      <td class='target'><a href='standards.htm#standard_s231'>No assignment operator defined for class.</a></td>    </tr>
    <tr>      <td class='from'>232 S</td>      <td class='target'><a href='standards.htm#standard_s232'>No destructor defined for class.</a></td>    </tr>
    <tr>      <td class='from'>233 S</td>      <td class='target'><a href='standards.htm#standard_s233'>No copy constructor for class with pointers.</a></td>    </tr>
    <tr>      <td class='from'>234 S</td>      <td class='target'><a href='standards.htm#standard_s234'>No assignment operator for class with pointers.</a></td>    </tr>
    <tr>      <td class='from'>235 S</td>      <td class='target'><a href='standards.htm#standard_s235'>No destructor for class with pointers.</a></td>    </tr>
    <tr>      <td class='from'>236 S</td>      <td class='target'><a href='standards.htm#standard_s236'>New used in class without assignment op.</a></td>    </tr>
    <tr>      <td class='from'>237 S</td>      <td class='target'><a href='standards.htm#standard_s237'>Assignment operator parameter not const.</a></td>    </tr>
    <tr>      <td class='from'>239 S</td>      <td class='target'><a href='standards.htm#standard_s239'>New used in class without copy constructor.</a></td>    </tr>
    <tr>      <td class='from'>244 S</td>      <td class='target'><a href='standards.htm#standard_s244'>new or delete overloaded.</a></td>    </tr>
    <tr>      <td class='from'>253 S</td>      <td class='target'><a href='standards.htm#standard_s253'>Opposite type operator missing.</a></td>    </tr>
    <tr>      <td class='from'>254 S</td>      <td class='target'><a href='standards.htm#standard_s254'>Operator = doesn't return reference to *this.</a></td>    </tr>
    <tr>      <td class='from'>260 S</td>      <td class='target'><a href='standards.htm#standard_s260'>No default constructor declared for class.</a></td>    </tr>
    <tr>      <td class='from'>266 S</td>      <td class='target'><a href='standards.htm#standard_s266'>Constructor defined within class declaration.</a></td>    </tr>
    <tr>      <td class='from'>303 S</td>      <td class='target'><a href='standards.htm#standard_s303'>Virtual class members need virtual destructor.</a></td>    </tr>
    <tr>      <td class='from'>319 S</td>      <td class='target'><a href='standards.htm#standard_s319'>Constructor has insufficient initialisers.</a></td>    </tr>
    <tr>      <td class='from'>391 S</td>      <td class='target'><a href='standards.htm#standard_s391'>Public constructor in abstract class.</a></td>    </tr>
    <tr>      <td class='from'>421 S</td>      <td class='target'><a href='standards.htm#standard_s421'>New or delete not explicitly static.</a></td>    </tr>
    <tr>      <td class='from'>423 S</td>      <td class='target'><a href='standards.htm#standard_s423'>Operator new and no operator delete.</a></td>    </tr>
    <tr>      <td class='from'>424 S</td>      <td class='target'><a href='standards.htm#standard_s424'>Operator new[] and no operator delete[].</a></td>    </tr>
    <tr>      <td class='from'>467 S</td>      <td class='target'><a href='standards.htm#standard_s467'>Virtual member called in ctor/dtor.</a></td>    </tr>
    <tr>      <td class='from'>469 S</td>      <td class='target'><a href='standards.htm#standard_s469'>No copy constructor for complex destructor.</a></td>    </tr>
    <tr>      <td class='from'>470 S</td>      <td class='target'><a href='standards.htm#standard_s470'>No assignment operator for complex destrtor.</a></td>    </tr>
    <tr>      <td class='from'>485 S</td>      <td class='target'><a href='standards.htm#standard_s485'>Array deletion without [].</a></td>    </tr>
    <tr>      <td class='from'>499 S</td>      <td class='target'><a href='standards.htm#standard_s499'>Too many default parameters in copy ctor.</a></td>    </tr>
    <tr>      <td class='from'>500 S</td>      <td class='target'><a href='standards.htm#standard_s500'>Class does not have a &lt;&lt; output operator.</a></td>    </tr>
    <tr>      <td class='from'>502 S</td>      <td class='target'><a href='standards.htm#standard_s502'>Delete contains number of elements.</a></td>    </tr>
    <tr>      <td class='from'>508 S</td>      <td class='target'><a href='standards.htm#standard_s508'>Operator &amp; overloaded.</a></td>    </tr>
    <tr>      <td class='from'>522 S</td>      <td class='target'><a href='standards.htm#standard_s522'>Public assign operator in abstract class.</a></td>    </tr>
    <tr>      <td class='from'>528 S</td>      <td class='target'><a href='standards.htm#standard_s528'>Base class constructor omitted (added by Testbed).</a></td>    </tr>
    <tr>      <td class='from'>529 S</td>      <td class='target'><a href='standards.htm#standard_s529'>Static member initialised/assigned in constructor.</a></td>    </tr>
    <tr>      <td class='from'>532 S</td>      <td class='target'><a href='standards.htm#standard_s532'>No copy ctor for templated copy ctor.</a></td>    </tr>
    <tr>      <td class='from'>533 S</td>      <td class='target'><a href='standards.htm#standard_s533'>No assgnmt optor for templated assgmnt op.</a></td>    </tr>
    <tr>      <td class='from'>549 S</td>      <td class='target'><a href='standards.htm#standard_s549'>Catch in c'tor/d'tor references nonstatic member.</a></td>    </tr>
    <tr>      <td class='from'>561 S</td>      <td class='target'><a href='standards.htm#standard_s561'>Use of dynamic type in c'tor/d'tor.</a></td>    </tr>
    <tr>      <td class='from'>569 S</td>      <td class='target'><a href='standards.htm#standard_s569'>Operator should be non class member.</a></td>    </tr>
    <tr>      <td class='from'>574 S</td>      <td class='target'><a href='standards.htm#standard_s574'>Operator new called with inconsistent type.</a></td>    </tr>
    <tr>      <td class='from'>597 S</td>      <td class='target'><a href='standards.htm#standard_s597'>Use of placement new.</a></td>    </tr>
    <tr>      <td class='from'>52 D</td>      <td class='target'><a href='standards.htm#standard_d52'>Member(s) not assigned in = operator.</a></td>    </tr>
    <tr>      <td class='from'>92 D</td>      <td class='target'><a href='standards.htm#standard_d92'>C'tor/d'tor calls virtual function.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_fn' name='keyword_fn'><div class='rule'><div class='id'>Fn</div></div></a><div class='headline'>Standards relating to functions</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>27 S</td>      <td class='target'><a href='standards.htm#standard_s27'>Void procedure with return statement.</a></td>    </tr>
    <tr>      <td class='from'>36 S</td>      <td class='target'><a href='standards.htm#standard_s36'>Function has no return statement.</a></td>    </tr>
    <tr>      <td class='from'>44 S</td>      <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    </tr>
    <tr>      <td class='from'>66 S</td>      <td class='target'><a href='standards.htm#standard_s66'>Function with empty return expression.</a></td>    </tr>
    <tr>      <td class='from'>88 S</td>      <td class='target'><a href='standards.htm#standard_s88'>Procedure is not pure assembler.</a></td>    </tr>
    <tr>      <td class='from'>99 S</td>      <td class='target'><a href='standards.htm#standard_s99'>Function use is not a call.</a></td>    </tr>
    <tr>      <td class='from'>101 S</td>      <td class='target'><a href='standards.htm#standard_s101'>Function return type inconsistent.</a></td>    </tr>
    <tr>      <td class='from'>102 S</td>      <td class='target'><a href='standards.htm#standard_s102'>Function and prototype return inconsistent (MR).</a></td>    </tr>
    <tr>      <td class='from'>118 S</td>      <td class='target'><a href='standards.htm#standard_s118'>main must be int (void) or int (int,char*[]).</a></td>    </tr>
    <tr>      <td class='from'>148 S</td>      <td class='target'><a href='standards.htm#standard_s148'>No return type for function/procedure.</a></td>    </tr>
    <tr>      <td class='from'>170 S</td>      <td class='target'><a href='standards.htm#standard_s170'>Procedure call has no prototype and no defn.</a></td>    </tr>
    <tr>      <td class='from'>296 S</td>      <td class='target'><a href='standards.htm#standard_s296'>Function declared at block scope.</a></td>    </tr>
    <tr>      <td class='from'>298 S</td>      <td class='target'><a href='standards.htm#standard_s298'>Non const pointer to function.</a></td>    </tr>
    <tr>      <td class='from'>299 S</td>      <td class='target'><a href='standards.htm#standard_s299'>Pointer to function declared without typedef.</a></td>    </tr>
    <tr>      <td class='from'>326 S</td>      <td class='target'><a href='standards.htm#standard_s326'>Declaration is missing type.</a></td>    </tr>
    <tr>      <td class='from'>399 S</td>      <td class='target'><a href='standards.htm#standard_s399'>Function declared more than once.</a></td>    </tr>
    <tr>      <td class='from'>460 S</td>      <td class='target'><a href='standards.htm#standard_s460'>Inline or template function not in header.</a></td>    </tr>
    <tr>      <td class='from'>471 S</td>      <td class='target'><a href='standards.htm#standard_s471'>Function returns constant value.</a></td>    </tr>
    <tr>      <td class='from'>496 S</td>      <td class='target'><a href='standards.htm#standard_s496'>Function call with no prior declaration.</a></td>    </tr>
    <tr>      <td class='from'>503 S</td>      <td class='target'><a href='standards.htm#standard_s503'>Function returns local resources.</a></td>    </tr>
    <tr>      <td class='from'>519 S</td>      <td class='target'><a href='standards.htm#standard_s519'>Return of reference parameter.</a></td>    </tr>
    <tr>      <td class='from'>548 S</td>      <td class='target'><a href='standards.htm#standard_s548'>Procedure body needs brackets.</a></td>    </tr>
    <tr>      <td class='from'>553 S</td>      <td class='target'><a href='standards.htm#standard_s553'>Function and proto should both be static.</a></td>    </tr>
    <tr>      <td class='from'>612 S</td>      <td class='target'><a href='standards.htm#standard_s612'>inline function should be declared static.</a></td>    </tr>
    <tr>      <td class='from'>617 S</td>      <td class='target'><a href='standards.htm#standard_s617'>Function call may return unexpected value.</a></td>    </tr>
    <tr>      <td class='from'>619 S</td>      <td class='target'><a href='standards.htm#standard_s619'>Function address compared with zero or NULL.</a></td>    </tr>
    <tr>      <td class='from'>5 C</td>      <td class='target'><a href='standards.htm#standard_c5'>Procedure contains infinite loop.</a></td>    </tr>
    <tr>      <td class='from'>2 D</td>      <td class='target'><a href='standards.htm#standard_d2'>Function does not return a value on all paths.</a></td>    </tr>
    <tr>      <td class='from'>6 D</td>      <td class='target'><a href='standards.htm#standard_d6'>Recursion in procedure calls found.</a></td>    </tr>
    <tr>      <td class='from'>9 D</td>      <td class='target'><a href='standards.htm#standard_d9'>Defined parameter has possible clear path.</a></td>    </tr>
    <tr>      <td class='from'>19 D</td>      <td class='target'><a href='standards.htm#standard_d19'>Procedure called before being defined.</a></td>    </tr>
    <tr>      <td class='from'>22 D</td>      <td class='target'><a href='standards.htm#standard_d22'>Function has global variable side effects.</a></td>    </tr>
    <tr>      <td class='from'>24 D</td>      <td class='target'><a href='standards.htm#standard_d24'>Procedure definition has no associated prototype.</a></td>    </tr>
    <tr>      <td class='from'>34 D</td>      <td class='target'><a href='standards.htm#standard_d34'>Procedure name re-used in different files.</a></td>    </tr>
    <tr>      <td class='from'>36 D</td>      <td class='target'><a href='standards.htm#standard_d36'>Prototype and definition name mismatch.</a></td>    </tr>
    <tr>      <td class='from'>37 D</td>      <td class='target'><a href='standards.htm#standard_d37'>Function has persistent local side effects.</a></td>    </tr>
    <tr>      <td class='from'>41 D</td>      <td class='target'><a href='standards.htm#standard_d41'>Procedure call has no prototype declared.</a></td>    </tr>
    <tr>      <td class='from'>42 D</td>      <td class='target'><a href='standards.htm#standard_d42'>Local pointer returned in function result.</a></td>    </tr>
    <tr>      <td class='from'>61 D</td>      <td class='target'><a href='standards.htm#standard_d61'>Procedure should be declared static.</a></td>    </tr>
    <tr>      <td class='from'>63 D</td>      <td class='target'><a href='standards.htm#standard_d63'>No definition in system for prototyped procedure.</a></td>    </tr>
    <tr>      <td class='from'>65 D</td>      <td class='target'><a href='standards.htm#standard_d65'>Void function has no side effects.</a></td>    </tr>
    <tr>      <td class='from'>67 D</td>      <td class='target'><a href='standards.htm#standard_d67'>Void function has global variable side effects.</a></td>    </tr>
    <tr>      <td class='from'>68 D</td>      <td class='target'><a href='standards.htm#standard_d68'>Void function has persistent local side effects.</a></td>    </tr>
    <tr>      <td class='from'>76 D</td>      <td class='target'><a href='standards.htm#standard_d76'>Procedure is not called or referenced in code analysed.</a></td>    </tr>
    <tr>      <td class='from'>77 D</td>      <td class='target'><a href='standards.htm#standard_d77'>Local structure returned in function result.</a></td>    </tr>
    <tr>      <td class='from'>80 D</td>      <td class='target'><a href='standards.htm#standard_d80'>Potentially unused function-modified value.</a></td>    </tr>
    <tr>      <td class='from'>91 D</td>      <td class='target'><a href='standards.htm#standard_d91'>Function return value potentially unused.</a></td>    </tr>
    <tr>      <td class='from'>101 D</td>      <td class='target'><a href='standards.htm#standard_d101'>Function has static member variable side effects.</a></td>    </tr>
    <tr>      <td class='from'>102 D</td>      <td class='target'><a href='standards.htm#standard_d102'>Void function has static member variable side effects.</a></td>    </tr>
    <tr>      <td class='from'>106 D</td>      <td class='target'><a href='standards.htm#standard_d106'>No prototype for non-static function.</a></td>    </tr>
    <tr>      <td class='from'>62 X</td>      <td class='target'><a href='standards.htm#standard_x62'>Function prototype/defn return type mismatch (MR).</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_fnpar' name='keyword_fnpar'><div class='rule'><div class='id'>Fnpar</div></div></a><div class='headline'>Standards relating to function parameters</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>14 S</td>      <td class='target'><a href='standards.htm#standard_s14'>Procedural parameter declared.</a></td>    </tr>
    <tr>      <td class='from'>18 S</td>      <td class='target'><a href='standards.htm#standard_s18'>More than *** parameters in procedure.</a></td>    </tr>
    <tr>      <td class='from'>19 S</td>      <td class='target'><a href='standards.htm#standard_s19'>Procedural para used in an uncalled procedure.</a></td>    </tr>
    <tr>      <td class='from'>20 S</td>      <td class='target'><a href='standards.htm#standard_s20'>Parameter not declared explicitly.</a></td>    </tr>
    <tr>      <td class='from'>21 S</td>      <td class='target'><a href='standards.htm#standard_s21'>Number of parameters does not match.</a></td>    </tr>
    <tr>      <td class='from'>34 S</td>      <td class='target'><a href='standards.htm#standard_s34'>No parameters declared in proc specification.</a></td>    </tr>
    <tr>      <td class='from'>37 S</td>      <td class='target'><a href='standards.htm#standard_s37'>Procedure parameter has a type but no identifier.</a></td>    </tr>
    <tr>      <td class='from'>41 S</td>      <td class='target'><a href='standards.htm#standard_s41'>Ellipsis used in procedure parameter list.</a></td>    </tr>
    <tr>      <td class='from'>63 S</td>      <td class='target'><a href='standards.htm#standard_s63'>Empty parameter list to procedure/function.</a></td>    </tr>
    <tr>      <td class='from'>65 S</td>      <td class='target'><a href='standards.htm#standard_s65'>Void variable passed as parameter.</a></td>    </tr>
    <tr>      <td class='from'>98 S</td>      <td class='target'><a href='standards.htm#standard_s98'>Actual and formal parameters inconsistent (MR).</a></td>    </tr>
    <tr>      <td class='from'>103 S</td>      <td class='target'><a href='standards.htm#standard_s103'>Function and prototype param inconsistent (MR).</a></td>    </tr>
    <tr>      <td class='from'>128 S</td>      <td class='target'><a href='standards.htm#standard_s128'>Parameter has same name as global variable.</a></td>    </tr>
    <tr>      <td class='from'>129 S</td>      <td class='target'><a href='standards.htm#standard_s129'>Parameter has same name as type or tag.</a></td>    </tr>
    <tr>      <td class='from'>135 S</td>      <td class='target'><a href='standards.htm#standard_s135'>Parameter list is KR.</a></td>    </tr>
    <tr>      <td class='from'>142 S</td>      <td class='target'><a href='standards.htm#standard_s142'>Parameter list declarations are inconsistent.</a></td>    </tr>
    <tr>      <td class='from'>149 S</td>      <td class='target'><a href='standards.htm#standard_s149'>Reference parameter to procedure is reassigned.</a></td>    </tr>
    <tr>      <td class='from'>168 S</td>      <td class='target'><a href='standards.htm#standard_s168'>Call by value parameter not const.</a></td>    </tr>
    <tr>      <td class='from'>215 S</td>      <td class='target'><a href='standards.htm#standard_s215'>Struct or class called by value.</a></td>    </tr>
    <tr>      <td class='from'>310 S</td>      <td class='target'><a href='standards.htm#standard_s310'>Array parameter found.</a></td>    </tr>
    <tr>      <td class='from'>359 S</td>      <td class='target'><a href='standards.htm#standard_s359'>Default parameter use.</a></td>    </tr>
    <tr>      <td class='from'>415 S</td>      <td class='target'><a href='standards.htm#standard_s415'>Single dimension array param size specified.</a></td>    </tr>
    <tr>      <td class='from'>416 S</td>      <td class='target'><a href='standards.htm#standard_s416'>First array param dimension specified.</a></td>    </tr>
    <tr>      <td class='from'>459 S</td>      <td class='target'><a href='standards.htm#standard_s459'>Array passed as actual parameter.</a></td>    </tr>
    <tr>      <td class='from'>475 S</td>      <td class='target'><a href='standards.htm#standard_s475'>Parameter needs IN/OUT/INOUT marker.</a></td>    </tr>
    <tr>      <td class='from'>534 S</td>      <td class='target'><a href='standards.htm#standard_s534'>Array has decayed to pointer.</a></td>    </tr>
    <tr>      <td class='from'>603 S</td>      <td class='target'><a href='standards.htm#standard_s603'>Parameter should be declared * const.</a></td>    </tr>
    <tr>      <td class='from'>613 S</td>      <td class='target'><a href='standards.htm#standard_s613'>Use of restrict keyword.</a></td>    </tr>
    <tr>      <td class='from'>614 S</td>      <td class='target'><a href='standards.htm#standard_s614'>Use of static keyword in array parameter.</a></td>    </tr>
    <tr>      <td class='from'>1 D</td>      <td class='target'><a href='standards.htm#standard_d1'>Unused procedure parameter.</a></td>    </tr>
    <tr>      <td class='from'>3 D</td>      <td class='target'><a href='standards.htm#standard_d3'>Actual parameter is also global to procedure.</a></td>    </tr>
    <tr>      <td class='from'>11 D</td>      <td class='target'><a href='standards.htm#standard_d11'>Parameters do not match expected actions.</a></td>    </tr>
    <tr>      <td class='from'>12 D</td>      <td class='target'><a href='standards.htm#standard_d12'>Referenced parameter has possible clear path.</a></td>    </tr>
    <tr>      <td class='from'>13 D</td>      <td class='target'><a href='standards.htm#standard_d13'>Global used in procedure matches local parameter.</a></td>    </tr>
    <tr>      <td class='from'>14 D</td>      <td class='target'><a href='standards.htm#standard_d14'>Attempt to change parameter passed by value.</a></td>    </tr>
    <tr>      <td class='from'>15 D</td>      <td class='target'><a href='standards.htm#standard_d15'>Unused procedural parameter.</a></td>    </tr>
    <tr>      <td class='from'>16 D</td>      <td class='target'><a href='standards.htm#standard_d16'>Identical actual parameters in call.</a></td>    </tr>
    <tr>      <td class='from'>23 D</td>      <td class='target'><a href='standards.htm#standard_d23'>Function has parameter side effects.</a></td>    </tr>
    <tr>      <td class='from'>29 D</td>      <td class='target'><a href='standards.htm#standard_d29'>Partially used structure parameter.</a></td>    </tr>
    <tr>      <td class='from'>59 D</td>      <td class='target'><a href='standards.htm#standard_d59'>Parameter should be declared const.</a></td>    </tr>
    <tr>      <td class='from'>62 D</td>      <td class='target'><a href='standards.htm#standard_d62'>Pointer parameter should be declared const.</a></td>    </tr>
    <tr>      <td class='from'>63 X</td>      <td class='target'><a href='standards.htm#standard_x63'>Function prototype/defn param type mismatch (MR).</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_id' name='keyword_id'><div class='rule'><div class='id'>Id</div></div></a><div class='headline'>Standards relating to identifiers</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>1 S</td>      <td class='target'><a href='standards.htm#standard_s1'>Procedure name reused.</a></td>    </tr>
    <tr>      <td class='from'>2 S</td>      <td class='target'><a href='standards.htm#standard_s2'>Label name reused.</a></td>    </tr>
    <tr>      <td class='from'>91 S</td>      <td class='target'><a href='standards.htm#standard_s91'>Name redeclared in another C name space (MR).</a></td>    </tr>
    <tr>      <td class='from'>112 S</td>      <td class='target'><a href='standards.htm#standard_s112'>Typedef name redeclared.</a></td>    </tr>
    <tr>      <td class='from'>128 S</td>      <td class='target'><a href='standards.htm#standard_s128'>Parameter has same name as global variable.</a></td>    </tr>
    <tr>      <td class='from'>129 S</td>      <td class='target'><a href='standards.htm#standard_s129'>Parameter has same name as type or tag.</a></td>    </tr>
    <tr>      <td class='from'>131 S</td>      <td class='target'><a href='standards.htm#standard_s131'>Name reused in inner scope.</a></td>    </tr>
    <tr>      <td class='from'>217 S</td>      <td class='target'><a href='standards.htm#standard_s217'>Names only differ by case.</a></td>    </tr>
    <tr>      <td class='from'>218 S</td>      <td class='target'><a href='standards.htm#standard_s218'>Name is used in standard libraries.</a></td>    </tr>
    <tr>      <td class='from'>327 S</td>      <td class='target'><a href='standards.htm#standard_s327'>Reuse of struct or class member name.</a></td>    </tr>
    <tr>      <td class='from'>355 S</td>      <td class='target'><a href='standards.htm#standard_s355'>Variables not unique within *** characters.</a></td>    </tr>
    <tr>      <td class='from'>358 S</td>      <td class='target'><a href='standards.htm#standard_s358'>Class member name reused.</a></td>    </tr>
    <tr>      <td class='from'>374 S</td>      <td class='target'><a href='standards.htm#standard_s374'>Name conflict with typedef.</a></td>    </tr>
    <tr>      <td class='from'>383 S</td>      <td class='target'><a href='standards.htm#standard_s383'>Identifier name matches macro name.</a></td>    </tr>
    <tr>      <td class='from'>384 S</td>      <td class='target'><a href='standards.htm#standard_s384'>Identifier matches macro name in 31 chars.</a></td>    </tr>
    <tr>      <td class='from'>461 S</td>      <td class='target'><a href='standards.htm#standard_s461'>Identifier with ambiguous linkage.</a></td>    </tr>
    <tr>      <td class='from'>495 S</td>      <td class='target'><a href='standards.htm#standard_s495'>Typedef name has no size indication.</a></td>    </tr>
    <tr>      <td class='from'>552 S</td>      <td class='target'><a href='standards.htm#standard_s552'>Class, enum, struct or union name reused.</a></td>    </tr>
    <tr>      <td class='from'>555 S</td>      <td class='target'><a href='standards.htm#standard_s555'>Base class member name not unique.</a></td>    </tr>
    <tr>      <td class='from'>571 S</td>      <td class='target'><a href='standards.htm#standard_s571'>Identifier with 'l' and 1, 'O' and zero.</a></td>    </tr>
    <tr>      <td class='from'>622 S</td>      <td class='target'><a href='standards.htm#standard_s622'>Macro parameters are not unique within limits.</a></td>    </tr>
    <tr>      <td class='from'>17 D</td>      <td class='target'><a href='standards.htm#standard_d17'>Identifier not unique within *** characters.</a></td>    </tr>
    <tr>      <td class='from'>18 D</td>      <td class='target'><a href='standards.htm#standard_d18'>Identifier name reused.</a></td>    </tr>
    <tr>      <td class='from'>34 D</td>      <td class='target'><a href='standards.htm#standard_d34'>Procedure name re-used in different files.</a></td>    </tr>
    <tr>      <td class='from'>93 D</td>      <td class='target'><a href='standards.htm#standard_d93'>Local variable should be declared const.</a></td>    </tr>
    <tr>      <td class='from'>94 D</td>      <td class='target'><a href='standards.htm#standard_d94'>Named variable declared but not used in code.</a></td>    </tr>
    <tr>      <td class='from'>4 X</td>      <td class='target'><a href='standards.htm#standard_x4'>Identifier reuse: struct/union tag repeated.</a></td>    </tr>
    <tr>      <td class='from'>5 X</td>      <td class='target'><a href='standards.htm#standard_x5'>Identifier reuse: struct vs union.</a></td>    </tr>
    <tr>      <td class='from'>6 X</td>      <td class='target'><a href='standards.htm#standard_x6'>Identifier reuse: struct/union tag vs enum tag.</a></td>    </tr>
    <tr>      <td class='from'>7 X</td>      <td class='target'><a href='standards.htm#standard_x7'>Identifier reuse: tag vs procedure.</a></td>    </tr>
    <tr>      <td class='from'>8 X</td>      <td class='target'><a href='standards.htm#standard_x8'>Identifier reuse: tag vs procedure parameter.</a></td>    </tr>
    <tr>      <td class='from'>9 X</td>      <td class='target'><a href='standards.htm#standard_x9'>Identifier reuse: tag vs variable.</a></td>    </tr>
    <tr>      <td class='from'>10 X</td>      <td class='target'><a href='standards.htm#standard_x10'>Identifier reuse: tag vs label (MR).</a></td>    </tr>
    <tr>      <td class='from'>11 X</td>      <td class='target'><a href='standards.htm#standard_x11'>Identifier reuse: tag vs typedef.</a></td>    </tr>
    <tr>      <td class='from'>12 X</td>      <td class='target'><a href='standards.htm#standard_x12'>Identifier reuse: tag vs macro.</a></td>    </tr>
    <tr>      <td class='from'>13 X</td>      <td class='target'><a href='standards.htm#standard_x13'>Identifier reuse: tag vs component.</a></td>    </tr>
    <tr>      <td class='from'>14 X</td>      <td class='target'><a href='standards.htm#standard_x14'>Identifier reuse: tag vs enum constant.</a></td>    </tr>
    <tr>      <td class='from'>15 X</td>      <td class='target'><a href='standards.htm#standard_x15'>Identifier reuse: persistent var vs tag.</a></td>    </tr>
    <tr>      <td class='from'>16 X</td>      <td class='target'><a href='standards.htm#standard_x16'>Identifier reuse: typedef vs variable.</a></td>    </tr>
    <tr>      <td class='from'>17 X</td>      <td class='target'><a href='standards.htm#standard_x17'>Identifier reuse: typedef vs label (MR).</a></td>    </tr>
    <tr>      <td class='from'>18 X</td>      <td class='target'><a href='standards.htm#standard_x18'>Identifier reuse: typedef vs typedef.</a></td>    </tr>
    <tr>      <td class='from'>19 X</td>      <td class='target'><a href='standards.htm#standard_x19'>Identifier reuse: typedef vs procedure parameter.</a></td>    </tr>
    <tr>      <td class='from'>20 X</td>      <td class='target'><a href='standards.htm#standard_x20'>Identifier reuse: persistent var vs typedef.</a></td>    </tr>
    <tr>      <td class='from'>21 X</td>      <td class='target'><a href='standards.htm#standard_x21'>Identifier reuse: typedef vs macro.</a></td>    </tr>
    <tr>      <td class='from'>22 X</td>      <td class='target'><a href='standards.htm#standard_x22'>Identifier reuse: typedef vs component.</a></td>    </tr>
    <tr>      <td class='from'>23 X</td>      <td class='target'><a href='standards.htm#standard_x23'>Identifier reuse: typedef vs enum constant.</a></td>    </tr>
    <tr>      <td class='from'>24 X</td>      <td class='target'><a href='standards.htm#standard_x24'>Identifier reuse: typedef vs procedure.</a></td>    </tr>
    <tr>      <td class='from'>25 X</td>      <td class='target'><a href='standards.htm#standard_x25'>Identifier reuse: procedure vs procedure param.</a></td>    </tr>
    <tr>      <td class='from'>26 X</td>      <td class='target'><a href='standards.htm#standard_x26'>Identifier reuse: persistent var vs label (MR).</a></td>    </tr>
    <tr>      <td class='from'>27 X</td>      <td class='target'><a href='standards.htm#standard_x27'>Identifier reuse: persist var vs persist var.</a></td>    </tr>
    <tr>      <td class='from'>28 X</td>      <td class='target'><a href='standards.htm#standard_x28'>Identifier reuse: persistent var vs var.</a></td>    </tr>
    <tr>      <td class='from'>29 X</td>      <td class='target'><a href='standards.htm#standard_x29'>Identifier reuse: persistent var vs procedure.</a></td>    </tr>
    <tr>      <td class='from'>30 X</td>      <td class='target'><a href='standards.htm#standard_x30'>Identifier reuse: persistent var vs proc param.</a></td>    </tr>
    <tr>      <td class='from'>31 X</td>      <td class='target'><a href='standards.htm#standard_x31'>Identifier reuse: procedure vs procedure.</a></td>    </tr>
    <tr>      <td class='from'>32 X</td>      <td class='target'><a href='standards.htm#standard_x32'>Identifier reuse: procedure vs var.</a></td>    </tr>
    <tr>      <td class='from'>33 X</td>      <td class='target'><a href='standards.htm#standard_x33'>Identifier reuse: procedure vs label (MR).</a></td>    </tr>
    <tr>      <td class='from'>34 X</td>      <td class='target'><a href='standards.htm#standard_x34'>Identifier reuse: proc vs macro.</a></td>    </tr>
    <tr>      <td class='from'>35 X</td>      <td class='target'><a href='standards.htm#standard_x35'>Identifier reuse: proc vs component.</a></td>    </tr>
    <tr>      <td class='from'>36 X</td>      <td class='target'><a href='standards.htm#standard_x36'>Identifier reuse: proc vs enum constant.</a></td>    </tr>
    <tr>      <td class='from'>37 X</td>      <td class='target'><a href='standards.htm#standard_x37'>Identifier reuse: persistent var vs macro.</a></td>    </tr>
    <tr>      <td class='from'>38 X</td>      <td class='target'><a href='standards.htm#standard_x38'>Identifier reuse: persistent var vs component.</a></td>    </tr>
    <tr>      <td class='from'>39 X</td>      <td class='target'><a href='standards.htm#standard_x39'>Identifier reuse: persistent var vs enum constant.</a></td>    </tr>
    <tr>      <td class='from'>40 X</td>      <td class='target'><a href='standards.htm#standard_x40'>Identifier reuse: component vs var.</a></td>    </tr>
    <tr>      <td class='from'>41 X</td>      <td class='target'><a href='standards.htm#standard_x41'>Identifier reuse: label vs variable (MR).</a></td>    </tr>
    <tr>      <td class='from'>42 X</td>      <td class='target'><a href='standards.htm#standard_x42'>Identifier reuse: component vs procedure param.</a></td>    </tr>
    <tr>      <td class='from'>43 X</td>      <td class='target'><a href='standards.htm#standard_x43'>Identifier reuse: label vs procedure param (MR).</a></td>    </tr>
    <tr>      <td class='from'>44 X</td>      <td class='target'><a href='standards.htm#standard_x44'>Identifier reuse: component vs enum constant.</a></td>    </tr>
    <tr>      <td class='from'>45 X</td>      <td class='target'><a href='standards.htm#standard_x45'>Identifier reuse: component vs label (MR).</a></td>    </tr>
    <tr>      <td class='from'>46 X</td>      <td class='target'><a href='standards.htm#standard_x46'>Identifier reuse: label vs enum constant (MR).</a></td>    </tr>
    <tr>      <td class='from'>47 X</td>      <td class='target'><a href='standards.htm#standard_x47'>Identifier reuse: component vs macro.</a></td>    </tr>
    <tr>      <td class='from'>48 X</td>      <td class='target'><a href='standards.htm#standard_x48'>Identifier reuse: label vs macro (MR).</a></td>    </tr>
    <tr>      <td class='from'>49 X</td>      <td class='target'><a href='standards.htm#standard_x49'>Identifier reuse: var vs proc param.</a></td>    </tr>
    <tr>      <td class='from'>50 X</td>      <td class='target'><a href='standards.htm#standard_x50'>Identifier reuse: var vs macro.</a></td>    </tr>
    <tr>      <td class='from'>51 X</td>      <td class='target'><a href='standards.htm#standard_x51'>Identifier reuse: var vs enum constant.</a></td>    </tr>
    <tr>      <td class='from'>52 X</td>      <td class='target'><a href='standards.htm#standard_x52'>Identifier reuse: proc param vs proc param.</a></td>    </tr>
    <tr>      <td class='from'>53 X</td>      <td class='target'><a href='standards.htm#standard_x53'>Identifier reuse: proc param vs macro.</a></td>    </tr>
    <tr>      <td class='from'>54 X</td>      <td class='target'><a href='standards.htm#standard_x54'>Identifier reuse: proc param vs enum constant.</a></td>    </tr>
    <tr>      <td class='from'>55 X</td>      <td class='target'><a href='standards.htm#standard_x55'>Identifier reuse: label vs label (MR).</a></td>    </tr>
    <tr>      <td class='from'>57 X</td>      <td class='target'><a href='standards.htm#standard_x57'>Identifier reuse: macro vs enum constant.</a></td>    </tr>
    <tr>      <td class='from'>58 X</td>      <td class='target'><a href='standards.htm#standard_x58'>Identifier reuse: component vs component.</a></td>    </tr>
    <tr>      <td class='from'>59 X</td>      <td class='target'><a href='standards.htm#standard_x59'>Identifier reuse: enum constant vs enum constant.</a></td>    </tr>
    <tr>      <td class='from'>60 X</td>      <td class='target'><a href='standards.htm#standard_x60'>Identifier reuse: variable vs variable.</a></td>    </tr>
    <tr>      <td class='from'>61 X</td>      <td class='target'><a href='standards.htm#standard_x61'>Identifier match in *** chars.</a></td>    </tr>
    <tr>      <td class='from'>67 X</td>      <td class='target'><a href='standards.htm#standard_x67'>Identifier is typographically ambiguous.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_obj' name='keyword_obj'><div class='rule'><div class='id'>Obj</div></div></a><div class='headline'>Standards relating to objects</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>44 S</td>      <td class='target'><a href='standards.htm#standard_s44'>Use of banned function or variable.</a></td>    </tr>
    <tr>      <td class='from'>84 S</td>      <td class='target'><a href='standards.htm#standard_s84'>Register variable declared.</a></td>    </tr>
    <tr>      <td class='from'>106 S</td>      <td class='target'><a href='standards.htm#standard_s106'>Volatile declaration.</a></td>    </tr>
    <tr>      <td class='from'>131 S</td>      <td class='target'><a href='standards.htm#standard_s131'>Name reused in inner scope.</a></td>    </tr>
    <tr>      <td class='from'>172 S</td>      <td class='target'><a href='standards.htm#standard_s172'>Variable declared multiply.</a></td>    </tr>
    <tr>      <td class='from'>560 S</td>      <td class='target'><a href='standards.htm#standard_s560'>Scope of variable could be reduced.</a></td>    </tr>
    <tr>      <td class='from'>582 S</td>      <td class='target'><a href='standards.htm#standard_s582'>const object reassigned.</a></td>    </tr>
    <tr>      <td class='from'>587 S</td>      <td class='target'><a href='standards.htm#standard_s587'>Const local variable not immediately initialised.</a></td>    </tr>
    <tr>      <td class='from'>10 D</td>      <td class='target'><a href='standards.htm#standard_d10'>Globals used inside procedure.</a></td>    </tr>
    <tr>      <td class='from'>20 D</td>      <td class='target'><a href='standards.htm#standard_d20'>No declaration for variable found before use.</a></td>    </tr>
    <tr>      <td class='from'>25 D</td>      <td class='target'><a href='standards.htm#standard_d25'>Scope of variable could be reduced.</a></td>    </tr>
    <tr>      <td class='from'>26 D</td>      <td class='target'><a href='standards.htm#standard_d26'>Variable should be defined once in only one file.</a></td>    </tr>
    <tr>      <td class='from'>27 D</td>      <td class='target'><a href='standards.htm#standard_d27'>Variable should be declared static.</a></td>    </tr>
    <tr>      <td class='from'>33 D</td>      <td class='target'><a href='standards.htm#standard_d33'>No real declaration for external variable.</a></td>    </tr>
    <tr>      <td class='from'>54 D</td>      <td class='target'><a href='standards.htm#standard_d54'>Unsafe use of function pointer variable.</a></td>    </tr>
    <tr>      <td class='from'>57 D</td>      <td class='target'><a href='standards.htm#standard_d57'>Global not initialised at declaration.</a></td>    </tr>
    <tr>      <td class='from'>60 D</td>      <td class='target'><a href='standards.htm#standard_d60'>External object should be declared only once.</a></td>    </tr>
    <tr>      <td class='from'>64 D</td>      <td class='target'><a href='standards.htm#standard_d64'>Local not initialised at declaration.</a></td>    </tr>
    <tr>      <td class='from'>78 D</td>      <td class='target'><a href='standards.htm#standard_d78'>Global variable should be declared const.</a></td>    </tr>
    <tr>      <td class='from'>95 D</td>      <td class='target'><a href='standards.htm#standard_d95'>Named global function pointer used in procedure.</a></td>    </tr>
    <tr>      <td class='from'>99 D</td>      <td class='target'><a href='standards.htm#standard_d99'>Named pointer object used in procedure.</a></td>    </tr>
    <tr>      <td class='from'>100 D</td>      <td class='target'><a href='standards.htm#standard_d100'>Named static member object used in procedure.</a></td>    </tr>
    <tr>      <td class='from'>110 D</td>      <td class='target'><a href='standards.htm#standard_d110'>More than one prototype for same function.</a></td>    </tr>
    <tr>      <td class='from'>1 X</td>      <td class='target'><a href='standards.htm#standard_x1'>Declaration types do not match across a system.</a></td>    </tr>
    <tr>      <td class='from'>2 X</td>      <td class='target'><a href='standards.htm#standard_x2'>Ambiguous declaration of variable.</a></td>    </tr>
    <tr>      <td class='from'>3 X</td>      <td class='target'><a href='standards.htm#standard_x3'>Variable has only one use.</a></td>    </tr>
    <tr>      <td class='from'>1 I</td>      <td class='target'><a href='standards.htm#standard_i1'>Local variables contribute nothing to results.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_template' name='keyword_template'><div class='rule'><div class='id'>Template</div></div></a><div class='headline'>Standards relating to templates</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>238 S</td>      <td class='target'><a href='standards.htm#standard_s238'>Number of templates exceeds ***.</a></td>    </tr>
    <tr>      <td class='from'>264 S</td>      <td class='target'><a href='standards.htm#standard_s264'>Class template prohibited.</a></td>    </tr>
    <tr>      <td class='from'>265 S</td>      <td class='target'><a href='standards.htm#standard_s265'>Function template prohibited.</a></td>    </tr>
    <tr>      <td class='from'>395 S</td>      <td class='target'><a href='standards.htm#standard_s395'>Public base use of STL library member.</a></td>    </tr>
    <tr>      <td class='from'>460 S</td>      <td class='target'><a href='standards.htm#standard_s460'>Inline or template function not in header.</a></td>    </tr>
    <tr>      <td class='from'>532 S</td>      <td class='target'><a href='standards.htm#standard_s532'>No copy ctor for templated copy ctor.</a></td>    </tr>
    <tr>      <td class='from'>533 S</td>      <td class='target'><a href='standards.htm#standard_s533'>No assgnmt optor for templated assgmnt op.</a></td>    </tr>
    <tr>      <td class='from'>538 S</td>      <td class='target'><a href='standards.htm#standard_s538'>Template class/function/member not instantiated.</a></td>    </tr>
    <tr>      <td class='from'>539 S</td>      <td class='target'><a href='standards.htm#standard_s539'>Specialised overloaded templated function.</a></td>    </tr>
    <tr>      <td class='from'>558 S</td>      <td class='target'><a href='standards.htm#standard_s558'>Template may lead to ill-formed program.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_type' name='keyword_type'><div class='rule'><div class='id'>Type</div></div></a><div class='headline'>Standards relating to types</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>74 S</td>      <td class='target'><a href='standards.htm#standard_s74'>Union declared.</a></td>    </tr>
    <tr>      <td class='from'>85 S</td>      <td class='target'><a href='standards.htm#standard_s85'>Incomplete initialisation of enumerator.</a></td>    </tr>
    <tr>      <td class='from'>89 S</td>      <td class='target'><a href='standards.htm#standard_s89'>char type not signed or unsigned.</a></td>    </tr>
    <tr>      <td class='from'>90 S</td>      <td class='target'><a href='standards.htm#standard_s90'>Basic type declaration used.</a></td>    </tr>
    <tr>      <td class='from'>92 S</td>      <td class='target'><a href='standards.htm#standard_s92'>Duplicate use of a name in an enumeration.</a></td>    </tr>
    <tr>      <td class='from'>123 S</td>      <td class='target'><a href='standards.htm#standard_s123'>Use of underlying enum representation value.</a></td>    </tr>
    <tr>      <td class='from'>144 S</td>      <td class='target'><a href='standards.htm#standard_s144'>Floating point not permitted.</a></td>    </tr>
    <tr>      <td class='from'>150 S</td>      <td class='target'><a href='standards.htm#standard_s150'>Volatile or const used in function type.</a></td>    </tr>
    <tr>      <td class='from'>351 S</td>      <td class='target'><a href='standards.htm#standard_s351'>Type declaration with variable definition.</a></td>    </tr>
    <tr>      <td class='from'>374 S</td>      <td class='target'><a href='standards.htm#standard_s374'>Name conflict with typedef.</a></td>    </tr>
    <tr>      <td class='from'>387 S</td>      <td class='target'><a href='standards.htm#standard_s387'>Enum initialisation not integer literal.</a></td>    </tr>
    <tr>      <td class='from'>390 S</td>      <td class='target'><a href='standards.htm#standard_s390'>Typedef array declaration.</a></td>    </tr>
    <tr>      <td class='from'>413 S</td>      <td class='target'><a href='standards.htm#standard_s413'>User type declared but not used in code analysed.</a></td>    </tr>
    <tr>      <td class='from'>422 S</td>      <td class='target'><a href='standards.htm#standard_s422'>More than one synonym in typedef.</a></td>    </tr>
    <tr>      <td class='from'>473 S</td>      <td class='target'><a href='standards.htm#standard_s473'>Typedef should not be used.</a></td>    </tr>
    <tr>      <td class='from'>495 S</td>      <td class='target'><a href='standards.htm#standard_s495'>Typedef name has no size indication.</a></td>    </tr>
    <tr>      <td class='from'>497 S</td>      <td class='target'><a href='standards.htm#standard_s497'>Type is incomplete in translation unit.</a></td>    </tr>
    <tr>      <td class='from'>605 S</td>      <td class='target'><a href='standards.htm#standard_s605'>Use of long long.</a></td>    </tr>
    <tr>      <td class='from'>630 S</td>      <td class='target'><a href='standards.htm#standard_s630'>Duplicated enumeration value.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_struct' name='keyword_struct'><div class='rule'><div class='id'>Struct</div></div></a><div class='headline'>Standards relating to struct</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>42 S</td>      <td class='target'><a href='standards.htm#standard_s42'>Use of bit field in structure declaration.</a></td>    </tr>
    <tr>      <td class='from'>72 S</td>      <td class='target'><a href='standards.htm#standard_s72'>Signed bit field less than 2 bits wide.</a></td>    </tr>
    <tr>      <td class='from'>73 S</td>      <td class='target'><a href='standards.htm#standard_s73'>Bit field not signed or unsigned int.</a></td>    </tr>
    <tr>      <td class='from'>104 S</td>      <td class='target'><a href='standards.htm#standard_s104'>Struct field initialisation incorrect.</a></td>    </tr>
    <tr>      <td class='from'>105 S</td>      <td class='target'><a href='standards.htm#standard_s105'>Initialisation brace { } fault.</a></td>    </tr>
    <tr>      <td class='from'>138 S</td>      <td class='target'><a href='standards.htm#standard_s138'>Anonymous bit field used in structure.</a></td>    </tr>
    <tr>      <td class='from'>141 S</td>      <td class='target'><a href='standards.htm#standard_s141'>Incomplete structure or class declaration.</a></td>    </tr>
    <tr>      <td class='from'>198 S</td>      <td class='target'><a href='standards.htm#standard_s198'>Use of privacy statement in struct.</a></td>    </tr>
    <tr>      <td class='from'>215 S</td>      <td class='target'><a href='standards.htm#standard_s215'>Struct or class called by value.</a></td>    </tr>
    <tr>      <td class='from'>226 S</td>      <td class='target'><a href='standards.htm#standard_s226'>Bit field is not octal, hex or suffix u.</a></td>    </tr>
    <tr>      <td class='from'>227 S</td>      <td class='target'><a href='standards.htm#standard_s227'>Numeric bit operand is not octal,hex or u.</a></td>    </tr>
    <tr>      <td class='from'>275 S</td>      <td class='target'><a href='standards.htm#standard_s275'>Tag missing in struct, union or enum.</a></td>    </tr>
    <tr>      <td class='from'>316 S</td>      <td class='target'><a href='standards.htm#standard_s316'>Bit field is not unsigned integral.</a></td>    </tr>
    <tr>      <td class='from'>325 S</td>      <td class='target'><a href='standards.htm#standard_s325'>Inconsistent use of tag.</a></td>    </tr>
    <tr>      <td class='from'>327 S</td>      <td class='target'><a href='standards.htm#standard_s327'>Reuse of struct or class member name.</a></td>    </tr>
    <tr>      <td class='from'>328 S</td>      <td class='target'><a href='standards.htm#standard_s328'>Non bit field member in bitfield struct.</a></td>    </tr>
    <tr>      <td class='from'>346 S</td>      <td class='target'><a href='standards.htm#standard_s346'>Bit field is not unsigned integral or enum type.</a></td>    </tr>
    <tr>      <td class='from'>378 S</td>      <td class='target'><a href='standards.htm#standard_s378'>Tag and type mismatch in struct/union/enum.</a></td>    </tr>
    <tr>      <td class='from'>381 S</td>      <td class='target'><a href='standards.htm#standard_s381'>Enum, struct or union not typedeffed.</a></td>    </tr>
    <tr>      <td class='from'>462 S</td>      <td class='target'><a href='standards.htm#standard_s462'>Struct initialisation has insufficient items.</a></td>    </tr>
    <tr>      <td class='from'>463 S</td>      <td class='target'><a href='standards.htm#standard_s463'>Unnecessary comma in initialisation list.</a></td>    </tr>
    <tr>      <td class='from'>465 S</td>      <td class='target'><a href='standards.htm#standard_s465'>Struct/union not completely specified.</a></td>    </tr>
    <tr>      <td class='from'>481 S</td>      <td class='target'><a href='standards.htm#standard_s481'>Array with no bounds in struct.</a></td>    </tr>
    <tr>      <td class='from'>482 S</td>      <td class='target'><a href='standards.htm#standard_s482'>Incomplete structure referenced.</a></td>    </tr>
    <tr>      <td class='from'>520 S</td>      <td class='target'><a href='standards.htm#standard_s520'>Bit field is not bool or explicit integral.</a></td>    </tr>
    <tr>      <td class='from'>536 S</td>      <td class='target'><a href='standards.htm#standard_s536'>Enum type in bit field.</a></td>    </tr>
    <tr>      <td class='from'>552 S</td>      <td class='target'><a href='standards.htm#standard_s552'>Class, enum, struct or union name reused.</a></td>    </tr>
    <tr>      <td class='from'>620 S</td>      <td class='target'><a href='standards.htm#standard_s620'>Initialisation designator duplicated.</a></td>    </tr>
    <tr>      <td class='from'>627 S</td>      <td class='target'><a href='standards.htm#standard_s627'>Initialiser both positional and designational.</a></td>    </tr>
    <tr>      <td class='from'>29 D</td>      <td class='target'><a href='standards.htm#standard_d29'>Partially used structure parameter.</a></td>    </tr>
    <tr>      <td class='from'>77 D</td>      <td class='target'><a href='standards.htm#standard_d77'>Local structure returned in function result.</a></td>    </tr>
    <tr>      <td class='from'>104 D</td>      <td class='target'><a href='standards.htm#standard_d104'>Structure implementation not hidden.</a></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_exp' name='keyword_exp'><div class='rule'><div class='id'>Exp</div></div></a><div class='headline'>Standards relating to expressions</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>9 S</td>      <td class='target'><a href='standards.htm#standard_s9'>Assignment operation in expression.</a></td>    </tr>
    <tr>      <td class='from'>29 S</td>      <td class='target'><a href='standards.htm#standard_s29'>Use of += or -= operators found.</a></td>    </tr>
    <tr>      <td class='from'>30 S</td>      <td class='target'><a href='standards.htm#standard_s30'>Deprecated usage of ++ or -- operators found.</a></td>    </tr>
    <tr>      <td class='from'>33 S</td>      <td class='target'><a href='standards.htm#standard_s33'>Use of ternary operator found.</a></td>    </tr>
    <tr>      <td class='from'>50 S</td>      <td class='target'><a href='standards.htm#standard_s50'>Use of shift operator on signed type.</a></td>    </tr>
    <tr>      <td class='from'>51 S</td>      <td class='target'><a href='standards.htm#standard_s51'>Shifting value too far.</a></td>    </tr>
    <tr>      <td class='from'>53 S</td>      <td class='target'><a href='standards.htm#standard_s53'>Use of comma operator.</a></td>    </tr>
    <tr>      <td class='from'>54 S</td>      <td class='target'><a href='standards.htm#standard_s54'>Sizeof operator with side effects.</a></td>    </tr>
    <tr>      <td class='from'>55 S</td>      <td class='target'><a href='standards.htm#standard_s55'>Expression with more than one function.</a></td>    </tr>
    <tr>      <td class='from'>56 S</td>      <td class='target'><a href='standards.htm#standard_s56'>Equality comparison of floating point.</a></td>    </tr>
    <tr>      <td class='from'>64 S</td>      <td class='target'><a href='standards.htm#standard_s64'>Void procedure used in expression.</a></td>    </tr>
    <tr>      <td class='from'>114 S</td>      <td class='target'><a href='standards.htm#standard_s114'>Expression is not Boolean.</a></td>    </tr>
    <tr>      <td class='from'>115 S</td>      <td class='target'><a href='standards.htm#standard_s115'>String incorrectly terminated.</a></td>    </tr>
    <tr>      <td class='from'>117 S</td>      <td class='target'><a href='standards.htm#standard_s117'>Logical negation of constant value.</a></td>    </tr>
    <tr>      <td class='from'>120 S</td>      <td class='target'><a href='standards.htm#standard_s120'>Use of bit operator on signed type.</a></td>    </tr>
    <tr>      <td class='from'>123 S</td>      <td class='target'><a href='standards.htm#standard_s123'>Use of underlying enum representation value.</a></td>    </tr>
    <tr>      <td class='from'>124 S</td>      <td class='target'><a href='standards.htm#standard_s124'>Use of prefix ++ or --.</a></td>    </tr>
    <tr>      <td class='from'>132 S</td>      <td class='target'><a href='standards.htm#standard_s132'>Assignment operator in boolean expression.</a></td>    </tr>
    <tr>      <td class='from'>133 S</td>      <td class='target'><a href='standards.htm#standard_s133'>Assignment operator in RHS of &amp;&amp; or ||.</a></td>    </tr>
    <tr>      <td class='from'>134 S</td>      <td class='target'><a href='standards.htm#standard_s134'>Volatile variable in complex expression.</a></td>    </tr>
    <tr>      <td class='from'>136 S</td>      <td class='target'><a href='standards.htm#standard_s136'>Bit operator with boolean operand.</a></td>    </tr>
    <tr>      <td class='from'>143 S</td>      <td class='target'><a href='standards.htm#standard_s143'>Curly brackets used in expression.</a></td>    </tr>
    <tr>      <td class='from'>158 S</td>      <td class='target'><a href='standards.htm#standard_s158'>Expression with more than *** subconditions.</a></td>    </tr>
    <tr>      <td class='from'>201 S</td>      <td class='target'><a href='standards.htm#standard_s201'>Use of numeric literal in expression.</a></td>    </tr>
    <tr>      <td class='from'>249 S</td>      <td class='target'><a href='standards.htm#standard_s249'>Operation not appropriate to boolean type.</a></td>    </tr>
    <tr>      <td class='from'>345 S</td>      <td class='target'><a href='standards.htm#standard_s345'>Bit operator with floating point operand.</a></td>    </tr>
    <tr>      <td class='from'>361 S</td>      <td class='target'><a href='standards.htm#standard_s361'>Expression needs brackets.</a></td>    </tr>
    <tr>      <td class='from'>373 S</td>      <td class='target'><a href='standards.htm#standard_s373'>Use of integer division.</a></td>    </tr>
    <tr>      <td class='from'>382 S</td>      <td class='target'><a href='standards.htm#standard_s382'>(void) missing for discarded return value.</a></td>    </tr>
    <tr>      <td class='from'>389 S</td>      <td class='target'><a href='standards.htm#standard_s389'>Bool value incremented/decremented.</a></td>    </tr>
    <tr>      <td class='from'>398 S</td>      <td class='target'><a href='standards.htm#standard_s398'>Boolean negation outside bracketed exprsn.</a></td>    </tr>
    <tr>      <td class='from'>400 S</td>      <td class='target'><a href='standards.htm#standard_s400'>Use of sizeof on a type.</a></td>    </tr>
    <tr>      <td class='from'>403 S</td>      <td class='target'><a href='standards.htm#standard_s403'>Negative (or potentially negative) shift.</a></td>    </tr>
    <tr>      <td class='from'>406 S</td>      <td class='target'><a href='standards.htm#standard_s406'>Use of ++ or -- on RHS of &amp;&amp; or || operator.</a></td>    </tr>
    <tr>      <td class='from'>408 S</td>      <td class='target'><a href='standards.htm#standard_s408'>Volatile variable accessed on RHS of &amp;&amp; or ||.</a></td>    </tr>
    <tr>      <td class='from'>479 S</td>      <td class='target'><a href='standards.htm#standard_s479'>Right shift loses all bits.</a></td>    </tr>
    <tr>      <td class='from'>577 S</td>      <td class='target'><a href='standards.htm#standard_s577'>Sizeof argument is a pointer.</a></td>    </tr>
    <tr>      <td class='from'>578 S</td>      <td class='target'><a href='standards.htm#standard_s578'>Sizeof used in arithmetic expression.</a></td>    </tr>
    <tr>      <td class='from'>584 S</td>      <td class='target'><a href='standards.htm#standard_s584'>Remainder of % op could be negative.</a></td>    </tr>
    <tr>      <td class='from'>585 S</td>      <td class='target'><a href='standards.htm#standard_s585'>Bitwise and arith operations on same data.</a></td>    </tr>
    <tr>      <td class='from'>599 S</td>      <td class='target'><a href='standards.htm#standard_s599'>Use of &amp;&amp; or || in initialisation.</a></td>    </tr>
    <tr>      <td class='from'>604 S</td>      <td class='target'><a href='standards.htm#standard_s604'>Use of numeric literal as array bound/subscript.</a></td>    </tr>
    <tr>      <td class='from'>607 S</td>      <td class='target'><a href='standards.htm#standard_s607'>Double negation found.</a></td>    </tr>
    <tr>      <td class='from'>608 S</td>      <td class='target'><a href='standards.htm#standard_s608'>Use of explicitly undefined language feature.</a></td>    </tr>
    <tr>      <td class='from'>609 S</td>      <td class='target'><a href='standards.htm#standard_s609'>Use of implicitly undefined language feature.</a></td>    </tr>
    <tr>      <td class='from'>629 S</td>      <td class='target'><a href='standards.htm#standard_s629'>Divide by zero found.</a></td>    </tr>
    <tr>      <td class='from'>35 D</td>      <td class='target'><a href='standards.htm#standard_d35'>Expression has side effects.</a></td>    </tr>
    <tr>      <td class='from'>43 D</td>      <td class='target'><a href='standards.htm#standard_d43'>Divide by 0 found.</a></td>    </tr>
    <tr>      <td class='from'>72 D</td>      <td class='target'><a href='standards.htm#standard_d72'>Potential side effect problem in expression.</a></td>    </tr>
    <tr>      <td class='from'>74 D</td>      <td class='target'><a href='standards.htm#standard_d74'>Potential side effect from repeated function call.</a></td>    </tr>
    <tr>      <td class='from'>73 X</td>      <td class='target'><a href='standards.htm#standard_x73'>Bits discarded in &gt;&gt; on parameter in function.</a></td>    </tr>
    <tr>      <td class='from'>74 X</td>      <td class='target'><a href='standards.htm#standard_x74'>Bits discarded in &lt;&lt; by parameter in function.</a></td>    </tr>
    <tr>      <td class='from'>75 X</td>      <td class='target'><a href='standards.htm#standard_x75'>Bits discarded in &gt;&gt; by parameter in function.</a></td>    </tr>
    <tr>      <td class='from'>76 X</td>      <td class='target'><a href='standards.htm#standard_x76'>Bits discarded in &lt;&lt; on parameter in function.</a></td>    </tr>
    <tr>      <td class='from'>77 X</td>      <td class='target'><a href='standards.htm#standard_x77'>Bits discarded in &gt;&gt; between parameters in function.</a></td>    </tr>
    <tr>      <td class='from'>78 X</td>      <td class='target'><a href='standards.htm#standard_x78'>Bits discarded in &lt;&lt; between parameters in function.</a></td>    </tr>
    <tr>      <td class='from'>1 Q</td>      <td class='target'><a href='standards.htm#standard_q1'>Call has execution order dependant side effects.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_arr' name='keyword_arr'><div class='rule'><div class='id'>Arr</div></div></a><div class='headline'>Standards relating to arrays</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>47 S</td>      <td class='target'><a href='standards.htm#standard_s47'>Array bound exceeded.</a></td>    </tr>
    <tr>      <td class='from'>109 S</td>      <td class='target'><a href='standards.htm#standard_s109'>Array subscript is not integral.</a></td>    </tr>
    <tr>      <td class='from'>127 S</td>      <td class='target'><a href='standards.htm#standard_s127'>Array has no bounds specified.</a></td>    </tr>
    <tr>      <td class='from'>310 S</td>      <td class='target'><a href='standards.htm#standard_s310'>Array parameter found.</a></td>    </tr>
    <tr>      <td class='from'>390 S</td>      <td class='target'><a href='standards.htm#standard_s390'>Typedef array declaration.</a></td>    </tr>
    <tr>      <td class='from'>397 S</td>      <td class='target'><a href='standards.htm#standard_s397'>Array initialisation has insufficient items.</a></td>    </tr>
    <tr>      <td class='from'>401 S</td>      <td class='target'><a href='standards.htm#standard_s401'>Use of sizeof on an array parameter.</a></td>    </tr>
    <tr>      <td class='from'>404 S</td>      <td class='target'><a href='standards.htm#standard_s404'>Array initialisation has too many items.</a></td>    </tr>
    <tr>      <td class='from'>415 S</td>      <td class='target'><a href='standards.htm#standard_s415'>Single dimension array param size specified.</a></td>    </tr>
    <tr>      <td class='from'>416 S</td>      <td class='target'><a href='standards.htm#standard_s416'>First array param dimension specified.</a></td>    </tr>
    <tr>      <td class='from'>436 S</td>      <td class='target'><a href='standards.htm#standard_s436'>Declaration does not specify an array.</a></td>    </tr>
    <tr>      <td class='from'>459 S</td>      <td class='target'><a href='standards.htm#standard_s459'>Array passed as actual parameter.</a></td>    </tr>
    <tr>      <td class='from'>463 S</td>      <td class='target'><a href='standards.htm#standard_s463'>Unnecessary comma in initialisation list.</a></td>    </tr>
    <tr>      <td class='from'>476 S</td>      <td class='target'><a href='standards.htm#standard_s476'>Array index not unsigned.</a></td>    </tr>
    <tr>      <td class='from'>481 S</td>      <td class='target'><a href='standards.htm#standard_s481'>Array with no bounds in struct.</a></td>    </tr>
    <tr>      <td class='from'>489 S</td>      <td class='target'><a href='standards.htm#standard_s489'>Insufficient space for operation.</a></td>    </tr>
    <tr>      <td class='from'>534 S</td>      <td class='target'><a href='standards.htm#standard_s534'>Array has decayed to pointer.</a></td>    </tr>
    <tr>      <td class='from'>567 S</td>      <td class='target'><a href='standards.htm#standard_s567'>Pointer arithmetic is not on array.</a></td>    </tr>
    <tr>      <td class='from'>598 S</td>      <td class='target'><a href='standards.htm#standard_s598'>Alternative array indexing used.</a></td>    </tr>
    <tr>      <td class='from'>621 S</td>      <td class='target'><a href='standards.htm#standard_s621'>Variable-length array declared.</a></td>    </tr>
    <tr>      <td class='from'>627 S</td>      <td class='target'><a href='standards.htm#standard_s627'>Initialiser both positional and designational.</a></td>    </tr>
    <tr>      <td class='from'>64 X</td>      <td class='target'><a href='standards.htm#standard_x64'>Array bound exceeded at call.</a></td>    </tr>
    <tr>      <td class='from'>66 X</td>      <td class='target'><a href='standards.htm#standard_x66'>Insufficient array space at call.</a></td>    </tr>
    <tr>      <td class='from'>68 X</td>      <td class='target'><a href='standards.htm#standard_x68'>Parameter indexing array too big at call.</a></td>    </tr>
    <tr>      <td class='from'>69 X</td>      <td class='target'><a href='standards.htm#standard_x69'>Global array bound exceeded at use.</a></td>    </tr>
    <tr>      <td class='from'>70 X</td>      <td class='target'><a href='standards.htm#standard_x70'>Array has insufficient space.</a></td>    </tr>
    <tr>      <td class='from'>71 X</td>      <td class='target'><a href='standards.htm#standard_x71'>Insufficient space for copy.</a></td>    </tr>
    <tr>      <td class='from'>72 X</td>      <td class='target'><a href='standards.htm#standard_x72'>Parameter indexing array too small at call.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_conv' name='keyword_conv'><div class='rule'><div class='id'>Conv</div></div></a><div class='headline'>Standards relating to conversions</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>52 S</td>      <td class='target'><a href='standards.htm#standard_s52'>Unsigned expression negated.</a></td>    </tr>
    <tr>      <td class='from'>93 S</td>      <td class='target'><a href='standards.htm#standard_s93'>Value is not of appropriate type.</a></td>    </tr>
    <tr>      <td class='from'>94 S</td>      <td class='target'><a href='standards.htm#standard_s94'>Casting operation on a pointer.</a></td>    </tr>
    <tr>      <td class='from'>95 S</td>      <td class='target'><a href='standards.htm#standard_s95'>Casting operation to a pointer.</a></td>    </tr>
    <tr>      <td class='from'>96 S</td>      <td class='target'><a href='standards.htm#standard_s96'>Use of mixed mode arithmetic.</a></td>    </tr>
    <tr>      <td class='from'>97 S</td>      <td class='target'><a href='standards.htm#standard_s97'>Use of redundant cast.</a></td>    </tr>
    <tr>      <td class='from'>107 S</td>      <td class='target'><a href='standards.htm#standard_s107'>Type mismatch in ternary expression.</a></td>    </tr>
    <tr>      <td class='from'>203 S</td>      <td class='target'><a href='standards.htm#standard_s203'>Cast on a constant value.</a></td>    </tr>
    <tr>      <td class='from'>240 S</td>      <td class='target'><a href='standards.htm#standard_s240'>Use of dynamic_cast.</a></td>    </tr>
    <tr>      <td class='from'>241 S</td>      <td class='target'><a href='standards.htm#standard_s241'>Use of reinterpret_cast.</a></td>    </tr>
    <tr>      <td class='from'>242 S</td>      <td class='target'><a href='standards.htm#standard_s242'>Use of const_cast.</a></td>    </tr>
    <tr>      <td class='from'>284 S</td>      <td class='target'><a href='standards.htm#standard_s284'>Cast preceded by a cast.</a></td>    </tr>
    <tr>      <td class='from'>304 S</td>      <td class='target'><a href='standards.htm#standard_s304'>Arithmetic performed on unsigned values.</a></td>    </tr>
    <tr>      <td class='from'>306 S</td>      <td class='target'><a href='standards.htm#standard_s306'>Use of C type cast.</a></td>    </tr>
    <tr>      <td class='from'>329 S</td>      <td class='target'><a href='standards.htm#standard_s329'>Operation not appropriate to plain char.</a></td>    </tr>
    <tr>      <td class='from'>330 S</td>      <td class='target'><a href='standards.htm#standard_s330'>Implicit conversion of underlying type.</a></td>    </tr>
    <tr>      <td class='from'>331 S</td>      <td class='target'><a href='standards.htm#standard_s331'>Literal value requires a U suffix.</a></td>    </tr>
    <tr>      <td class='from'>332 S</td>      <td class='target'><a href='standards.htm#standard_s332'>Widening cast on complex integer expression.</a></td>    </tr>
    <tr>      <td class='from'>333 S</td>      <td class='target'><a href='standards.htm#standard_s333'>Widening cast on complex float expression.</a></td>    </tr>
    <tr>      <td class='from'>334 S</td>      <td class='target'><a href='standards.htm#standard_s334'>No cast when ~ or &lt;&lt; applied to small types.</a></td>    </tr>
    <tr>      <td class='from'>344 S</td>      <td class='target'><a href='standards.htm#standard_s344'>Cast on volatile value.</a></td>    </tr>
    <tr>      <td class='from'>360 S</td>      <td class='target'><a href='standards.htm#standard_s360'>Incompatible type.</a></td>    </tr>
    <tr>      <td class='from'>394 S</td>      <td class='target'><a href='standards.htm#standard_s394'>Conversion function found.</a></td>    </tr>
    <tr>      <td class='from'>411 S</td>      <td class='target'><a href='standards.htm#standard_s411'>Inappropriate value assigned to enum.</a></td>    </tr>
    <tr>      <td class='from'>431 S</td>      <td class='target'><a href='standards.htm#standard_s431'>Char used instead of (un)signed char.</a></td>    </tr>
    <tr>      <td class='from'>432 S</td>      <td class='target'><a href='standards.htm#standard_s432'>Inappropriate type - should be plain char.</a></td>    </tr>
    <tr>      <td class='from'>433 S</td>      <td class='target'><a href='standards.htm#standard_s433'>Type conversion without cast.</a></td>    </tr>
    <tr>      <td class='from'>434 S</td>      <td class='target'><a href='standards.htm#standard_s434'>Signed/unsigned conversion without cast.</a></td>    </tr>
    <tr>      <td class='from'>435 S</td>      <td class='target'><a href='standards.htm#standard_s435'>Float/integer conversion without cast.</a></td>    </tr>
    <tr>      <td class='from'>439 S</td>      <td class='target'><a href='standards.htm#standard_s439'>Cast from pointer to integral type.</a></td>    </tr>
    <tr>      <td class='from'>440 S</td>      <td class='target'><a href='standards.htm#standard_s440'>Cast from integral type to pointer.</a></td>    </tr>
    <tr>      <td class='from'>441 S</td>      <td class='target'><a href='standards.htm#standard_s441'>Float cast to non-float.</a></td>    </tr>
    <tr>      <td class='from'>442 S</td>      <td class='target'><a href='standards.htm#standard_s442'>Signed integral type cast to unsigned.</a></td>    </tr>
    <tr>      <td class='from'>443 S</td>      <td class='target'><a href='standards.htm#standard_s443'>Unsigned integral type cast to signed.</a></td>    </tr>
    <tr>      <td class='from'>444 S</td>      <td class='target'><a href='standards.htm#standard_s444'>Integral type cast to non-integral.</a></td>    </tr>
    <tr>      <td class='from'>445 S</td>      <td class='target'><a href='standards.htm#standard_s445'>Narrower float conversion without cast.</a></td>    </tr>
    <tr>      <td class='from'>446 S</td>      <td class='target'><a href='standards.htm#standard_s446'>Narrower int conversion without cast.</a></td>    </tr>
    <tr>      <td class='from'>451 S</td>      <td class='target'><a href='standards.htm#standard_s451'>No cast for widening complex float expression.</a></td>    </tr>
    <tr>      <td class='from'>452 S</td>      <td class='target'><a href='standards.htm#standard_s452'>No cast for widening complex int expression.</a></td>    </tr>
    <tr>      <td class='from'>456 S</td>      <td class='target'><a href='standards.htm#standard_s456'>Implicit float widening for function return.</a></td>    </tr>
    <tr>      <td class='from'>457 S</td>      <td class='target'><a href='standards.htm#standard_s457'>Implicit int widening for function return.</a></td>    </tr>
    <tr>      <td class='from'>458 S</td>      <td class='target'><a href='standards.htm#standard_s458'>Implicit conversion: actual to formal param.</a></td>    </tr>
    <tr>      <td class='from'>488 S</td>      <td class='target'><a href='standards.htm#standard_s488'>Value outside range of underlying type.</a></td>    </tr>
    <tr>      <td class='from'>490 S</td>      <td class='target'><a href='standards.htm#standard_s490'>No cast for widening float parameter.</a></td>    </tr>
    <tr>      <td class='from'>491 S</td>      <td class='target'><a href='standards.htm#standard_s491'>No cast for widening int parameter.</a></td>    </tr>
    <tr>      <td class='from'>493 S</td>      <td class='target'><a href='standards.htm#standard_s493'>Numeric overflow.</a></td>    </tr>
    <tr>      <td class='from'>494 S</td>      <td class='target'><a href='standards.htm#standard_s494'>Numeric underflow.</a></td>    </tr>
    <tr>      <td class='from'>507 S</td>      <td class='target'><a href='standards.htm#standard_s507'>Explicit cast from integral to floating type.</a></td>    </tr>
    <tr>      <td class='from'>535 S</td>      <td class='target'><a href='standards.htm#standard_s535'>Binary bitwise op with different types.</a></td>    </tr>
    <tr>      <td class='from'>540 S</td>      <td class='target'><a href='standards.htm#standard_s540'>Cast from pointer to void to pointer.</a></td>    </tr>
    <tr>      <td class='from'>551 S</td>      <td class='target'><a href='standards.htm#standard_s551'>Cast from base to derived for polymorphic type.</a></td>    </tr>
    <tr>      <td class='from'>554 S</td>      <td class='target'><a href='standards.htm#standard_s554'>Cast to an unrelated type.</a></td>    </tr>
    <tr>      <td class='from'>576 S</td>      <td class='target'><a href='standards.htm#standard_s576'>Function pointer is of wrong type.</a></td>    </tr>
    <tr>      <td class='from'>606 S</td>      <td class='target'><a href='standards.htm#standard_s606'>Cast involving function pointer.</a></td>    </tr>
    <tr>      <td class='from'>615 S</td>      <td class='target'><a href='standards.htm#standard_s615'>Conditional operator has incompatible types.</a></td>    </tr>
    <tr>      <td class='from'>635 S</td>      <td class='target'><a href='standards.htm#standard_s635'>Cast from pointer to float type.</a></td>    </tr>
    <tr>      <td class='from'>636 S</td>      <td class='target'><a href='standards.htm#standard_s636'>Cast from float type to pointer.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_ptr' name='keyword_ptr'><div class='rule'><div class='id'>Ptr</div></div></a><div class='headline'>Standards relating to pointers</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>6 S</td>      <td class='target'><a href='standards.htm#standard_s6'>Procedure pointer declared.</a></td>    </tr>
    <tr>      <td class='from'>70 S</td>      <td class='target'><a href='standards.htm#standard_s70'>Logical comparison of pointers.</a></td>    </tr>
    <tr>      <td class='from'>71 S</td>      <td class='target'><a href='standards.htm#standard_s71'>Pointer assignment to wider scope.</a></td>    </tr>
    <tr>      <td class='from'>80 S</td>      <td class='target'><a href='standards.htm#standard_s80'>Pointer indirection exceeds 2 levels.</a></td>    </tr>
    <tr>      <td class='from'>87 S</td>      <td class='target'><a href='standards.htm#standard_s87'>Use of pointer arithmetic.</a></td>    </tr>
    <tr>      <td class='from'>94 S</td>      <td class='target'><a href='standards.htm#standard_s94'>Casting operation on a pointer.</a></td>    </tr>
    <tr>      <td class='from'>95 S</td>      <td class='target'><a href='standards.htm#standard_s95'>Casting operation to a pointer.</a></td>    </tr>
    <tr>      <td class='from'>159 S</td>      <td class='target'><a href='standards.htm#standard_s159'>Comparing pointer with zero or NULL.</a></td>    </tr>
    <tr>      <td class='from'>164 S</td>      <td class='target'><a href='standards.htm#standard_s164'>Use of void * pointer.</a></td>    </tr>
    <tr>      <td class='from'>298 S</td>      <td class='target'><a href='standards.htm#standard_s298'>Non const pointer to function.</a></td>    </tr>
    <tr>      <td class='from'>299 S</td>      <td class='target'><a href='standards.htm#standard_s299'>Pointer to function declared without typedef.</a></td>    </tr>
    <tr>      <td class='from'>348 S</td>      <td class='target'><a href='standards.htm#standard_s348'>Use of the NULL macro.</a></td>    </tr>
    <tr>      <td class='from'>356 S</td>      <td class='target'><a href='standards.htm#standard_s356'>Pointer to pointer declared.</a></td>    </tr>
    <tr>      <td class='from'>437 S</td>      <td class='target'><a href='standards.htm#standard_s437'>&lt; &gt; &lt;= &gt;= used on different object pointers.</a></td>    </tr>
    <tr>      <td class='from'>438 S</td>      <td class='target'><a href='standards.htm#standard_s438'>Pointer subtraction not addressing one array.</a></td>    </tr>
    <tr>      <td class='from'>439 S</td>      <td class='target'><a href='standards.htm#standard_s439'>Cast from pointer to integral type.</a></td>    </tr>
    <tr>      <td class='from'>440 S</td>      <td class='target'><a href='standards.htm#standard_s440'>Cast from integral type to pointer.</a></td>    </tr>
    <tr>      <td class='from'>519 S</td>      <td class='target'><a href='standards.htm#standard_s519'>Return of reference parameter.</a></td>    </tr>
    <tr>      <td class='from'>530 S</td>      <td class='target'><a href='standards.htm#standard_s530'>NULL used in integer context.</a></td>    </tr>
    <tr>      <td class='from'>531 S</td>      <td class='target'><a href='standards.htm#standard_s531'>Literal zero used in pointer context.</a></td>    </tr>
    <tr>      <td class='from'>534 S</td>      <td class='target'><a href='standards.htm#standard_s534'>Array has decayed to pointer.</a></td>    </tr>
    <tr>      <td class='from'>563 S</td>      <td class='target'><a href='standards.htm#standard_s563'>Address increment exceeds type limit.</a></td>    </tr>
    <tr>      <td class='from'>564 S</td>      <td class='target'><a href='standards.htm#standard_s564'>Reference assignment to wider scope.</a></td>    </tr>
    <tr>      <td class='from'>567 S</td>      <td class='target'><a href='standards.htm#standard_s567'>Pointer arithmetic is not on array.</a></td>    </tr>
    <tr>      <td class='from'>576 S</td>      <td class='target'><a href='standards.htm#standard_s576'>Function pointer is of wrong type.</a></td>    </tr>
    <tr>      <td class='from'>583 S</td>      <td class='target'><a href='standards.htm#standard_s583'>Comparison of pointer and string literal.</a></td>    </tr>
    <tr>      <td class='from'>591 S</td>      <td class='target'><a href='standards.htm#standard_s591'>Inappropriate use of file pointer.</a></td>    </tr>
    <tr>      <td class='from'>603 S</td>      <td class='target'><a href='standards.htm#standard_s603'>Parameter should be declared * const.</a></td>    </tr>
    <tr>      <td class='from'>635 S</td>      <td class='target'><a href='standards.htm#standard_s635'>Cast from pointer to float type.</a></td>    </tr>
    <tr>      <td class='from'>636 S</td>      <td class='target'><a href='standards.htm#standard_s636'>Cast from float type to pointer.</a></td>    </tr>
    <tr>      <td class='from'>42 D</td>      <td class='target'><a href='standards.htm#standard_d42'>Local pointer returned in function result.</a></td>    </tr>
    <tr>      <td class='from'>45 D</td>      <td class='target'><a href='standards.htm#standard_d45'>Pointer not checked for null before use.</a></td>    </tr>
    <tr>      <td class='from'>53 D</td>      <td class='target'><a href='standards.htm#standard_d53'>Attempt to use uninitialised pointer.</a></td>    </tr>
    <tr>      <td class='from'>54 D</td>      <td class='target'><a href='standards.htm#standard_d54'>Unsafe use of function pointer variable.</a></td>    </tr>
    <tr>      <td class='from'>62 D</td>      <td class='target'><a href='standards.htm#standard_d62'>Pointer parameter should be declared const.</a></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_file' name='keyword_file'><div class='rule'><div class='id'>File</div></div></a><div class='headline'>Standards relating to file structure and comments</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>17 S</td>      <td class='target'><a href='standards.htm#standard_s17'>Code insert found.</a></td>    </tr>
    <tr>      <td class='from'>46 S</td>      <td class='target'><a href='standards.htm#standard_s46'>extern not in nominated include file.</a></td>    </tr>
    <tr>      <td class='from'>75 S</td>      <td class='target'><a href='standards.htm#standard_s75'>Executable code before an included file.</a></td>    </tr>
    <tr>      <td class='from'>100 S</td>      <td class='target'><a href='standards.htm#standard_s100'>#include filename is non conformant.</a></td>    </tr>
    <tr>      <td class='from'>110 S</td>      <td class='target'><a href='standards.htm#standard_s110'>Use of single line comment //.</a></td>    </tr>
    <tr>      <td class='from'>119 S</td>      <td class='target'><a href='standards.htm#standard_s119'>Nested comment found.</a></td>    </tr>
    <tr>      <td class='from'>130 S</td>      <td class='target'><a href='standards.htm#standard_s130'>Included file is not permitted.</a></td>    </tr>
    <tr>      <td class='from'>152 S</td>      <td class='target'><a href='standards.htm#standard_s152'>Use of a comment in a macro definition.</a></td>    </tr>
    <tr>      <td class='from'>153 S</td>      <td class='target'><a href='standards.htm#standard_s153'>Use of a comment in a pre-processor directive.</a></td>    </tr>
    <tr>      <td class='from'>154 S</td>      <td class='target'><a href='standards.htm#standard_s154'>Nested header files found.</a></td>    </tr>
    <tr>      <td class='from'>155 S</td>      <td class='target'><a href='standards.htm#standard_s155'>Comments between preprocessor directives.</a></td>    </tr>
    <tr>      <td class='from'>207 S</td>      <td class='target'><a href='standards.htm#standard_s207'>Use of old style /* comments in C++.</a></td>    </tr>
    <tr>      <td class='from'>225 S</td>      <td class='target'><a href='standards.htm#standard_s225'>Inappropriate file extension.</a></td>    </tr>
    <tr>      <td class='from'>243 S</td>      <td class='target'><a href='standards.htm#standard_s243'>Included file not protected with #define.</a></td>    </tr>
    <tr>      <td class='from'>250 S</td>      <td class='target'><a href='standards.htm#standard_s250'>Cyclic included file nesting found.</a></td>    </tr>
    <tr>      <td class='from'>257 S</td>      <td class='target'><a href='standards.htm#standard_s257'>Filename in #include not in &lt; &gt; .</a></td>    </tr>
    <tr>      <td class='from'>286 S</td>      <td class='target'><a href='standards.htm#standard_s286'>Functions defined in header file.</a></td>    </tr>
    <tr>      <td class='from'>287 S</td>      <td class='target'><a href='standards.htm#standard_s287'>Variable definition in header file.</a></td>    </tr>
    <tr>      <td class='from'>288 S</td>      <td class='target'><a href='standards.htm#standard_s288'>Header file is not .h.</a></td>    </tr>
    <tr>      <td class='from'>300 S</td>      <td class='target'><a href='standards.htm#standard_s300'>Filename extension is not .cpp.</a></td>    </tr>
    <tr>      <td class='from'>302 S</td>      <td class='target'><a href='standards.htm#standard_s302'>Comment possibly contains code.</a></td>    </tr>
    <tr>      <td class='from'>338 S</td>      <td class='target'><a href='standards.htm#standard_s338'>#include preceded by non preproc directives.</a></td>    </tr>
    <tr>      <td class='from'>352 S</td>      <td class='target'><a href='standards.htm#standard_s352'>Declaration of type not in header file.</a></td>    </tr>
    <tr>      <td class='from'>354 S</td>      <td class='target'><a href='standards.htm#standard_s354'>Extern declaration is not in header file.</a></td>    </tr>
    <tr>      <td class='from'>388 S</td>      <td class='target'><a href='standards.htm#standard_s388'>Extern used in function body.</a></td>    </tr>
    <tr>      <td class='from'>412 S</td>      <td class='target'><a href='standards.htm#standard_s412'>Undefined behaviour, \ before E-O-F.</a></td>    </tr>
    <tr>      <td class='from'>427 S</td>      <td class='target'><a href='standards.htm#standard_s427'>Filename in #include not in &lt; &gt; or &quot; &quot;.</a></td>    </tr>
    <tr>      <td class='from'>460 S</td>      <td class='target'><a href='standards.htm#standard_s460'>Inline or template function not in header.</a></td>    </tr>
    <tr>      <td class='from'>461 S</td>      <td class='target'><a href='standards.htm#standard_s461'>Identifier with ambiguous linkage.</a></td>    </tr>
    <tr>      <td class='from'>478 S</td>      <td class='target'><a href='standards.htm#standard_s478'>Name starts with ISO reserved prefix.</a></td>    </tr>
    <tr>      <td class='from'>498 S</td>      <td class='target'><a href='standards.htm#standard_s498'>Use of inline keyword.</a></td>    </tr>
    <tr>      <td class='from'>516 S</td>      <td class='target'><a href='standards.htm#standard_s516'>Assembler does not use asm declaration.</a></td>    </tr>
    <tr>      <td class='from'>553 S</td>      <td class='target'><a href='standards.htm#standard_s553'>Function and proto should both be static.</a></td>    </tr>
    <tr>      <td class='from'>568 S</td>      <td class='target'><a href='standards.htm#standard_s568'>#include &quot;filename&quot; uses standard library name.</a></td>    </tr>
    <tr>      <td class='from'>575 S</td>      <td class='target'><a href='standards.htm#standard_s575'>Linkage differs from previous declaration.</a></td>    </tr>
    <tr>      <td class='from'>588 S</td>      <td class='target'><a href='standards.htm#standard_s588'>Use of system function.</a></td>    </tr>
    <tr>      <td class='from'>611 S</td>      <td class='target'><a href='standards.htm#standard_s611'>Line splice used in // comment.</a></td>    </tr>
    <tr>      <td class='from'>632 S</td>      <td class='target'><a href='standards.htm#standard_s632'>Use of // comment in pre-processor directive or macro defn.</a></td>    </tr>
    <tr>      <td class='from'>1 X</td>      <td class='target'><a href='standards.htm#standard_x1'>Declaration types do not match across a system.</a></td>    </tr>
    <tr>      <td class='from'>2 X</td>      <td class='target'><a href='standards.htm#standard_x2'>Ambiguous declaration of variable.</a></td>    </tr>
    <tr>      <td class='from'>5 Q</td>      <td class='target'><a href='standards.htm#standard_q5'>File does not end with new line.</a></td>    </tr>
    <tr>      <td class='from'>1 U</td>      <td class='target'><a href='standards.htm#standard_u1'>Inter-file recursion found.</a></td>    </tr>
    <tr>      <td class='from'>2 U</td>      <td class='target'><a href='standards.htm#standard_u2'>Procedure not called anywhere in system.</a></td>    </tr>
    <tr>      <td class='from'>3 U</td>      <td class='target'><a href='standards.htm#standard_u3'>No procedures in this file called from other files.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_namespace' name='keyword_namespace'><div class='rule'><div class='id'>Namespace</div></div></a><div class='headline'>Standards relating to namespaces</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>91 S</td>      <td class='target'><a href='standards.htm#standard_s91'>Name redeclared in another C name space (MR).</a></td>    </tr>
    <tr>      <td class='from'>199 S</td>      <td class='target'><a href='standards.htm#standard_s199'>Use of anonymous namespace.</a></td>    </tr>
    <tr>      <td class='from'>263 S</td>      <td class='target'><a href='standards.htm#standard_s263'>Namespace prohibited.</a></td>    </tr>
    <tr>      <td class='from'>294 S</td>      <td class='target'><a href='standards.htm#standard_s294'>Namespace nested more than *** deep.</a></td>    </tr>
    <tr>      <td class='from'>311 S</td>      <td class='target'><a href='standards.htm#standard_s311'>Non local declaration not in a namespace.</a></td>    </tr>
    <tr>      <td class='from'>362 S</td>      <td class='target'><a href='standards.htm#standard_s362'>main program in a namespace.</a></td>    </tr>
    <tr>      <td class='from'>512 S</td>      <td class='target'><a href='standards.htm#standard_s512'>Use of unnamed namespace.</a></td>    </tr>
    <tr>      <td class='from'>513 S</td>      <td class='target'><a href='standards.htm#standard_s513'>Use of using directive.</a></td>    </tr>
    <tr>      <td class='from'>514 S</td>      <td class='target'><a href='standards.htm#standard_s514'>Using directive or declaration in header.</a></td>    </tr>
    <tr>      <td class='from'>517 S</td>      <td class='target'><a href='standards.htm#standard_s517'>At least one declaration in global namespace.</a></td>    </tr>
    <tr>      <td class='from'>518 S</td>      <td class='target'><a href='standards.htm#standard_s518'>Using declaration is straddled by declarations.</a></td>    </tr>
    <tr>      <td class='from'>570 S</td>      <td class='target'><a href='standards.htm#standard_s570'>Static object declared in namespace.</a></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_flow' name='keyword_flow'><div class='rule'><div class='id'>Flow</div></div></a><div class='headline'>Standards relating to data flow</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>23 S</td>      <td class='target'><a href='standards.htm#standard_s23'>Procedure is not explicitly called in code analysed.</a></td>    </tr>
    <tr>      <td class='from'>35 S</td>      <td class='target'><a href='standards.htm#standard_s35'>Static procedure is not explicitly called in code analysed.</a></td>    </tr>
    <tr>      <td class='from'>139 S</td>      <td class='target'><a href='standards.htm#standard_s139'>Construct leads to infeasible code.</a></td>    </tr>
    <tr>      <td class='from'>140 S</td>      <td class='target'><a href='standards.htm#standard_s140'>Infeasible loop condition found.</a></td>    </tr>
    <tr>      <td class='from'>413 S</td>      <td class='target'><a href='standards.htm#standard_s413'>User type declared but not used in code analysed.</a></td>    </tr>
    <tr>      <td class='from'>582 S</td>      <td class='target'><a href='standards.htm#standard_s582'>const object reassigned.</a></td>    </tr>
    <tr>      <td class='from'>587 S</td>      <td class='target'><a href='standards.htm#standard_s587'>Const local variable not immediately initialised.</a></td>    </tr>
    <tr>      <td class='from'>628 S</td>      <td class='target'><a href='standards.htm#standard_s628'>Macro not used in translation unit.</a></td>    </tr>
    <tr>      <td class='from'>631 S</td>      <td class='target'><a href='standards.htm#standard_s631'>Declaration not reachable.</a></td>    </tr>
    <tr>      <td class='from'>5 C</td>      <td class='target'><a href='standards.htm#standard_c5'>Procedure contains infinite loop.</a></td>    </tr>
    <tr>      <td class='from'>6 C</td>      <td class='target'><a href='standards.htm#standard_c6'>Procedure has more than one entry point.</a></td>    </tr>
    <tr>      <td class='from'>7 C</td>      <td class='target'><a href='standards.htm#standard_c7'>Procedure has more than one exit point.</a></td>    </tr>
    <tr>      <td class='from'>1 D</td>      <td class='target'><a href='standards.htm#standard_d1'>Unused procedure parameter.</a></td>    </tr>
    <tr>      <td class='from'>2 D</td>      <td class='target'><a href='standards.htm#standard_d2'>Function does not return a value on all paths.</a></td>    </tr>
    <tr>      <td class='from'>3 D</td>      <td class='target'><a href='standards.htm#standard_d3'>Actual parameter is also global to procedure.</a></td>    </tr>
    <tr>      <td class='from'>4 D</td>      <td class='target'><a href='standards.htm#standard_d4'>Variables declared but not used in code analysed.</a></td>    </tr>
    <tr>      <td class='from'>5 D</td>      <td class='target'><a href='standards.htm#standard_d5'>UR data flow anomalies found.</a></td>    </tr>
    <tr>      <td class='from'>6 D</td>      <td class='target'><a href='standards.htm#standard_d6'>Recursion in procedure calls found.</a></td>    </tr>
    <tr>      <td class='from'>7 D</td>      <td class='target'><a href='standards.htm#standard_d7'>DU data flow anomalies found.</a></td>    </tr>
    <tr>      <td class='from'>8 D</td>      <td class='target'><a href='standards.htm#standard_d8'>DD data flow anomalies found.</a></td>    </tr>
    <tr>      <td class='from'>9 D</td>      <td class='target'><a href='standards.htm#standard_d9'>Defined parameter has possible clear path.</a></td>    </tr>
    <tr>      <td class='from'>10 D</td>      <td class='target'><a href='standards.htm#standard_d10'>Globals used inside procedure.</a></td>    </tr>
    <tr>      <td class='from'>11 D</td>      <td class='target'><a href='standards.htm#standard_d11'>Parameters do not match expected actions.</a></td>    </tr>
    <tr>      <td class='from'>12 D</td>      <td class='target'><a href='standards.htm#standard_d12'>Referenced parameter has possible clear path.</a></td>    </tr>
    <tr>      <td class='from'>13 D</td>      <td class='target'><a href='standards.htm#standard_d13'>Global used in procedure matches local parameter.</a></td>    </tr>
    <tr>      <td class='from'>14 D</td>      <td class='target'><a href='standards.htm#standard_d14'>Attempt to change parameter passed by value.</a></td>    </tr>
    <tr>      <td class='from'>15 D</td>      <td class='target'><a href='standards.htm#standard_d15'>Unused procedural parameter.</a></td>    </tr>
    <tr>      <td class='from'>16 D</td>      <td class='target'><a href='standards.htm#standard_d16'>Identical actual parameters in call.</a></td>    </tr>
    <tr>      <td class='from'>20 D</td>      <td class='target'><a href='standards.htm#standard_d20'>No declaration for variable found before use.</a></td>    </tr>
    <tr>      <td class='from'>22 D</td>      <td class='target'><a href='standards.htm#standard_d22'>Function has global variable side effects.</a></td>    </tr>
    <tr>      <td class='from'>23 D</td>      <td class='target'><a href='standards.htm#standard_d23'>Function has parameter side effects.</a></td>    </tr>
    <tr>      <td class='from'>25 D</td>      <td class='target'><a href='standards.htm#standard_d25'>Scope of variable could be reduced.</a></td>    </tr>
    <tr>      <td class='from'>57 D</td>      <td class='target'><a href='standards.htm#standard_d57'>Global not initialised at declaration.</a></td>    </tr>
    <tr>      <td class='from'>64 D</td>      <td class='target'><a href='standards.htm#standard_d64'>Local not initialised at declaration.</a></td>    </tr>
    <tr>      <td class='from'>65 D</td>      <td class='target'><a href='standards.htm#standard_d65'>Void function has no side effects.</a></td>    </tr>
    <tr>      <td class='from'>67 D</td>      <td class='target'><a href='standards.htm#standard_d67'>Void function has global variable side effects.</a></td>    </tr>
    <tr>      <td class='from'>68 D</td>      <td class='target'><a href='standards.htm#standard_d68'>Void function has persistent local side effects.</a></td>    </tr>
    <tr>      <td class='from'>69 D</td>      <td class='target'><a href='standards.htm#standard_d69'>UR anomaly, variable used before assignment.</a></td>    </tr>
    <tr>      <td class='from'>70 D</td>      <td class='target'><a href='standards.htm#standard_d70'>DU anomaly, variable value is not used.</a></td>    </tr>
    <tr>      <td class='from'>76 D</td>      <td class='target'><a href='standards.htm#standard_d76'>Procedure is not called or referenced in code analysed.</a></td>    </tr>
    <tr>      <td class='from'>78 D</td>      <td class='target'><a href='standards.htm#standard_d78'>Global variable should be declared const.</a></td>    </tr>
    <tr>      <td class='from'>80 D</td>      <td class='target'><a href='standards.htm#standard_d80'>Potentially unused function-modified value.</a></td>    </tr>
    <tr>      <td class='from'>93 D</td>      <td class='target'><a href='standards.htm#standard_d93'>Local variable should be declared const.</a></td>    </tr>
    <tr>      <td class='from'>94 D</td>      <td class='target'><a href='standards.htm#standard_d94'>Named variable declared but not used in code.</a></td>    </tr>
    <tr>      <td class='from'>95 D</td>      <td class='target'><a href='standards.htm#standard_d95'>Named global function pointer used in procedure.</a></td>    </tr>
    <tr>      <td class='from'>96 D</td>      <td class='target'><a href='standards.htm#standard_d96'>Variable has repeated initialisation.</a></td>    </tr>
    <tr>      <td class='from'>99 D</td>      <td class='target'><a href='standards.htm#standard_d99'>Named pointer object used in procedure.</a></td>    </tr>
    <tr>      <td class='from'>100 D</td>      <td class='target'><a href='standards.htm#standard_d100'>Named static member object used in procedure.</a></td>    </tr>
    <tr>      <td class='from'>101 D</td>      <td class='target'><a href='standards.htm#standard_d101'>Function has static member variable side effects.</a></td>    </tr>
    <tr>      <td class='from'>102 D</td>      <td class='target'><a href='standards.htm#standard_d102'>Void function has static member variable side effects.</a></td>    </tr>
    <tr>      <td class='from'>104 D</td>      <td class='target'><a href='standards.htm#standard_d104'>Structure implementation not hidden.</a></td>    </tr>
    <tr>      <td class='from'>105 D</td>      <td class='target'><a href='standards.htm#standard_d105'>DU anomaly dead code, variable value is unused on all paths.</a></td>    </tr>
    <tr>      <td class='from'>107 D</td>      <td class='target'><a href='standards.htm#standard_d107'>Attempt to change system call capture string.</a></td>    </tr>
    <tr>      <td class='from'>108 D</td>      <td class='target'><a href='standards.htm#standard_d108'>Tainted argument to unprototyped func ptr.</a></td>    </tr>
    <tr>      <td class='from'>109 D</td>      <td class='target'><a href='standards.htm#standard_d109'>Tainted argument to formatted i/o function.</a></td>    </tr>
    <tr>      <td class='from'>3 X</td>      <td class='target'><a href='standards.htm#standard_x3'>Variable has only one use.</a></td>    </tr>
    <tr>      <td class='from'>1 I</td>      <td class='target'><a href='standards.htm#standard_i1'>Local variables contribute nothing to results.</a></td>    </tr>
    <tr>      <td class='from'>1 U</td>      <td class='target'><a href='standards.htm#standard_u1'>Inter-file recursion found.</a></td>    </tr>
    <tr>      <td class='from'>2 U</td>      <td class='target'><a href='standards.htm#standard_u2'>Procedure not called anywhere in system.</a></td>    </tr>
    <tr>      <td class='from'>3 U</td>      <td class='target'><a href='standards.htm#standard_u3'>No procedures in this file called from other files.</a></td>    </tr>
    <tr>      <td class='from'>1 J</td>      <td class='target'><a href='standards.htm#standard_j1'>Unreachable Code found.</a></td>    </tr>
    <tr>      <td class='from'>3 J</td>      <td class='target'><a href='standards.htm#standard_j3'>All internal linkage calls unreachable.</a></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_lib' name='keyword_lib'><div class='rule'><div class='id'>Lib</div></div></a><div class='headline'>Standards relating to library functions</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>122 S</td>      <td class='target'><a href='standards.htm#standard_s122'>Use of abort, exit, etc.</a></td>    </tr>
    <tr>      <td class='from'>218 S</td>      <td class='target'><a href='standards.htm#standard_s218'>Name is used in standard libraries.</a></td>    </tr>
    <tr>      <td class='from'>407 S</td>      <td class='target'><a href='standards.htm#standard_s407'>free used on string.</a></td>    </tr>
    <tr>      <td class='from'>480 S</td>      <td class='target'><a href='standards.htm#standard_s480'>String function params access same variable.</a></td>    </tr>
    <tr>      <td class='from'>483 S</td>      <td class='target'><a href='standards.htm#standard_s483'>free parameter is not heap item.</a></td>    </tr>
    <tr>      <td class='from'>484 S</td>      <td class='target'><a href='standards.htm#standard_s484'>Attempt to use already freed object.</a></td>    </tr>
    <tr>      <td class='from'>487 S</td>      <td class='target'><a href='standards.htm#standard_s487'>Insufficient space allocated.</a></td>    </tr>
    <tr>      <td class='from'>489 S</td>      <td class='target'><a href='standards.htm#standard_s489'>Insufficient space for operation.</a></td>    </tr>
    <tr>      <td class='from'>572 S</td>      <td class='target'><a href='standards.htm#standard_s572'>Side effect in assert.</a></td>    </tr>
    <tr>      <td class='from'>600 S</td>      <td class='target'><a href='standards.htm#standard_s600'>Argument of strlen is unterminated.</a></td>    </tr>
    <tr>      <td class='from'>602 S</td>      <td class='target'><a href='standards.htm#standard_s602'>strtok may change the parse string.</a></td>    </tr>
    <tr>      <td class='from'>618 S</td>      <td class='target'><a href='standards.htm#standard_s618'>Use of memcmp between structures.</a></td>    </tr>
    <tr>      <td class='from'>633 S</td>      <td class='target'><a href='standards.htm#standard_s633'>Use of a broken or risky cryptography algorithm.</a></td>    </tr>
    <tr>      <td class='from'>638 S</td>      <td class='target'><a href='standards.htm#standard_s638'>Memory allocation non-conformant with type.</a></td>    </tr>
    <tr>      <td class='from'>50 D</td>      <td class='target'><a href='standards.htm#standard_d50'>Memory not freed after last reference.</a></td>    </tr>
    <tr>      <td class='from'>51 D</td>      <td class='target'><a href='standards.htm#standard_d51'>Attempt to read from freed memory.</a></td>    </tr>
    <tr>      <td class='from'>87 D</td>      <td class='target'><a href='standards.htm#standard_d87'>Illegal shared object in signal handler.</a></td>    </tr>
    <tr>      <td class='from'>88 D</td>      <td class='target'><a href='standards.htm#standard_d88'>Illegal use of longjmp in signal handler.</a></td>    </tr>
    <tr>      <td class='from'>89 D</td>      <td class='target'><a href='standards.htm#standard_d89'>Illegal use of raise in signal handler.</a></td>    </tr>
    <tr>      <td class='from'>90 D</td>      <td class='target'><a href='standards.htm#standard_d90'>Unguarded global used in threaded function.</a></td>    </tr>
    <tr>      <td class='from'>97 D</td>      <td class='target'><a href='standards.htm#standard_d97'>Signal called from within signal handler.</a></td>    </tr>
    <tr>      <td class='from'>107 D</td>      <td class='target'><a href='standards.htm#standard_d107'>Attempt to change system call capture string.</a></td>    </tr>
    <tr>      <td class='from'>109 D</td>      <td class='target'><a href='standards.htm#standard_d109'>Tainted argument to formatted i/o function.</a></td>    </tr>
    <tr>      <td class='from'>111 D</td>      <td class='target'><a href='standards.htm#standard_d111'>Errno checked without having been set.</a></td>    </tr>
    <tr>      <td class='from'>112 D</td>      <td class='target'><a href='standards.htm#standard_d112'>Free called twice on same variable.</a></td>    </tr>
    <tr>      <td class='from'>66 X</td>      <td class='target'><a href='standards.htm#standard_x66'>Insufficient array space at call.</a></td>    </tr>
    <tr>      <td class='from'>70 X</td>      <td class='target'><a href='standards.htm#standard_x70'>Array has insufficient space.</a></td>    </tr>
    <tr>      <td class='from'>71 X</td>      <td class='target'><a href='standards.htm#standard_x71'>Insufficient space for copy.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_io' name='keyword_io'><div class='rule'><div class='id'>Io</div></div></a><div class='headline'>Standards relating to IO functions</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>251 S</td>      <td class='target'><a href='standards.htm#standard_s251'>Use of stdio.h instead of iostream.h.</a></td>    </tr>
    <tr>      <td class='from'>486 S</td>      <td class='target'><a href='standards.htm#standard_s486'>Incorrect number of formats in output function.</a></td>    </tr>
    <tr>      <td class='from'>586 S</td>      <td class='target'><a href='standards.htm#standard_s586'>Format is not %j for user defined type.</a></td>    </tr>
    <tr>      <td class='from'>589 S</td>      <td class='target'><a href='standards.htm#standard_s589'>Format is not appropriate type.</a></td>    </tr>
    <tr>      <td class='from'>590 S</td>      <td class='target'><a href='standards.htm#standard_s590'>Mode fault in fopen.</a></td>    </tr>
    <tr>      <td class='from'>591 S</td>      <td class='target'><a href='standards.htm#standard_s591'>Inappropriate use of file pointer.</a></td>    </tr>
    <tr>      <td class='from'>592 S</td>      <td class='target'><a href='standards.htm#standard_s592'>Use of filename based functions.</a></td>    </tr>
    <tr>      <td class='from'>593 S</td>      <td class='target'><a href='standards.htm#standard_s593'>Use fseek() rather than rewind().</a></td>    </tr>
    <tr>      <td class='from'>594 S</td>      <td class='target'><a href='standards.htm#standard_s594'>Use setvbuf() rather than setbuf().</a></td>    </tr>
    <tr>      <td class='from'>48 D</td>      <td class='target'><a href='standards.htm#standard_d48'>Attempt to write to unopened file.</a></td>    </tr>
    <tr>      <td class='from'>49 D</td>      <td class='target'><a href='standards.htm#standard_d49'>File pointer not closed on exit.</a></td>    </tr>
    <tr>      <td class='from'>75 D</td>      <td class='target'><a href='standards.htm#standard_d75'>Attempt to open file pointer more than once.</a></td>    </tr>
    <tr>      <td class='from'>81 D</td>      <td class='target'><a href='standards.htm#standard_d81'>Attempt to remove an open file.</a></td>    </tr>
    <tr>      <td class='from'>82 D</td>      <td class='target'><a href='standards.htm#standard_d82'>fsetpos values not generated by fgetpos.</a></td>    </tr>
    <tr>      <td class='from'>83 D</td>      <td class='target'><a href='standards.htm#standard_d83'>Potentially repeated call to ungetc.</a></td>    </tr>
    <tr>      <td class='from'>84 D</td>      <td class='target'><a href='standards.htm#standard_d84'>No fseek or flush before I/O.</a></td>    </tr>
    <tr>      <td class='from'>85 D</td>      <td class='target'><a href='standards.htm#standard_d85'>Filename not verified before fopen.</a></td>    </tr>
    <tr>      <td class='from'>86 D</td>      <td class='target'><a href='standards.htm#standard_d86'>User input not checked before use.</a></td>    </tr>
    <tr>      <td class='from'>98 D</td>      <td class='target'><a href='standards.htm#standard_d98'>Attempt to write to file opened read only.</a></td>    </tr>
    <tr>      <td class='from'>103 D</td>      <td class='target'><a href='standards.htm#standard_d103'>File opened both read and write.</a></td>    </tr>
    <tr>      <td class='from'>113 D</td>      <td class='target'><a href='standards.htm#standard_d113'>File closed more than once.</a></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_lit' name='keyword_lit'><div class='rule'><div class='id'>Lit</div></div></a><div class='headline'>Standards relating to literals</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>81 S</td>      <td class='target'><a href='standards.htm#standard_s81'>Use of trigraph.</a></td>    </tr>
    <tr>      <td class='from'>82 S</td>      <td class='target'><a href='standards.htm#standard_s82'>Use of wide string literal.</a></td>    </tr>
    <tr>      <td class='from'>83 S</td>      <td class='target'><a href='standards.htm#standard_s83'>Octal number found.</a></td>    </tr>
    <tr>      <td class='from'>113 S</td>      <td class='target'><a href='standards.htm#standard_s113'>Non standard character   in source.</a></td>    </tr>
    <tr>      <td class='from'>115 S</td>      <td class='target'><a href='standards.htm#standard_s115'>String incorrectly terminated.</a></td>    </tr>
    <tr>      <td class='from'>157 S</td>      <td class='target'><a href='standards.htm#standard_s157'>Modification of string literal.</a></td>    </tr>
    <tr>      <td class='from'>176 S</td>      <td class='target'><a href='standards.htm#standard_s176'>Non standard escape sequence    in source.</a></td>    </tr>
    <tr>      <td class='from'>200 S</td>      <td class='target'><a href='standards.htm#standard_s200'>Define used for numeric constant.</a></td>    </tr>
    <tr>      <td class='from'>201 S</td>      <td class='target'><a href='standards.htm#standard_s201'>Use of numeric literal in expression.</a></td>    </tr>
    <tr>      <td class='from'>226 S</td>      <td class='target'><a href='standards.htm#standard_s226'>Bit field is not octal, hex or suffix u.</a></td>    </tr>
    <tr>      <td class='from'>227 S</td>      <td class='target'><a href='standards.htm#standard_s227'>Numeric bit operand is not octal,hex or u.</a></td>    </tr>
    <tr>      <td class='from'>252 S</td>      <td class='target'><a href='standards.htm#standard_s252'>Lower case suffix to literal number.</a></td>    </tr>
    <tr>      <td class='from'>267 S</td>      <td class='target'><a href='standards.htm#standard_s267'>Hexadecimal number with lower case char.</a></td>    </tr>
    <tr>      <td class='from'>295 S</td>      <td class='target'><a href='standards.htm#standard_s295'>Use of digraph.</a></td>    </tr>
    <tr>      <td class='from'>331 S</td>      <td class='target'><a href='standards.htm#standard_s331'>Literal value requires a U suffix.</a></td>    </tr>
    <tr>      <td class='from'>366 S</td>      <td class='target'><a href='standards.htm#standard_s366'>String continuation - use of \.</a></td>    </tr>
    <tr>      <td class='from'>376 S</td>      <td class='target'><a href='standards.htm#standard_s376'>Use of octal escape sequence.</a></td>    </tr>
    <tr>      <td class='from'>377 S</td>      <td class='target'><a href='standards.htm#standard_s377'>Null character used within a string.</a></td>    </tr>
    <tr>      <td class='from'>425 S</td>      <td class='target'><a href='standards.htm#standard_s425'>float literal with no F suffix.</a></td>    </tr>
    <tr>      <td class='from'>450 S</td>      <td class='target'><a href='standards.htm#standard_s450'>Wide string and string concatenated.</a></td>    </tr>
    <tr>      <td class='from'>466 S</td>      <td class='target'><a href='standards.htm#standard_s466'>long literal with no L suffix.</a></td>    </tr>
    <tr>      <td class='from'>530 S</td>      <td class='target'><a href='standards.htm#standard_s530'>NULL used in integer context.</a></td>    </tr>
    <tr>      <td class='from'>531 S</td>      <td class='target'><a href='standards.htm#standard_s531'>Literal zero used in pointer context.</a></td>    </tr>
    <tr>      <td class='from'>550 S</td>      <td class='target'><a href='standards.htm#standard_s550'>Unsuffixed hex or octal is unsigned, add U.</a></td>    </tr>
    <tr>      <td class='from'>583 S</td>      <td class='target'><a href='standards.htm#standard_s583'>Comparison of pointer and string literal.</a></td>    </tr>
    <tr>      <td class='from'>604 S</td>      <td class='target'><a href='standards.htm#standard_s604'>Use of numeric literal as array bound/subscript.</a></td>    </tr>
    <tr>      <td class='from'>623 S</td>      <td class='target'><a href='standards.htm#standard_s623'>String assigned to non const object.</a></td>    </tr>
    <tr>      <td class='from'>58 D</td>      <td class='target'><a href='standards.htm#standard_d58'>Character or string literal re-used.</a></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_metric' name='keyword_metric'><div class='rule'><div class='id'>Metric</div></div></a><div class='headline'>Standards relating to metrics</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>294 S</td>      <td class='target'><a href='standards.htm#standard_s294'>Namespace nested more than *** deep.</a></td>    </tr>
    <tr>      <td class='from'>353 S</td>      <td class='target'><a href='standards.htm#standard_s353'>Inline member has more than *** statements.</a></td>    </tr>
    <tr>      <td class='from'>1 C</td>      <td class='target'><a href='standards.htm#standard_c1'>Cyclomatic complexity greater than ***.</a></td>    </tr>
    <tr>      <td class='from'>2 C</td>      <td class='target'><a href='standards.htm#standard_c2'>Procedure is not reducible in terms of intervals.</a></td>    </tr>
    <tr>      <td class='from'>3 C</td>      <td class='target'><a href='standards.htm#standard_c3'>Procedure contains essential knots.</a></td>    </tr>
    <tr>      <td class='from'>4 C</td>      <td class='target'><a href='standards.htm#standard_c4'>Procedure is not structured.</a></td>    </tr>
    <tr>      <td class='from'>6 C</td>      <td class='target'><a href='standards.htm#standard_c6'>Procedure has more than one entry point.</a></td>    </tr>
    <tr>      <td class='from'>7 C</td>      <td class='target'><a href='standards.htm#standard_c7'>Procedure has more than one exit point.</a></td>    </tr>
    <tr>      <td class='from'>9 C</td>      <td class='target'><a href='standards.htm#standard_c9'>Ess Cyclomatic Complexity greater than ***.</a></td>    </tr>
    <tr>      <td class='from'>10 C</td>      <td class='target'><a href='standards.htm#standard_c10'>Loop depth greater than ***.</a></td>    </tr>
    <tr>      <td class='from'>11 C</td>      <td class='target'><a href='standards.htm#standard_c11'>More than *** depth 1 loops.</a></td>    </tr>
    <tr>      <td class='from'>12 C</td>      <td class='target'><a href='standards.htm#standard_c12'>More than *** knots.</a></td>    </tr>
    <tr>      <td class='from'>13 C</td>      <td class='target'><a href='standards.htm#standard_c13'>More then *** essential knots.</a></td>    </tr>
    <tr>      <td class='from'>2 Q</td>      <td class='target'><a href='standards.htm#standard_q2'>LCSAJ density exceeds ***.</a></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_misc' name='keyword_misc'><div class='rule'><div class='id'>Misc</div></div></a><div class='headline'>Standards relating to other issues</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>22 S</td>      <td class='target'><a href='standards.htm#standard_s22'>Use of obsolete language feature ( use = - ).</a></td>    </tr>
    <tr>      <td class='from'>24 S</td>      <td class='target'><a href='standards.htm#standard_s24'>Use of Noanalysis annotation.</a></td>    </tr>
    <tr>      <td class='from'>45 S</td>      <td class='target'><a href='standards.htm#standard_s45'>Use of C++ keyword.</a></td>    </tr>
    <tr>      <td class='from'>293 S</td>      <td class='target'><a href='standards.htm#standard_s293'>Non ANSI/ISO construct used.</a></td>    </tr>
    <tr>      <td class='from'>305 S</td>      <td class='target'><a href='standards.htm#standard_s305'>Unused inspect annotation for standard ...</a></td>    </tr>
    <tr>      <td class='from'>8 C</td>      <td class='target'><a href='standards.htm#standard_c8'>Unused LDRA_INSPECTED annotation.</a></td>    </tr>
    <tr>      <td class='from'>47 D</td>      <td class='target'><a href='standards.htm#standard_d47'>Unused inspect annotation.</a></td>    </tr>
    <tr>      <td class='from'>2 J</td>      <td class='target'><a href='standards.htm#standard_j2'>Unused inspect annotation.</a></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_pre' name='keyword_pre'><div class='rule'><div class='id'>Pre</div></div></a><div class='headline'>Standards relating to pre-processor</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>67 S</td>      <td class='target'><a href='standards.htm#standard_s67'>#define used in a block.</a></td>    </tr>
    <tr>      <td class='from'>68 S</td>      <td class='target'><a href='standards.htm#standard_s68'>#undef used.</a></td>    </tr>
    <tr>      <td class='from'>69 S</td>      <td class='target'><a href='standards.htm#standard_s69'>#pragma used.</a></td>    </tr>
    <tr>      <td class='from'>76 S</td>      <td class='target'><a href='standards.htm#standard_s76'>More than one of # or ## in a macro.</a></td>    </tr>
    <tr>      <td class='from'>77 S</td>      <td class='target'><a href='standards.htm#standard_s77'>Macro replacement list needs parentheses.</a></td>    </tr>
    <tr>      <td class='from'>78 S</td>      <td class='target'><a href='standards.htm#standard_s78'>Macro parameter not in brackets.</a></td>    </tr>
    <tr>      <td class='from'>79 S</td>      <td class='target'><a href='standards.htm#standard_s79'>Macro contains unacceptable items.</a></td>    </tr>
    <tr>      <td class='from'>86 S</td>      <td class='target'><a href='standards.htm#standard_s86'>Attempt to define reserved word.</a></td>    </tr>
    <tr>      <td class='from'>100 S</td>      <td class='target'><a href='standards.htm#standard_s100'>#include filename is non conformant.</a></td>    </tr>
    <tr>      <td class='from'>125 S</td>      <td class='target'><a href='standards.htm#standard_s125'>Use of ## or # in a macro.</a></td>    </tr>
    <tr>      <td class='from'>126 S</td>      <td class='target'><a href='standards.htm#standard_s126'>A #if has no #endif in the same file.</a></td>    </tr>
    <tr>      <td class='from'>145 S</td>      <td class='target'><a href='standards.htm#standard_s145'>#if has invalid expression.</a></td>    </tr>
    <tr>      <td class='from'>146 S</td>      <td class='target'><a href='standards.htm#standard_s146'>#define with empty parameter list.</a></td>    </tr>
    <tr>      <td class='from'>147 S</td>      <td class='target'><a href='standards.htm#standard_s147'>Spurious characters after preprocessor directive.</a></td>    </tr>
    <tr>      <td class='from'>151 S</td>      <td class='target'><a href='standards.htm#standard_s151'>Use of global variable in macro definition.</a></td>    </tr>
    <tr>      <td class='from'>152 S</td>      <td class='target'><a href='standards.htm#standard_s152'>Use of a comment in a macro definition.</a></td>    </tr>
    <tr>      <td class='from'>153 S</td>      <td class='target'><a href='standards.htm#standard_s153'>Use of a comment in a pre-processor directive.</a></td>    </tr>
    <tr>      <td class='from'>155 S</td>      <td class='target'><a href='standards.htm#standard_s155'>Comments between preprocessor directives.</a></td>    </tr>
    <tr>      <td class='from'>156 S</td>      <td class='target'><a href='standards.htm#standard_s156'>Use of 'defined' keyword in macro body.</a></td>    </tr>
    <tr>      <td class='from'>160 S</td>      <td class='target'><a href='standards.htm#standard_s160'>Loop in macro expansion.</a></td>    </tr>
    <tr>      <td class='from'>200 S</td>      <td class='target'><a href='standards.htm#standard_s200'>Define used for numeric constant.</a></td>    </tr>
    <tr>      <td class='from'>209 S</td>      <td class='target'><a href='standards.htm#standard_s209'>Preprocessor command indented.</a></td>    </tr>
    <tr>      <td class='from'>210 S</td>      <td class='target'><a href='standards.htm#standard_s210'>Macro name is not upper case.</a></td>    </tr>
    <tr>      <td class='from'>228 S</td>      <td class='target'><a href='standards.htm#standard_s228'>Bracket mismatch ( or { in macro definition.</a></td>    </tr>
    <tr>      <td class='from'>229 S</td>      <td class='target'><a href='standards.htm#standard_s229'>Bracket mismatch ) or } in macro definition.</a></td>    </tr>
    <tr>      <td class='from'>243 S</td>      <td class='target'><a href='standards.htm#standard_s243'>Included file not protected with #define.</a></td>    </tr>
    <tr>      <td class='from'>247 S</td>      <td class='target'><a href='standards.htm#standard_s247'>Macro definition calls itself.</a></td>    </tr>
    <tr>      <td class='from'>248 S</td>      <td class='target'><a href='standards.htm#standard_s248'>Divide by zero in preprocessor directive.</a></td>    </tr>
    <tr>      <td class='from'>255 S</td>      <td class='target'><a href='standards.htm#standard_s255'>Found #if, #ifdef, #else, #elif .</a></td>    </tr>
    <tr>      <td class='from'>272 S</td>      <td class='target'><a href='standards.htm#standard_s272'>Found #ifndef (ref. removed).</a></td>    </tr>
    <tr>      <td class='from'>273 S</td>      <td class='target'><a href='standards.htm#standard_s273'>Found #define.</a></td>    </tr>
    <tr>      <td class='from'>307 S</td>      <td class='target'><a href='standards.htm#standard_s307'>Use of #line, #error preprocessor directives.</a></td>    </tr>
    <tr>      <td class='from'>324 S</td>      <td class='target'><a href='standards.htm#standard_s324'>Macro call has wrong number of parameters.</a></td>    </tr>
    <tr>      <td class='from'>335 S</td>      <td class='target'><a href='standards.htm#standard_s335'>Operator defined contains illegal items.</a></td>    </tr>
    <tr>      <td class='from'>336 S</td>      <td class='target'><a href='standards.htm#standard_s336'>#if expansion contains define operator.</a></td>    </tr>
    <tr>      <td class='from'>337 S</td>      <td class='target'><a href='standards.htm#standard_s337'>Undefined macro variable in #if.</a></td>    </tr>
    <tr>      <td class='from'>338 S</td>      <td class='target'><a href='standards.htm#standard_s338'>#include preceded by non preproc directives.</a></td>    </tr>
    <tr>      <td class='from'>339 S</td>      <td class='target'><a href='standards.htm#standard_s339'>#include directive with illegal items.</a></td>    </tr>
    <tr>      <td class='from'>340 S</td>      <td class='target'><a href='standards.htm#standard_s340'>Use of function like macro.</a></td>    </tr>
    <tr>      <td class='from'>341 S</td>      <td class='target'><a href='standards.htm#standard_s341'>Preprocessor construct as macro parameter.</a></td>    </tr>
    <tr>      <td class='from'>342 S</td>      <td class='target'><a href='standards.htm#standard_s342'>Extra chars after preprocessor directive.</a></td>    </tr>
    <tr>      <td class='from'>343 S</td>      <td class='target'><a href='standards.htm#standard_s343'>#else has no #if, etc in the same file.</a></td>    </tr>
    <tr>      <td class='from'>347 S</td>      <td class='target'><a href='standards.htm#standard_s347'>Macro parameter list has leading space.</a></td>    </tr>
    <tr>      <td class='from'>348 S</td>      <td class='target'><a href='standards.htm#standard_s348'>Use of the NULL macro.</a></td>    </tr>
    <tr>      <td class='from'>367 S</td>      <td class='target'><a href='standards.htm#standard_s367'>Macro continuation - use of \.</a></td>    </tr>
    <tr>      <td class='from'>368 S</td>      <td class='target'><a href='standards.htm#standard_s368'>Pragma continuation - use of \.</a></td>    </tr>
    <tr>      <td class='from'>379 S</td>      <td class='target'><a href='standards.htm#standard_s379'>Macro exceeds *** continuation lines.</a></td>    </tr>
    <tr>      <td class='from'>383 S</td>      <td class='target'><a href='standards.htm#standard_s383'>Identifier name matches macro name.</a></td>    </tr>
    <tr>      <td class='from'>384 S</td>      <td class='target'><a href='standards.htm#standard_s384'>Identifier matches macro name in 31 chars.</a></td>    </tr>
    <tr>      <td class='from'>405 S</td>      <td class='target'><a href='standards.htm#standard_s405'>Macro name appears in own replacement list.</a></td>    </tr>
    <tr>      <td class='from'>417 S</td>      <td class='target'><a href='standards.htm#standard_s417'>Use of #if preprocessor command.</a></td>    </tr>
    <tr>      <td class='from'>426 S</td>      <td class='target'><a href='standards.htm#standard_s426'>#undef used in a block.</a></td>    </tr>
    <tr>      <td class='from'>478 S</td>      <td class='target'><a href='standards.htm#standard_s478'>Name starts with ISO reserved prefix.</a></td>    </tr>
    <tr>      <td class='from'>562 S</td>      <td class='target'><a href='standards.htm#standard_s562'>Use of ++,-- or = in macro parameters.</a></td>    </tr>
    <tr>      <td class='from'>568 S</td>      <td class='target'><a href='standards.htm#standard_s568'>#include &quot;filename&quot; uses standard library name.</a></td>    </tr>
    <tr>      <td class='from'>573 S</td>      <td class='target'><a href='standards.htm#standard_s573'>Macro concatenation of uni char names.</a></td>    </tr>
    <tr>      <td class='from'>580 S</td>      <td class='target'><a href='standards.htm#standard_s580'>Macro redefinition without using #undef.</a></td>    </tr>
    <tr>      <td class='from'>616 S</td>      <td class='target'><a href='standards.htm#standard_s616'>Preprocessor result not 0 or 1.</a></td>    </tr>
    <tr>      <td class='from'>622 S</td>      <td class='target'><a href='standards.htm#standard_s622'>Macro parameters are not unique within limits.</a></td>    </tr>
    <tr>      <td class='from'>626 S</td>      <td class='target'><a href='standards.htm#standard_s626'>#define of keyword.</a></td>    </tr>
    <tr>      <td class='from'>628 S</td>      <td class='target'><a href='standards.htm#standard_s628'>Macro not used in translation unit.</a></td>    </tr>
    <tr>      <td class='from'>637 S</td>      <td class='target'><a href='standards.htm#standard_s637'># operand followed by ##.</a></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_stmt' name='keyword_stmt'><div class='rule'><div class='id'>Stmt</div></div></a><div class='headline'>Standards relating to statements</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>57 S</td>      <td class='target'><a href='standards.htm#standard_s57'>Statement with no side effect.</a></td>    </tr>
    <tr>      <td class='from'>58 S</td>      <td class='target'><a href='standards.htm#standard_s58'>Null statement found.</a></td>    </tr>
    <tr>      <td class='from'>545 S</td>      <td class='target'><a href='standards.htm#standard_s545'>Assignment of overlapping storage.</a></td>    </tr>
    <tr>      <td class='from'>564 S</td>      <td class='target'><a href='standards.htm#standard_s564'>Reference assignment to wider scope.</a></td>    </tr>
    <tr>      <td class='from'>565 S</td>      <td class='target'><a href='standards.htm#standard_s565'>Assignment to wider scope.</a></td>    </tr>
    <tr>      <td class='from'>634 S</td>      <td class='target'><a href='standards.htm#standard_s634'>Empty block found.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_if' name='keyword_if'><div class='rule'><div class='id'>If</div></div></a><div class='headline'>Standards relating to <i>if</i> statements</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>5 S</td>      <td class='target'><a href='standards.htm#standard_s5'>Empty then clause.</a></td>    </tr>
    <tr>      <td class='from'>8 S</td>      <td class='target'><a href='standards.htm#standard_s8'>Empty else clause.</a></td>    </tr>
    <tr>      <td class='from'>12 S</td>      <td class='target'><a href='standards.htm#standard_s12'>No brackets to then/else (added by Testbed).</a></td>    </tr>
    <tr>      <td class='from'>49 S</td>      <td class='target'><a href='standards.htm#standard_s49'>Logical conjunctions need brackets.</a></td>    </tr>
    <tr>      <td class='from'>59 S</td>      <td class='target'><a href='standards.htm#standard_s59'>Else alternative missing in if.</a></td>    </tr>
    <tr>      <td class='from'>116 S</td>      <td class='target'><a href='standards.htm#standard_s116'>Boolean comparison with 0 preferred.</a></td>    </tr>
    <tr>      <td class='from'>402 S</td>      <td class='target'><a href='standards.htm#standard_s402'>Comparison of booleans.</a></td>    </tr>
    <tr>      <td class='from'>477 S</td>      <td class='target'><a href='standards.htm#standard_s477'>Empty else clause following else if.</a></td>    </tr>
    <tr>      <td class='from'>506 S</td>      <td class='target'><a href='standards.htm#standard_s506'>Use of boolean with relational operator.</a></td>    </tr>
    <tr>      <td class='from'>639 S</td>      <td class='target'><a href='standards.htm#standard_s639'>Potentially missing else statement.</a></td>    </tr>
    <tr>      <td class='from'>73 D</td>      <td class='target'><a href='standards.htm#standard_d73'>Predicate variable modified in condition.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_switch' name='keyword_switch'><div class='rule'><div class='id'>Switch</div></div></a><div class='headline'>Standards relating to <i>switch</i> statements</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>25 S</td>      <td class='target'><a href='standards.htm#standard_s25'>Null case in switch statement.</a></td>    </tr>
    <tr>      <td class='from'>48 S</td>      <td class='target'><a href='standards.htm#standard_s48'>No default case in switch statement.</a></td>    </tr>
    <tr>      <td class='from'>60 S</td>      <td class='target'><a href='standards.htm#standard_s60'>Empty switch statement.</a></td>    </tr>
    <tr>      <td class='from'>61 S</td>      <td class='target'><a href='standards.htm#standard_s61'>Switch contains default only.</a></td>    </tr>
    <tr>      <td class='from'>62 S</td>      <td class='target'><a href='standards.htm#standard_s62'>Switch case not terminated with break.</a></td>    </tr>
    <tr>      <td class='from'>111 S</td>      <td class='target'><a href='standards.htm#standard_s111'>Label is not part of switch statement (MR).</a></td>    </tr>
    <tr>      <td class='from'>121 S</td>      <td class='target'><a href='standards.htm#standard_s121'>Use of boolean expression in switch.</a></td>    </tr>
    <tr>      <td class='from'>245 S</td>      <td class='target'><a href='standards.htm#standard_s245'>Case statement in nested block.</a></td>    </tr>
    <tr>      <td class='from'>276 S</td>      <td class='target'><a href='standards.htm#standard_s276'>Case is not part of switch enumeration.</a></td>    </tr>
    <tr>      <td class='from'>277 S</td>      <td class='target'><a href='standards.htm#standard_s277'>Switch chooser is not an enumeration.</a></td>    </tr>
    <tr>      <td class='from'>278 S</td>      <td class='target'><a href='standards.htm#standard_s278'>Switch has missing or extra cases.</a></td>    </tr>
    <tr>      <td class='from'>314 S</td>      <td class='target'><a href='standards.htm#standard_s314'>Switch has only 1 case and default.</a></td>    </tr>
    <tr>      <td class='from'>322 S</td>      <td class='target'><a href='standards.htm#standard_s322'>Default is not last case of switch.</a></td>    </tr>
    <tr>      <td class='from'>323 S</td>      <td class='target'><a href='standards.htm#standard_s323'>Switch has more than one default case.</a></td>    </tr>
    <tr>      <td class='from'>385 S</td>      <td class='target'><a href='standards.htm#standard_s385'>MISRA switch statement syntax violation.</a></td>    </tr>
    <tr>      <td class='from'>410 S</td>      <td class='target'><a href='standards.htm#standard_s410'>Switch empty default has no comment.</a></td>    </tr>
    <tr>      <td class='from'>428 S</td>      <td class='target'><a href='standards.htm#standard_s428'>No {} for switch (added by Testbed).</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_loop' name='keyword_loop'><div class='rule'><div class='id'>Loop</div></div></a><div class='headline'>Standards relating to iteration statements</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>11 S</td>      <td class='target'><a href='standards.htm#standard_s11'>No brackets to loop body (added by Testbed).</a></td>    </tr>
    <tr>      <td class='from'>26 S</td>      <td class='target'><a href='standards.htm#standard_s26'>Loop control expression may not terminate loop.</a></td>    </tr>
    <tr>      <td class='from'>39 S</td>      <td class='target'><a href='standards.htm#standard_s39'>Unsuitable type for loop variable.</a></td>    </tr>
    <tr>      <td class='from'>40 S</td>      <td class='target'><a href='standards.htm#standard_s40'>Loop index is not declared locally.</a></td>    </tr>
    <tr>      <td class='from'>140 S</td>      <td class='target'><a href='standards.htm#standard_s140'>Infeasible loop condition found.</a></td>    </tr>
    <tr>      <td class='from'>161 S</td>      <td class='target'><a href='standards.htm#standard_s161'>Declaration in for statement.</a></td>    </tr>
    <tr>      <td class='from'>268 S</td>      <td class='target'><a href='standards.htm#standard_s268'>Empty initialisation exprsn in for loop.</a></td>    </tr>
    <tr>      <td class='from'>269 S</td>      <td class='target'><a href='standards.htm#standard_s269'>Empty increment exprsn in for loop.</a></td>    </tr>
    <tr>      <td class='from'>270 S</td>      <td class='target'><a href='standards.htm#standard_s270'>For loop initialisation is not simple.</a></td>    </tr>
    <tr>      <td class='from'>271 S</td>      <td class='target'><a href='standards.htm#standard_s271'>For loop incrementation is not simple.</a></td>    </tr>
    <tr>      <td class='from'>409 S</td>      <td class='target'><a href='standards.htm#standard_s409'>More than one break or goto statement in loop.</a></td>    </tr>
    <tr>      <td class='from'>429 S</td>      <td class='target'><a href='standards.htm#standard_s429'>Empty middle expression in for loop.</a></td>    </tr>
    <tr>      <td class='from'>430 S</td>      <td class='target'><a href='standards.htm#standard_s430'>Inconsistent usage of loop control variable.</a></td>    </tr>
    <tr>      <td class='from'>447 S</td>      <td class='target'><a href='standards.htm#standard_s447'>Loop termination not a simple constant test.</a></td>    </tr>
    <tr>      <td class='from'>505 S</td>      <td class='target'><a href='standards.htm#standard_s505'>Control variable not declared in for loop.</a></td>    </tr>
    <tr>      <td class='from'>510 S</td>      <td class='target'><a href='standards.htm#standard_s510'>Loop counter increment and operator defect.</a></td>    </tr>
    <tr>      <td class='from'>537 S</td>      <td class='target'><a href='standards.htm#standard_s537'>Extra loop control variable changed.</a></td>    </tr>
    <tr>      <td class='from'>542 S</td>      <td class='target'><a href='standards.htm#standard_s542'>Extra loop control variable is not bool.</a></td>    </tr>
    <tr>      <td class='from'>581 S</td>      <td class='target'><a href='standards.htm#standard_s581'>Loop conditions are independent.</a></td>    </tr>
    <tr>      <td class='from'>28 D</td>      <td class='target'><a href='standards.htm#standard_d28'>Potentially infinite loop found.</a></td>    </tr>
    <tr>      <td class='from'>38 D</td>      <td class='target'><a href='standards.htm#standard_d38'>More than one control variable for loop.</a></td>    </tr>
    <tr>      <td class='from'>39 D</td>      <td class='target'><a href='standards.htm#standard_d39'>More than one entry to a loop.</a></td>    </tr>
    <tr>      <td class='from'>40 D</td>      <td class='target'><a href='standards.htm#standard_d40'>More than one exit from a loop.</a></td>    </tr>
    <tr>      <td class='from'>55 D</td>      <td class='target'><a href='standards.htm#standard_d55'>Modification of loop counter in loop body.</a></td>    </tr>
    <tr>      <td class='from'>66 D</td>      <td class='target'><a href='standards.htm#standard_d66'>Non boolean control variable modified in loop.</a></td>    </tr>
    <tr>      <td class='from'>65 X</td>      <td class='target'><a href='standards.htm#standard_x65'>continue in ill-formed loop.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_jmp' name='keyword_jmp'><div class='rule'><div class='id'>Jmp</div></div></a><div class='headline'>Standards relating to jump statements</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>7 S</td>      <td class='target'><a href='standards.htm#standard_s7'>Jump out of procedure.</a></td>    </tr>
    <tr>      <td class='from'>13 S</td>      <td class='target'><a href='standards.htm#standard_s13'>goto detected.</a></td>    </tr>
    <tr>      <td class='from'>16 S</td>      <td class='target'><a href='standards.htm#standard_s16'>Multiple labels declared.</a></td>    </tr>
    <tr>      <td class='from'>31 S</td>      <td class='target'><a href='standards.htm#standard_s31'>Use of break statement in loop.</a></td>    </tr>
    <tr>      <td class='from'>32 S</td>      <td class='target'><a href='standards.htm#standard_s32'>Use of continue statement.</a></td>    </tr>
    <tr>      <td class='from'>43 S</td>      <td class='target'><a href='standards.htm#standard_s43'>Use of setjmp/longjmp.</a></td>    </tr>
    <tr>      <td class='from'>122 S</td>      <td class='target'><a href='standards.htm#standard_s122'>Use of abort, exit, etc.</a></td>    </tr>
    <tr>      <td class='from'>204 S</td>      <td class='target'><a href='standards.htm#standard_s204'>continue or goto not defined to rubbish.</a></td>    </tr>
    <tr>      <td class='from'>409 S</td>      <td class='target'><a href='standards.htm#standard_s409'>More than one break or goto statement in loop.</a></td>    </tr>
    <tr>      <td class='from'>509 S</td>      <td class='target'><a href='standards.htm#standard_s509'>goto label is backwards.</a></td>    </tr>
    <tr>      <td class='from'>511 S</td>      <td class='target'><a href='standards.htm#standard_s511'>Jump into nested block.</a></td>    </tr>
    <tr>      <td class='from'>65 X</td>      <td class='target'><a href='standards.htm#standard_x65'>continue in ill-formed loop.</a></td>    </tr>
  </table>
</div><!-- xref -->
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_except' name='keyword_except'><div class='rule'><div class='id'>Except</div></div></a><div class='headline'>Standards relating to exception handling</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>279 S</td>      <td class='target'><a href='standards.htm#standard_s279'>Try keyword found.</a></td>    </tr>
    <tr>      <td class='from'>280 S</td>      <td class='target'><a href='standards.htm#standard_s280'>Catch keyword found.</a></td>    </tr>
    <tr>      <td class='from'>281 S</td>      <td class='target'><a href='standards.htm#standard_s281'>Throw keyword found.</a></td>    </tr>
    <tr>      <td class='from'>453 S</td>      <td class='target'><a href='standards.htm#standard_s453'>Throw found in destructor.</a></td>    </tr>
    <tr>      <td class='from'>454 S</td>      <td class='target'><a href='standards.htm#standard_s454'>Throw type is not a class type.</a></td>    </tr>
    <tr>      <td class='from'>455 S</td>      <td class='target'><a href='standards.htm#standard_s455'>Catch is not by reference.</a></td>    </tr>
    <tr>      <td class='from'>523 S</td>      <td class='target'><a href='standards.htm#standard_s523'>Exception type is pointer.</a></td>    </tr>
    <tr>      <td class='from'>524 S</td>      <td class='target'><a href='standards.htm#standard_s524'>Jump into try or catch statement.</a></td>    </tr>
    <tr>      <td class='from'>525 S</td>      <td class='target'><a href='standards.htm#standard_s525'>throw with explicit NULL.</a></td>    </tr>
    <tr>      <td class='from'>526 S</td>      <td class='target'><a href='standards.htm#standard_s526'>Empty throw is not in catch statement.</a></td>    </tr>
    <tr>      <td class='from'>527 S</td>      <td class='target'><a href='standards.htm#standard_s527'>No master exception handler.</a></td>    </tr>
    <tr>      <td class='from'>541 S</td>      <td class='target'><a href='standards.htm#standard_s541'>Catch-all is not last catch.</a></td>    </tr>
    <tr>      <td class='from'>549 S</td>      <td class='target'><a href='standards.htm#standard_s549'>Catch in c'tor/d'tor references nonstatic member.</a></td>    </tr>
    <tr>      <td class='from'>556 S</td>      <td class='target'><a href='standards.htm#standard_s556'>Wrong order of catches for derived class.</a></td>    </tr>
    <tr>      <td class='from'>557 S</td>      <td class='target'><a href='standards.htm#standard_s557'>Function call can generate throw exception.</a></td>    </tr>
    <tr>      <td class='from'>56 D</td>      <td class='target'><a href='standards.htm#standard_d56'>Throw found with no catch in scope.</a></td>    </tr>
    <tr>      <td class='from'>71 D</td>      <td class='target'><a href='standards.htm#standard_d71'>No matching catch for throw in called function.</a></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
<div class='body_block'>
<div class='xref'>
  <table>
    <thead>      <tr>
        <td colspan='2'><div class='block_title'><a id='keyword_style' name='keyword_style'><div class='rule'><div class='id'>Style</div></div></a><div class='headline'>Standards relating to style</div></div></td>
      </tr>
      <tr>        <td class='from title'>Standard</td>        <td class='target title'>Description</td>      </tr>
    </thead>
    <tr>      <td class='from'>3 S</td>      <td class='target'><a href='standards.htm#standard_s3'>More than *** executable reformatted lines in file.</a></td>    </tr>
    <tr>      <td class='from'>4 S</td>      <td class='target'><a href='standards.htm#standard_s4'>Procedure exceeds *** reformatted lines.</a></td>    </tr>
    <tr>      <td class='from'>163 S</td>      <td class='target'><a href='standards.htm#standard_s163'>Function starts with upper case character.</a></td>    </tr>
    <tr>      <td class='from'>173 S</td>      <td class='target'><a href='standards.htm#standard_s173'>Class member starts with upper case character.</a></td>    </tr>
    <tr>      <td class='from'>174 S</td>      <td class='target'><a href='standards.htm#standard_s174'>Class member starts with lower case character.</a></td>    </tr>
    <tr>      <td class='from'>175 S</td>      <td class='target'><a href='standards.htm#standard_s175'>Function starts with lower case character.</a></td>    </tr>
    <tr>      <td class='from'>177 S</td>      <td class='target'><a href='standards.htm#standard_s177'>Identifier not declared on new line.</a></td>    </tr>
    <tr>      <td class='from'>178 S</td>      <td class='target'><a href='standards.htm#standard_s178'>Declaration statement not on new line.</a></td>    </tr>
    <tr>      <td class='from'>179 S</td>      <td class='target'><a href='standards.htm#standard_s179'>Extern not at start of header file.</a></td>    </tr>
    <tr>      <td class='from'>180 S</td>      <td class='target'><a href='standards.htm#standard_s180'>No space between * or &amp; and name in declaration.</a></td>    </tr>
    <tr>      <td class='from'>181 S</td>      <td class='target'><a href='standards.htm#standard_s181'>No space between if, while, for and expresn.</a></td>    </tr>
    <tr>      <td class='from'>182 S</td>      <td class='target'><a href='standards.htm#standard_s182'>No space after semi colon in for expression.</a></td>    </tr>
    <tr>      <td class='from'>183 S</td>      <td class='target'><a href='standards.htm#standard_s183'>No newline after semi colon.</a></td>    </tr>
    <tr>      <td class='from'>184 S</td>      <td class='target'><a href='standards.htm#standard_s184'>Spaces round -&gt; or [] operators.</a></td>    </tr>
    <tr>      <td class='from'>185 S</td>      <td class='target'><a href='standards.htm#standard_s185'>Space between unary operator and operand.</a></td>    </tr>
    <tr>      <td class='from'>186 S</td>      <td class='target'><a href='standards.htm#standard_s186'>Space missing before or after binary operator.</a></td>    </tr>
    <tr>      <td class='from'>187 S</td>      <td class='target'><a href='standards.htm#standard_s187'>Tab character in source.</a></td>    </tr>
    <tr>      <td class='from'>188 S</td>      <td class='target'><a href='standards.htm#standard_s188'>{ or } not on line by itself.</a></td>    </tr>
    <tr>      <td class='from'>189 S</td>      <td class='target'><a href='standards.htm#standard_s189'>Input line exceeds limit.</a></td>    </tr>
    <tr>      <td class='from'>190 S</td>      <td class='target'><a href='standards.htm#standard_s190'>{ ... } contents not indented by *** spaces.</a></td>    </tr>
    <tr>      <td class='from'>191 S</td>      <td class='target'><a href='standards.htm#standard_s191'>Space between function name and parenthesis.</a></td>    </tr>
    <tr>      <td class='from'>192 S</td>      <td class='target'><a href='standards.htm#standard_s192'>Static not on separate line in function defn.</a></td>    </tr>
    <tr>      <td class='from'>193 S</td>      <td class='target'><a href='standards.htm#standard_s193'>Inline not on separate line in function defn.</a></td>    </tr>
    <tr>      <td class='from'>194 S</td>      <td class='target'><a href='standards.htm#standard_s194'>Const not on separate line in member defn.</a></td>    </tr>
    <tr>      <td class='from'>195 S</td>      <td class='target'><a href='standards.htm#standard_s195'>Function return type needs a new line.</a></td>    </tr>
    <tr>      <td class='from'>204 S</td>      <td class='target'><a href='standards.htm#standard_s204'>continue or goto not defined to rubbish.</a></td>    </tr>
    <tr>      <td class='from'>208 S</td>      <td class='target'><a href='standards.htm#standard_s208'>Private data name needs trailing underscore.</a></td>    </tr>
    <tr>      <td class='from'>209 S</td>      <td class='target'><a href='standards.htm#standard_s209'>Preprocessor command indented.</a></td>    </tr>
    <tr>      <td class='from'>210 S</td>      <td class='target'><a href='standards.htm#standard_s210'>Macro name is not upper case.</a></td>    </tr>
    <tr>      <td class='from'>216 S</td>      <td class='target'><a href='standards.htm#standard_s216'>Pointer name does not have required suffix.</a></td>    </tr>
    <tr>      <td class='from'>219 S</td>      <td class='target'><a href='standards.htm#standard_s219'>User name starts with underscore.</a></td>    </tr>
    <tr>      <td class='from'>220 S</td>      <td class='target'><a href='standards.htm#standard_s220'>No prefix for global type.</a></td>    </tr>
    <tr>      <td class='from'>221 S</td>      <td class='target'><a href='standards.htm#standard_s221'>Start of class/struct/union/enum lower case.</a></td>    </tr>
    <tr>      <td class='from'>222 S</td>      <td class='target'><a href='standards.htm#standard_s222'>Start of variable is upper case.</a></td>    </tr>
    <tr>      <td class='from'>223 S</td>      <td class='target'><a href='standards.htm#standard_s223'>No prefix for global function.</a></td>    </tr>
    <tr>      <td class='from'>224 S</td>      <td class='target'><a href='standards.htm#standard_s224'>Start of enumeration is upper case.</a></td>    </tr>
    <tr>      <td class='from'>225 S</td>      <td class='target'><a href='standards.htm#standard_s225'>Inappropriate file extension.</a></td>    </tr>
    <tr>      <td class='from'>238 S</td>      <td class='target'><a href='standards.htm#standard_s238'>Number of templates exceeds ***.</a></td>    </tr>
    <tr>      <td class='from'>252 S</td>      <td class='target'><a href='standards.htm#standard_s252'>Lower case suffix to literal number.</a></td>    </tr>
    <tr>      <td class='from'>256 S</td>      <td class='target'><a href='standards.htm#standard_s256'>Procedure exceeds *** source lines of code.</a></td>    </tr>
    <tr>      <td class='from'>258 S</td>      <td class='target'><a href='standards.htm#standard_s258'>More than one class in header file.</a></td>    </tr>
    <tr>      <td class='from'>259 S</td>      <td class='target'><a href='standards.htm#standard_s259'>Statement not on new line (added by Testbed).</a></td>    </tr>
    <tr>      <td class='from'>267 S</td>      <td class='target'><a href='standards.htm#standard_s267'>Hexadecimal number with lower case char.</a></td>    </tr>
    <tr>      <td class='from'>274 S</td>      <td class='target'><a href='standards.htm#standard_s274'>Name found with length less than ***.</a></td>    </tr>
    <tr>      <td class='from'>289 S</td>      <td class='target'><a href='standards.htm#standard_s289'>Header file name does not include class name.</a></td>    </tr>
    <tr>      <td class='from'>290 S</td>      <td class='target'><a href='standards.htm#standard_s290'>File name does not contain defined class name.</a></td>    </tr>
    <tr>      <td class='from'>291 S</td>      <td class='target'><a href='standards.htm#standard_s291'>First parameter not on same line as function.</a></td>    </tr>
    <tr>      <td class='from'>292 S</td>      <td class='target'><a href='standards.htm#standard_s292'>No space between #include and filename.</a></td>    </tr>
    <tr>      <td class='from'>297 S</td>      <td class='target'><a href='standards.htm#standard_s297'>Inline member has more than *** source lines.</a></td>    </tr>
    <tr>      <td class='from'>300 S</td>      <td class='target'><a href='standards.htm#standard_s300'>Filename extension is not .cpp.</a></td>    </tr>
    <tr>      <td class='from'>301 S</td>      <td class='target'><a href='standards.htm#standard_s301'>} not aligned vertically below {.</a></td>    </tr>
    <tr>      <td class='from'>309 S</td>      <td class='target'><a href='standards.htm#standard_s309'>* or &amp; not attached to type in declaration.</a></td>    </tr>
    <tr>      <td class='from'>312 S</td>      <td class='target'><a href='standards.htm#standard_s312'>Function name is not all lower case.</a></td>    </tr>
    <tr>      <td class='from'>313 S</td>      <td class='target'><a href='standards.htm#standard_s313'>Variable name is not all lower case.</a></td>    </tr>
    <tr>      <td class='from'>315 S</td>      <td class='target'><a href='standards.htm#standard_s315'>Blank before/after . operator.</a></td>    </tr>
    <tr>      <td class='from'>317 S</td>      <td class='target'><a href='standards.htm#standard_s317'>Typedef name starts with lower case letter.</a></td>    </tr>
    <tr>      <td class='from'>318 S</td>      <td class='target'><a href='standards.htm#standard_s318'>Name letters after first not lower case.</a></td>    </tr>
    <tr>      <td class='from'>349 S</td>      <td class='target'><a href='standards.htm#standard_s349'>Enumeration is not all lower case.</a></td>    </tr>
    <tr>      <td class='from'>350 S</td>      <td class='target'><a href='standards.htm#standard_s350'>Const variable is not all lower case.</a></td>    </tr>
    <tr>      <td class='from'>365 S</td>      <td class='target'><a href='standards.htm#standard_s365'>Hexadecimal number with upper case char.</a></td>    </tr>
    <tr>      <td class='from'>369 S</td>      <td class='target'><a href='standards.htm#standard_s369'>Name found with length greater than ***.</a></td>    </tr>
    <tr>      <td class='from'>370 S</td>      <td class='target'><a href='standards.htm#standard_s370'>If nest depth greater than ***.</a></td>    </tr>
    <tr>      <td class='from'>371 S</td>      <td class='target'><a href='standards.htm#standard_s371'>No space after comma in parameter list.</a></td>    </tr>
    <tr>      <td class='from'>372 S</td>      <td class='target'><a href='standards.htm#standard_s372'>* or &amp; not attached to name in declaration.</a></td>    </tr>
    <tr>      <td class='from'>379 S</td>      <td class='target'><a href='standards.htm#standard_s379'>Macro exceeds *** continuation lines.</a></td>    </tr>
    <tr>      <td class='from'>380 S</td>      <td class='target'><a href='standards.htm#standard_s380'>Enumeration element not on a new line.</a></td>    </tr>
    <tr>      <td class='from'>386 S</td>      <td class='target'><a href='standards.htm#standard_s386'>Less than *** blank lines separating procs.</a></td>    </tr>
    <tr>      <td class='from'>472 S</td>      <td class='target'><a href='standards.htm#standard_s472'>No comment after declaration.</a></td>    </tr>
    <tr>      <td class='from'>474 S</td>      <td class='target'><a href='standards.htm#standard_s474'>Enum name is not all upper case.</a></td>    </tr>
    <tr>      <td class='from'>492 S</td>      <td class='target'><a href='standards.htm#standard_s492'>Parameter not declared on new line.</a></td>    </tr>
    <tr>      <td class='from'>504 S</td>      <td class='target'><a href='standards.htm#standard_s504'>Space required between &gt; and &gt;.</a></td>    </tr>
    <tr>      <td class='from'>515 S</td>      <td class='target'><a href='standards.htm#standard_s515'>More than one variable in declaration.</a></td>    </tr>
    <tr>      <td class='from'>579 S</td>      <td class='target'><a href='standards.htm#standard_s579'>More than one variable per declaration.</a></td>    </tr>
    <tr>      <td class='from'>596 S</td>      <td class='target'><a href='standards.htm#standard_s596'>Namespace name starts with lower case letter.</a></td>    </tr>
    <tr>      <td class='from'>3 Q</td>      <td class='target'><a href='standards.htm#standard_q3'>Filename contains upper case letters.</a></td>    </tr>
    <tr>      <td class='from'>4 Q</td>      <td class='target'><a href='standards.htm#standard_q4'>Included file has path.</a></td>    </tr>
    <tr>      <td class='from'>1 Z</td>      <td class='target'><a href='standards.htm#standard_z1'>File exceeds required size.</a></td>    </tr>
    <tr>      <td class='from'>1 H</td>      <td class='target'><a href='standards.htm#standard_h1'>Global Variable does not conform to style g_&lt;name&gt;.</a></td>    </tr>
    <tr>      <td class='from'>2 H</td>      <td class='target'><a href='standards.htm#standard_h2'>Class Member does not conform to style m_&lt;name&gt;.</a></td>    </tr>
    <tr>      <td class='from'>3 H</td>      <td class='target'><a href='standards.htm#standard_h3'>Enum Element does not conform to style e_&lt;name&gt;.</a></td>    </tr>
    <tr>      <td class='from'>4 H</td>      <td class='target'><a href='standards.htm#standard_h4'>Class Name does not conform to style C&lt;name&gt;.</a></td>    </tr>
    <tr>      <td class='from'>5 H</td>      <td class='target'><a href='standards.htm#standard_h5'>Namespace Name does not conform to style N&lt;name&gt;.</a></td>    </tr>
    <tr>      <td class='from'>6 H</td>      <td class='target'><a href='standards.htm#standard_h6'>Pointer does not conform to style p_&lt;name&gt;.</a></td>    </tr>
    <tr>      <td class='from'>7 H</td>      <td class='target'><a href='standards.htm#standard_h7'>Enum Name does not conform to style E&lt;name&gt;.</a></td>    </tr>
    <tr>      <td class='from'>8 H</td>      <td class='target'><a href='standards.htm#standard_h8'>Global Func Name does not conform to style &lt;file&gt;_&lt;name&gt;.</a></td>    </tr>
  </table>
</div><!-- xref -->
</div><!-- body_block -->
    </div><!-- body-content -->
    <div class='footer'><p>     &copy; Copyright 2014 LDRA Ltd. All rights reserved.<br />     <span>Version 9.4.4, generated on 25th April 2014 at 08:31:23</span>    </p></div>
  </div><!-- body -->
</body>
</html>
